import * as _20 from "../confio/proofs";
export declare const ics23: {
    hashOpFromJSON(object: any): _20.HashOp;
    hashOpToJSON(object: _20.HashOp): string;
    lengthOpFromJSON(object: any): _20.LengthOp;
    lengthOpToJSON(object: _20.LengthOp): string;
    protobufPackage: "ics23";
    HashOp: typeof _20.HashOp;
    HashOpSDKType: typeof _20.HashOp;
    HashOpAmino: typeof _20.HashOp;
    LengthOp: typeof _20.LengthOp;
    LengthOpSDKType: typeof _20.LengthOp;
    LengthOpAmino: typeof _20.LengthOp;
    ExistenceProof: {
        typeUrl: string;
        encode(message: _20.ExistenceProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _20.ExistenceProof;
        fromJSON(object: any): _20.ExistenceProof;
        toJSON(message: _20.ExistenceProof): unknown;
        fromPartial(object: Partial<_20.ExistenceProof>): _20.ExistenceProof;
        fromAmino(object: _20.ExistenceProofAmino): _20.ExistenceProof;
        toAmino(message: _20.ExistenceProof): _20.ExistenceProofAmino;
        fromAminoMsg(object: _20.ExistenceProofAminoMsg): _20.ExistenceProof;
        fromProtoMsg(message: _20.ExistenceProofProtoMsg): _20.ExistenceProof;
        toProto(message: _20.ExistenceProof): Uint8Array;
        toProtoMsg(message: _20.ExistenceProof): _20.ExistenceProofProtoMsg;
    };
    NonExistenceProof: {
        typeUrl: string;
        encode(message: _20.NonExistenceProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _20.NonExistenceProof;
        fromJSON(object: any): _20.NonExistenceProof;
        toJSON(message: _20.NonExistenceProof): unknown;
        fromPartial(object: Partial<_20.NonExistenceProof>): _20.NonExistenceProof;
        fromAmino(object: _20.NonExistenceProofAmino): _20.NonExistenceProof;
        toAmino(message: _20.NonExistenceProof): _20.NonExistenceProofAmino;
        fromAminoMsg(object: _20.NonExistenceProofAminoMsg): _20.NonExistenceProof;
        fromProtoMsg(message: _20.NonExistenceProofProtoMsg): _20.NonExistenceProof;
        toProto(message: _20.NonExistenceProof): Uint8Array;
        toProtoMsg(message: _20.NonExistenceProof): _20.NonExistenceProofProtoMsg;
    };
    CommitmentProof: {
        typeUrl: string;
        encode(message: _20.CommitmentProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _20.CommitmentProof;
        fromJSON(object: any): _20.CommitmentProof;
        toJSON(message: _20.CommitmentProof): unknown;
        fromPartial(object: Partial<_20.CommitmentProof>): _20.CommitmentProof;
        fromAmino(object: _20.CommitmentProofAmino): _20.CommitmentProof;
        toAmino(message: _20.CommitmentProof): _20.CommitmentProofAmino;
        fromAminoMsg(object: _20.CommitmentProofAminoMsg): _20.CommitmentProof;
        fromProtoMsg(message: _20.CommitmentProofProtoMsg): _20.CommitmentProof;
        toProto(message: _20.CommitmentProof): Uint8Array;
        toProtoMsg(message: _20.CommitmentProof): _20.CommitmentProofProtoMsg;
    };
    LeafOp: {
        typeUrl: string;
        encode(message: _20.LeafOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _20.LeafOp;
        fromJSON(object: any): _20.LeafOp;
        toJSON(message: _20.LeafOp): unknown;
        fromPartial(object: Partial<_20.LeafOp>): _20.LeafOp;
        fromAmino(object: _20.LeafOpAmino): _20.LeafOp;
        toAmino(message: _20.LeafOp): _20.LeafOpAmino;
        fromAminoMsg(object: _20.LeafOpAminoMsg): _20.LeafOp;
        fromProtoMsg(message: _20.LeafOpProtoMsg): _20.LeafOp;
        toProto(message: _20.LeafOp): Uint8Array;
        toProtoMsg(message: _20.LeafOp): _20.LeafOpProtoMsg;
    };
    InnerOp: {
        typeUrl: string;
        encode(message: _20.InnerOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _20.InnerOp;
        fromJSON(object: any): _20.InnerOp;
        toJSON(message: _20.InnerOp): unknown;
        fromPartial(object: Partial<_20.InnerOp>): _20.InnerOp;
        fromAmino(object: _20.InnerOpAmino): _20.InnerOp;
        toAmino(message: _20.InnerOp): _20.InnerOpAmino;
        fromAminoMsg(object: _20.InnerOpAminoMsg): _20.InnerOp;
        fromProtoMsg(message: _20.InnerOpProtoMsg): _20.InnerOp;
        toProto(message: _20.InnerOp): Uint8Array;
        toProtoMsg(message: _20.InnerOp): _20.InnerOpProtoMsg;
    };
    ProofSpec: {
        typeUrl: string;
        encode(message: _20.ProofSpec, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _20.ProofSpec;
        fromJSON(object: any): _20.ProofSpec;
        toJSON(message: _20.ProofSpec): unknown;
        fromPartial(object: Partial<_20.ProofSpec>): _20.ProofSpec;
        fromAmino(object: _20.ProofSpecAmino): _20.ProofSpec;
        toAmino(message: _20.ProofSpec): _20.ProofSpecAmino;
        fromAminoMsg(object: _20.ProofSpecAminoMsg): _20.ProofSpec;
        fromProtoMsg(message: _20.ProofSpecProtoMsg): _20.ProofSpec;
        toProto(message: _20.ProofSpec): Uint8Array;
        toProtoMsg(message: _20.ProofSpec): _20.ProofSpecProtoMsg;
    };
    InnerSpec: {
        typeUrl: string;
        encode(message: _20.InnerSpec, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _20.InnerSpec;
        fromJSON(object: any): _20.InnerSpec;
        toJSON(message: _20.InnerSpec): unknown;
        fromPartial(object: Partial<_20.InnerSpec>): _20.InnerSpec;
        fromAmino(object: _20.InnerSpecAmino): _20.InnerSpec;
        toAmino(message: _20.InnerSpec): _20.InnerSpecAmino;
        fromAminoMsg(object: _20.InnerSpecAminoMsg): _20.InnerSpec;
        fromProtoMsg(message: _20.InnerSpecProtoMsg): _20.InnerSpec;
        toProto(message: _20.InnerSpec): Uint8Array;
        toProtoMsg(message: _20.InnerSpec): _20.InnerSpecProtoMsg;
    };
    BatchProof: {
        typeUrl: string;
        encode(message: _20.BatchProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _20.BatchProof;
        fromJSON(object: any): _20.BatchProof;
        toJSON(message: _20.BatchProof): unknown;
        fromPartial(object: Partial<_20.BatchProof>): _20.BatchProof;
        fromAmino(object: _20.BatchProofAmino): _20.BatchProof;
        toAmino(message: _20.BatchProof): _20.BatchProofAmino;
        fromAminoMsg(object: _20.BatchProofAminoMsg): _20.BatchProof;
        fromProtoMsg(message: _20.BatchProofProtoMsg): _20.BatchProof;
        toProto(message: _20.BatchProof): Uint8Array;
        toProtoMsg(message: _20.BatchProof): _20.BatchProofProtoMsg;
    };
    BatchEntry: {
        typeUrl: string;
        encode(message: _20.BatchEntry, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _20.BatchEntry;
        fromJSON(object: any): _20.BatchEntry;
        toJSON(message: _20.BatchEntry): unknown;
        fromPartial(object: Partial<_20.BatchEntry>): _20.BatchEntry;
        fromAmino(object: _20.BatchEntryAmino): _20.BatchEntry;
        toAmino(message: _20.BatchEntry): _20.BatchEntryAmino;
        fromAminoMsg(object: _20.BatchEntryAminoMsg): _20.BatchEntry;
        fromProtoMsg(message: _20.BatchEntryProtoMsg): _20.BatchEntry;
        toProto(message: _20.BatchEntry): Uint8Array;
        toProtoMsg(message: _20.BatchEntry): _20.BatchEntryProtoMsg;
    };
    CompressedBatchProof: {
        typeUrl: string;
        encode(message: _20.CompressedBatchProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _20.CompressedBatchProof;
        fromJSON(object: any): _20.CompressedBatchProof;
        toJSON(message: _20.CompressedBatchProof): unknown;
        fromPartial(object: Partial<_20.CompressedBatchProof>): _20.CompressedBatchProof;
        fromAmino(object: _20.CompressedBatchProofAmino): _20.CompressedBatchProof;
        toAmino(message: _20.CompressedBatchProof): _20.CompressedBatchProofAmino;
        fromAminoMsg(object: _20.CompressedBatchProofAminoMsg): _20.CompressedBatchProof;
        fromProtoMsg(message: _20.CompressedBatchProofProtoMsg): _20.CompressedBatchProof;
        toProto(message: _20.CompressedBatchProof): Uint8Array;
        toProtoMsg(message: _20.CompressedBatchProof): _20.CompressedBatchProofProtoMsg;
    };
    CompressedBatchEntry: {
        typeUrl: string;
        encode(message: _20.CompressedBatchEntry, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _20.CompressedBatchEntry;
        fromJSON(object: any): _20.CompressedBatchEntry;
        toJSON(message: _20.CompressedBatchEntry): unknown;
        fromPartial(object: Partial<_20.CompressedBatchEntry>): _20.CompressedBatchEntry;
        fromAmino(object: _20.CompressedBatchEntryAmino): _20.CompressedBatchEntry;
        toAmino(message: _20.CompressedBatchEntry): _20.CompressedBatchEntryAmino;
        fromAminoMsg(object: _20.CompressedBatchEntryAminoMsg): _20.CompressedBatchEntry;
        fromProtoMsg(message: _20.CompressedBatchEntryProtoMsg): _20.CompressedBatchEntry;
        toProto(message: _20.CompressedBatchEntry): Uint8Array;
        toProtoMsg(message: _20.CompressedBatchEntry): _20.CompressedBatchEntryProtoMsg;
    };
    CompressedExistenceProof: {
        typeUrl: string;
        encode(message: _20.CompressedExistenceProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _20.CompressedExistenceProof;
        fromJSON(object: any): _20.CompressedExistenceProof;
        toJSON(message: _20.CompressedExistenceProof): unknown;
        fromPartial(object: Partial<_20.CompressedExistenceProof>): _20.CompressedExistenceProof;
        fromAmino(object: _20.CompressedExistenceProofAmino): _20.CompressedExistenceProof;
        toAmino(message: _20.CompressedExistenceProof): _20.CompressedExistenceProofAmino;
        fromAminoMsg(object: _20.CompressedExistenceProofAminoMsg): _20.CompressedExistenceProof;
        fromProtoMsg(message: _20.CompressedExistenceProofProtoMsg): _20.CompressedExistenceProof;
        toProto(message: _20.CompressedExistenceProof): Uint8Array;
        toProtoMsg(message: _20.CompressedExistenceProof): _20.CompressedExistenceProofProtoMsg;
    };
    CompressedNonExistenceProof: {
        typeUrl: string;
        encode(message: _20.CompressedNonExistenceProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _20.CompressedNonExistenceProof;
        fromJSON(object: any): _20.CompressedNonExistenceProof;
        toJSON(message: _20.CompressedNonExistenceProof): unknown;
        fromPartial(object: Partial<_20.CompressedNonExistenceProof>): _20.CompressedNonExistenceProof;
        fromAmino(object: _20.CompressedNonExistenceProofAmino): _20.CompressedNonExistenceProof;
        toAmino(message: _20.CompressedNonExistenceProof): _20.CompressedNonExistenceProofAmino;
        fromAminoMsg(object: _20.CompressedNonExistenceProofAminoMsg): _20.CompressedNonExistenceProof;
        fromProtoMsg(message: _20.CompressedNonExistenceProofProtoMsg): _20.CompressedNonExistenceProof;
        toProto(message: _20.CompressedNonExistenceProof): Uint8Array;
        toProtoMsg(message: _20.CompressedNonExistenceProof): _20.CompressedNonExistenceProofProtoMsg;
    };
};
