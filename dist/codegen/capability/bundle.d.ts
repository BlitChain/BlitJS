import * as _19 from "./v1/capability";
import * as _20 from "./v1/genesis";
export declare namespace capability {
    const v1: {
        protobufPackage: "capability.v1";
        GenesisOwners: {
            typeUrl: string;
            is(o: any): o is _20.GenesisOwners;
            isSDK(o: any): o is _20.GenesisOwnersSDKType;
            isAmino(o: any): o is _20.GenesisOwnersAmino;
            encode(message: _20.GenesisOwners, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _20.GenesisOwners;
            fromJSON(object: any): _20.GenesisOwners;
            toJSON(message: _20.GenesisOwners): unknown;
            fromPartial(object: Partial<_20.GenesisOwners>): _20.GenesisOwners;
            fromAmino(object: _20.GenesisOwnersAmino): _20.GenesisOwners;
            toAmino(message: _20.GenesisOwners): _20.GenesisOwnersAmino;
            fromAminoMsg(object: _20.GenesisOwnersAminoMsg): _20.GenesisOwners;
            fromProtoMsg(message: _20.GenesisOwnersProtoMsg): _20.GenesisOwners;
            toProto(message: _20.GenesisOwners): Uint8Array;
            toProtoMsg(message: _20.GenesisOwners): _20.GenesisOwnersProtoMsg;
        };
        GenesisState: {
            typeUrl: string;
            is(o: any): o is _20.GenesisState;
            isSDK(o: any): o is _20.GenesisStateSDKType;
            isAmino(o: any): o is _20.GenesisStateAmino;
            encode(message: _20.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _20.GenesisState;
            fromJSON(object: any): _20.GenesisState;
            toJSON(message: _20.GenesisState): unknown;
            fromPartial(object: Partial<_20.GenesisState>): _20.GenesisState;
            fromAmino(object: _20.GenesisStateAmino): _20.GenesisState;
            toAmino(message: _20.GenesisState): _20.GenesisStateAmino;
            fromAminoMsg(object: _20.GenesisStateAminoMsg): _20.GenesisState;
            fromProtoMsg(message: _20.GenesisStateProtoMsg): _20.GenesisState;
            toProto(message: _20.GenesisState): Uint8Array;
            toProtoMsg(message: _20.GenesisState): _20.GenesisStateProtoMsg;
        };
        Capability: {
            typeUrl: string;
            is(o: any): o is _19.Capability;
            isSDK(o: any): o is _19.CapabilitySDKType;
            isAmino(o: any): o is _19.CapabilityAmino;
            encode(message: _19.Capability, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _19.Capability;
            fromJSON(object: any): _19.Capability;
            toJSON(message: _19.Capability): unknown;
            fromPartial(object: Partial<_19.Capability>): _19.Capability;
            fromAmino(object: _19.CapabilityAmino): _19.Capability;
            toAmino(message: _19.Capability): _19.CapabilityAmino;
            fromAminoMsg(object: _19.CapabilityAminoMsg): _19.Capability;
            fromProtoMsg(message: _19.CapabilityProtoMsg): _19.Capability;
            toProto(message: _19.Capability): Uint8Array;
            toProtoMsg(message: _19.Capability): _19.CapabilityProtoMsg;
        };
        Owner: {
            typeUrl: string;
            is(o: any): o is _19.Owner;
            isSDK(o: any): o is _19.OwnerSDKType;
            isAmino(o: any): o is _19.OwnerAmino;
            encode(message: _19.Owner, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _19.Owner;
            fromJSON(object: any): _19.Owner;
            toJSON(message: _19.Owner): unknown;
            fromPartial(object: Partial<_19.Owner>): _19.Owner;
            fromAmino(object: _19.OwnerAmino): _19.Owner;
            toAmino(message: _19.Owner): _19.OwnerAmino;
            fromAminoMsg(object: _19.OwnerAminoMsg): _19.Owner;
            fromProtoMsg(message: _19.OwnerProtoMsg): _19.Owner;
            toProto(message: _19.Owner): Uint8Array;
            toProtoMsg(message: _19.Owner): _19.OwnerProtoMsg;
        };
        CapabilityOwners: {
            typeUrl: string;
            is(o: any): o is _19.CapabilityOwners;
            isSDK(o: any): o is _19.CapabilityOwnersSDKType;
            isAmino(o: any): o is _19.CapabilityOwnersAmino;
            encode(message: _19.CapabilityOwners, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _19.CapabilityOwners;
            fromJSON(object: any): _19.CapabilityOwners;
            toJSON(message: _19.CapabilityOwners): unknown;
            fromPartial(object: Partial<_19.CapabilityOwners>): _19.CapabilityOwners;
            fromAmino(object: _19.CapabilityOwnersAmino): _19.CapabilityOwners;
            toAmino(message: _19.CapabilityOwners): _19.CapabilityOwnersAmino;
            fromAminoMsg(object: _19.CapabilityOwnersAminoMsg): _19.CapabilityOwners;
            fromProtoMsg(message: _19.CapabilityOwnersProtoMsg): _19.CapabilityOwners;
            toProto(message: _19.CapabilityOwners): Uint8Array;
            toProtoMsg(message: _19.CapabilityOwners): _19.CapabilityOwnersProtoMsg;
        };
    };
}
