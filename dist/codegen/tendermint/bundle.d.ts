import * as _122 from "./abci/types";
import * as _123 from "./crypto/keys";
import * as _124 from "./crypto/proof";
import * as _125 from "./libs/bits/types";
import * as _126 from "./p2p/types";
import * as _127 from "./types/block";
import * as _128 from "./types/evidence";
import * as _129 from "./types/params";
import * as _130 from "./types/types";
import * as _131 from "./types/validator";
import * as _132 from "./version/types";
export declare namespace tendermint {
    const abci: {
        checkTxTypeFromJSON(object: any): _122.CheckTxType;
        checkTxTypeToJSON(object: _122.CheckTxType): string;
        responseOfferSnapshot_ResultFromJSON(object: any): _122.ResponseOfferSnapshot_Result;
        responseOfferSnapshot_ResultToJSON(object: _122.ResponseOfferSnapshot_Result): string;
        responseApplySnapshotChunk_ResultFromJSON(object: any): _122.ResponseApplySnapshotChunk_Result;
        responseApplySnapshotChunk_ResultToJSON(object: _122.ResponseApplySnapshotChunk_Result): string;
        responseProcessProposal_ProposalStatusFromJSON(object: any): _122.ResponseProcessProposal_ProposalStatus;
        responseProcessProposal_ProposalStatusToJSON(object: _122.ResponseProcessProposal_ProposalStatus): string;
        misbehaviorTypeFromJSON(object: any): _122.MisbehaviorType;
        misbehaviorTypeToJSON(object: _122.MisbehaviorType): string;
        protobufPackage: "tendermint.abci";
        CheckTxType: typeof _122.CheckTxType;
        CheckTxTypeSDKType: typeof _122.CheckTxType;
        CheckTxTypeAmino: typeof _122.CheckTxType;
        ResponseOfferSnapshot_Result: typeof _122.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultSDKType: typeof _122.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultAmino: typeof _122.ResponseOfferSnapshot_Result;
        ResponseApplySnapshotChunk_Result: typeof _122.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultSDKType: typeof _122.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultAmino: typeof _122.ResponseApplySnapshotChunk_Result;
        ResponseProcessProposal_ProposalStatus: typeof _122.ResponseProcessProposal_ProposalStatus;
        ResponseProcessProposal_ProposalStatusSDKType: typeof _122.ResponseProcessProposal_ProposalStatus;
        ResponseProcessProposal_ProposalStatusAmino: typeof _122.ResponseProcessProposal_ProposalStatus;
        MisbehaviorType: typeof _122.MisbehaviorType;
        MisbehaviorTypeSDKType: typeof _122.MisbehaviorType;
        MisbehaviorTypeAmino: typeof _122.MisbehaviorType;
        Request: {
            typeUrl: string;
            encode(message: _122.Request, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.Request;
            fromJSON(object: any): _122.Request;
            toJSON(message: _122.Request): unknown;
            fromPartial(object: Partial<_122.Request>): _122.Request;
            fromSDK(object: _122.RequestSDKType): _122.Request;
            toSDK(message: _122.Request): _122.RequestSDKType;
            fromAmino(object: _122.RequestAmino): _122.Request;
            toAmino(message: _122.Request): _122.RequestAmino;
            fromAminoMsg(object: _122.RequestAminoMsg): _122.Request;
            fromProtoMsg(message: _122.RequestProtoMsg): _122.Request;
            toProto(message: _122.Request): Uint8Array;
            toProtoMsg(message: _122.Request): _122.RequestProtoMsg;
        };
        RequestEcho: {
            typeUrl: string;
            encode(message: _122.RequestEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.RequestEcho;
            fromJSON(object: any): _122.RequestEcho;
            toJSON(message: _122.RequestEcho): unknown;
            fromPartial(object: Partial<_122.RequestEcho>): _122.RequestEcho;
            fromSDK(object: _122.RequestEchoSDKType): _122.RequestEcho;
            toSDK(message: _122.RequestEcho): _122.RequestEchoSDKType;
            fromAmino(object: _122.RequestEchoAmino): _122.RequestEcho;
            toAmino(message: _122.RequestEcho): _122.RequestEchoAmino;
            fromAminoMsg(object: _122.RequestEchoAminoMsg): _122.RequestEcho;
            fromProtoMsg(message: _122.RequestEchoProtoMsg): _122.RequestEcho;
            toProto(message: _122.RequestEcho): Uint8Array;
            toProtoMsg(message: _122.RequestEcho): _122.RequestEchoProtoMsg;
        };
        RequestFlush: {
            typeUrl: string;
            encode(_: _122.RequestFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.RequestFlush;
            fromJSON(_: any): _122.RequestFlush;
            toJSON(_: _122.RequestFlush): unknown;
            fromPartial(_: Partial<_122.RequestFlush>): _122.RequestFlush;
            fromSDK(_: _122.RequestFlushSDKType): _122.RequestFlush;
            toSDK(_: _122.RequestFlush): _122.RequestFlushSDKType;
            fromAmino(_: _122.RequestFlushAmino): _122.RequestFlush;
            toAmino(_: _122.RequestFlush): _122.RequestFlushAmino;
            fromAminoMsg(object: _122.RequestFlushAminoMsg): _122.RequestFlush;
            fromProtoMsg(message: _122.RequestFlushProtoMsg): _122.RequestFlush;
            toProto(message: _122.RequestFlush): Uint8Array;
            toProtoMsg(message: _122.RequestFlush): _122.RequestFlushProtoMsg;
        };
        RequestInfo: {
            typeUrl: string;
            encode(message: _122.RequestInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.RequestInfo;
            fromJSON(object: any): _122.RequestInfo;
            toJSON(message: _122.RequestInfo): unknown;
            fromPartial(object: Partial<_122.RequestInfo>): _122.RequestInfo;
            fromSDK(object: _122.RequestInfoSDKType): _122.RequestInfo;
            toSDK(message: _122.RequestInfo): _122.RequestInfoSDKType;
            fromAmino(object: _122.RequestInfoAmino): _122.RequestInfo;
            toAmino(message: _122.RequestInfo): _122.RequestInfoAmino;
            fromAminoMsg(object: _122.RequestInfoAminoMsg): _122.RequestInfo;
            fromProtoMsg(message: _122.RequestInfoProtoMsg): _122.RequestInfo;
            toProto(message: _122.RequestInfo): Uint8Array;
            toProtoMsg(message: _122.RequestInfo): _122.RequestInfoProtoMsg;
        };
        RequestInitChain: {
            typeUrl: string;
            encode(message: _122.RequestInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.RequestInitChain;
            fromJSON(object: any): _122.RequestInitChain;
            toJSON(message: _122.RequestInitChain): unknown;
            fromPartial(object: Partial<_122.RequestInitChain>): _122.RequestInitChain;
            fromSDK(object: _122.RequestInitChainSDKType): _122.RequestInitChain;
            toSDK(message: _122.RequestInitChain): _122.RequestInitChainSDKType;
            fromAmino(object: _122.RequestInitChainAmino): _122.RequestInitChain;
            toAmino(message: _122.RequestInitChain): _122.RequestInitChainAmino;
            fromAminoMsg(object: _122.RequestInitChainAminoMsg): _122.RequestInitChain;
            fromProtoMsg(message: _122.RequestInitChainProtoMsg): _122.RequestInitChain;
            toProto(message: _122.RequestInitChain): Uint8Array;
            toProtoMsg(message: _122.RequestInitChain): _122.RequestInitChainProtoMsg;
        };
        RequestQuery: {
            typeUrl: string;
            encode(message: _122.RequestQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.RequestQuery;
            fromJSON(object: any): _122.RequestQuery;
            toJSON(message: _122.RequestQuery): unknown;
            fromPartial(object: Partial<_122.RequestQuery>): _122.RequestQuery;
            fromSDK(object: _122.RequestQuerySDKType): _122.RequestQuery;
            toSDK(message: _122.RequestQuery): _122.RequestQuerySDKType;
            fromAmino(object: _122.RequestQueryAmino): _122.RequestQuery;
            toAmino(message: _122.RequestQuery): _122.RequestQueryAmino;
            fromAminoMsg(object: _122.RequestQueryAminoMsg): _122.RequestQuery;
            fromProtoMsg(message: _122.RequestQueryProtoMsg): _122.RequestQuery;
            toProto(message: _122.RequestQuery): Uint8Array;
            toProtoMsg(message: _122.RequestQuery): _122.RequestQueryProtoMsg;
        };
        RequestBeginBlock: {
            typeUrl: string;
            encode(message: _122.RequestBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.RequestBeginBlock;
            fromJSON(object: any): _122.RequestBeginBlock;
            toJSON(message: _122.RequestBeginBlock): unknown;
            fromPartial(object: Partial<_122.RequestBeginBlock>): _122.RequestBeginBlock;
            fromSDK(object: _122.RequestBeginBlockSDKType): _122.RequestBeginBlock;
            toSDK(message: _122.RequestBeginBlock): _122.RequestBeginBlockSDKType;
            fromAmino(object: _122.RequestBeginBlockAmino): _122.RequestBeginBlock;
            toAmino(message: _122.RequestBeginBlock): _122.RequestBeginBlockAmino;
            fromAminoMsg(object: _122.RequestBeginBlockAminoMsg): _122.RequestBeginBlock;
            fromProtoMsg(message: _122.RequestBeginBlockProtoMsg): _122.RequestBeginBlock;
            toProto(message: _122.RequestBeginBlock): Uint8Array;
            toProtoMsg(message: _122.RequestBeginBlock): _122.RequestBeginBlockProtoMsg;
        };
        RequestCheckTx: {
            typeUrl: string;
            encode(message: _122.RequestCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.RequestCheckTx;
            fromJSON(object: any): _122.RequestCheckTx;
            toJSON(message: _122.RequestCheckTx): unknown;
            fromPartial(object: Partial<_122.RequestCheckTx>): _122.RequestCheckTx;
            fromSDK(object: _122.RequestCheckTxSDKType): _122.RequestCheckTx;
            toSDK(message: _122.RequestCheckTx): _122.RequestCheckTxSDKType;
            fromAmino(object: _122.RequestCheckTxAmino): _122.RequestCheckTx;
            toAmino(message: _122.RequestCheckTx): _122.RequestCheckTxAmino;
            fromAminoMsg(object: _122.RequestCheckTxAminoMsg): _122.RequestCheckTx;
            fromProtoMsg(message: _122.RequestCheckTxProtoMsg): _122.RequestCheckTx;
            toProto(message: _122.RequestCheckTx): Uint8Array;
            toProtoMsg(message: _122.RequestCheckTx): _122.RequestCheckTxProtoMsg;
        };
        RequestDeliverTx: {
            typeUrl: string;
            encode(message: _122.RequestDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.RequestDeliverTx;
            fromJSON(object: any): _122.RequestDeliverTx;
            toJSON(message: _122.RequestDeliverTx): unknown;
            fromPartial(object: Partial<_122.RequestDeliverTx>): _122.RequestDeliverTx;
            fromSDK(object: _122.RequestDeliverTxSDKType): _122.RequestDeliverTx;
            toSDK(message: _122.RequestDeliverTx): _122.RequestDeliverTxSDKType;
            fromAmino(object: _122.RequestDeliverTxAmino): _122.RequestDeliverTx;
            toAmino(message: _122.RequestDeliverTx): _122.RequestDeliverTxAmino;
            fromAminoMsg(object: _122.RequestDeliverTxAminoMsg): _122.RequestDeliverTx;
            fromProtoMsg(message: _122.RequestDeliverTxProtoMsg): _122.RequestDeliverTx;
            toProto(message: _122.RequestDeliverTx): Uint8Array;
            toProtoMsg(message: _122.RequestDeliverTx): _122.RequestDeliverTxProtoMsg;
        };
        RequestEndBlock: {
            typeUrl: string;
            encode(message: _122.RequestEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.RequestEndBlock;
            fromJSON(object: any): _122.RequestEndBlock;
            toJSON(message: _122.RequestEndBlock): unknown;
            fromPartial(object: Partial<_122.RequestEndBlock>): _122.RequestEndBlock;
            fromSDK(object: _122.RequestEndBlockSDKType): _122.RequestEndBlock;
            toSDK(message: _122.RequestEndBlock): _122.RequestEndBlockSDKType;
            fromAmino(object: _122.RequestEndBlockAmino): _122.RequestEndBlock;
            toAmino(message: _122.RequestEndBlock): _122.RequestEndBlockAmino;
            fromAminoMsg(object: _122.RequestEndBlockAminoMsg): _122.RequestEndBlock;
            fromProtoMsg(message: _122.RequestEndBlockProtoMsg): _122.RequestEndBlock;
            toProto(message: _122.RequestEndBlock): Uint8Array;
            toProtoMsg(message: _122.RequestEndBlock): _122.RequestEndBlockProtoMsg;
        };
        RequestCommit: {
            typeUrl: string;
            encode(_: _122.RequestCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.RequestCommit;
            fromJSON(_: any): _122.RequestCommit;
            toJSON(_: _122.RequestCommit): unknown;
            fromPartial(_: Partial<_122.RequestCommit>): _122.RequestCommit;
            fromSDK(_: _122.RequestCommitSDKType): _122.RequestCommit;
            toSDK(_: _122.RequestCommit): _122.RequestCommitSDKType;
            fromAmino(_: _122.RequestCommitAmino): _122.RequestCommit;
            toAmino(_: _122.RequestCommit): _122.RequestCommitAmino;
            fromAminoMsg(object: _122.RequestCommitAminoMsg): _122.RequestCommit;
            fromProtoMsg(message: _122.RequestCommitProtoMsg): _122.RequestCommit;
            toProto(message: _122.RequestCommit): Uint8Array;
            toProtoMsg(message: _122.RequestCommit): _122.RequestCommitProtoMsg;
        };
        RequestListSnapshots: {
            typeUrl: string;
            encode(_: _122.RequestListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.RequestListSnapshots;
            fromJSON(_: any): _122.RequestListSnapshots;
            toJSON(_: _122.RequestListSnapshots): unknown;
            fromPartial(_: Partial<_122.RequestListSnapshots>): _122.RequestListSnapshots;
            fromSDK(_: _122.RequestListSnapshotsSDKType): _122.RequestListSnapshots;
            toSDK(_: _122.RequestListSnapshots): _122.RequestListSnapshotsSDKType;
            fromAmino(_: _122.RequestListSnapshotsAmino): _122.RequestListSnapshots;
            toAmino(_: _122.RequestListSnapshots): _122.RequestListSnapshotsAmino;
            fromAminoMsg(object: _122.RequestListSnapshotsAminoMsg): _122.RequestListSnapshots;
            fromProtoMsg(message: _122.RequestListSnapshotsProtoMsg): _122.RequestListSnapshots;
            toProto(message: _122.RequestListSnapshots): Uint8Array;
            toProtoMsg(message: _122.RequestListSnapshots): _122.RequestListSnapshotsProtoMsg;
        };
        RequestOfferSnapshot: {
            typeUrl: string;
            encode(message: _122.RequestOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.RequestOfferSnapshot;
            fromJSON(object: any): _122.RequestOfferSnapshot;
            toJSON(message: _122.RequestOfferSnapshot): unknown;
            fromPartial(object: Partial<_122.RequestOfferSnapshot>): _122.RequestOfferSnapshot;
            fromSDK(object: _122.RequestOfferSnapshotSDKType): _122.RequestOfferSnapshot;
            toSDK(message: _122.RequestOfferSnapshot): _122.RequestOfferSnapshotSDKType;
            fromAmino(object: _122.RequestOfferSnapshotAmino): _122.RequestOfferSnapshot;
            toAmino(message: _122.RequestOfferSnapshot): _122.RequestOfferSnapshotAmino;
            fromAminoMsg(object: _122.RequestOfferSnapshotAminoMsg): _122.RequestOfferSnapshot;
            fromProtoMsg(message: _122.RequestOfferSnapshotProtoMsg): _122.RequestOfferSnapshot;
            toProto(message: _122.RequestOfferSnapshot): Uint8Array;
            toProtoMsg(message: _122.RequestOfferSnapshot): _122.RequestOfferSnapshotProtoMsg;
        };
        RequestLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _122.RequestLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.RequestLoadSnapshotChunk;
            fromJSON(object: any): _122.RequestLoadSnapshotChunk;
            toJSON(message: _122.RequestLoadSnapshotChunk): unknown;
            fromPartial(object: Partial<_122.RequestLoadSnapshotChunk>): _122.RequestLoadSnapshotChunk;
            fromSDK(object: _122.RequestLoadSnapshotChunkSDKType): _122.RequestLoadSnapshotChunk;
            toSDK(message: _122.RequestLoadSnapshotChunk): _122.RequestLoadSnapshotChunkSDKType;
            fromAmino(object: _122.RequestLoadSnapshotChunkAmino): _122.RequestLoadSnapshotChunk;
            toAmino(message: _122.RequestLoadSnapshotChunk): _122.RequestLoadSnapshotChunkAmino;
            fromAminoMsg(object: _122.RequestLoadSnapshotChunkAminoMsg): _122.RequestLoadSnapshotChunk;
            fromProtoMsg(message: _122.RequestLoadSnapshotChunkProtoMsg): _122.RequestLoadSnapshotChunk;
            toProto(message: _122.RequestLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _122.RequestLoadSnapshotChunk): _122.RequestLoadSnapshotChunkProtoMsg;
        };
        RequestApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _122.RequestApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.RequestApplySnapshotChunk;
            fromJSON(object: any): _122.RequestApplySnapshotChunk;
            toJSON(message: _122.RequestApplySnapshotChunk): unknown;
            fromPartial(object: Partial<_122.RequestApplySnapshotChunk>): _122.RequestApplySnapshotChunk;
            fromSDK(object: _122.RequestApplySnapshotChunkSDKType): _122.RequestApplySnapshotChunk;
            toSDK(message: _122.RequestApplySnapshotChunk): _122.RequestApplySnapshotChunkSDKType;
            fromAmino(object: _122.RequestApplySnapshotChunkAmino): _122.RequestApplySnapshotChunk;
            toAmino(message: _122.RequestApplySnapshotChunk): _122.RequestApplySnapshotChunkAmino;
            fromAminoMsg(object: _122.RequestApplySnapshotChunkAminoMsg): _122.RequestApplySnapshotChunk;
            fromProtoMsg(message: _122.RequestApplySnapshotChunkProtoMsg): _122.RequestApplySnapshotChunk;
            toProto(message: _122.RequestApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _122.RequestApplySnapshotChunk): _122.RequestApplySnapshotChunkProtoMsg;
        };
        RequestPrepareProposal: {
            typeUrl: string;
            encode(message: _122.RequestPrepareProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.RequestPrepareProposal;
            fromJSON(object: any): _122.RequestPrepareProposal;
            toJSON(message: _122.RequestPrepareProposal): unknown;
            fromPartial(object: Partial<_122.RequestPrepareProposal>): _122.RequestPrepareProposal;
            fromSDK(object: _122.RequestPrepareProposalSDKType): _122.RequestPrepareProposal;
            toSDK(message: _122.RequestPrepareProposal): _122.RequestPrepareProposalSDKType;
            fromAmino(object: _122.RequestPrepareProposalAmino): _122.RequestPrepareProposal;
            toAmino(message: _122.RequestPrepareProposal): _122.RequestPrepareProposalAmino;
            fromAminoMsg(object: _122.RequestPrepareProposalAminoMsg): _122.RequestPrepareProposal;
            fromProtoMsg(message: _122.RequestPrepareProposalProtoMsg): _122.RequestPrepareProposal;
            toProto(message: _122.RequestPrepareProposal): Uint8Array;
            toProtoMsg(message: _122.RequestPrepareProposal): _122.RequestPrepareProposalProtoMsg;
        };
        RequestProcessProposal: {
            typeUrl: string;
            encode(message: _122.RequestProcessProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.RequestProcessProposal;
            fromJSON(object: any): _122.RequestProcessProposal;
            toJSON(message: _122.RequestProcessProposal): unknown;
            fromPartial(object: Partial<_122.RequestProcessProposal>): _122.RequestProcessProposal;
            fromSDK(object: _122.RequestProcessProposalSDKType): _122.RequestProcessProposal;
            toSDK(message: _122.RequestProcessProposal): _122.RequestProcessProposalSDKType;
            fromAmino(object: _122.RequestProcessProposalAmino): _122.RequestProcessProposal;
            toAmino(message: _122.RequestProcessProposal): _122.RequestProcessProposalAmino;
            fromAminoMsg(object: _122.RequestProcessProposalAminoMsg): _122.RequestProcessProposal;
            fromProtoMsg(message: _122.RequestProcessProposalProtoMsg): _122.RequestProcessProposal;
            toProto(message: _122.RequestProcessProposal): Uint8Array;
            toProtoMsg(message: _122.RequestProcessProposal): _122.RequestProcessProposalProtoMsg;
        };
        Response: {
            typeUrl: string;
            encode(message: _122.Response, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.Response;
            fromJSON(object: any): _122.Response;
            toJSON(message: _122.Response): unknown;
            fromPartial(object: Partial<_122.Response>): _122.Response;
            fromSDK(object: _122.ResponseSDKType): _122.Response;
            toSDK(message: _122.Response): _122.ResponseSDKType;
            fromAmino(object: _122.ResponseAmino): _122.Response;
            toAmino(message: _122.Response): _122.ResponseAmino;
            fromAminoMsg(object: _122.ResponseAminoMsg): _122.Response;
            fromProtoMsg(message: _122.ResponseProtoMsg): _122.Response;
            toProto(message: _122.Response): Uint8Array;
            toProtoMsg(message: _122.Response): _122.ResponseProtoMsg;
        };
        ResponseException: {
            typeUrl: string;
            encode(message: _122.ResponseException, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.ResponseException;
            fromJSON(object: any): _122.ResponseException;
            toJSON(message: _122.ResponseException): unknown;
            fromPartial(object: Partial<_122.ResponseException>): _122.ResponseException;
            fromSDK(object: _122.ResponseExceptionSDKType): _122.ResponseException;
            toSDK(message: _122.ResponseException): _122.ResponseExceptionSDKType;
            fromAmino(object: _122.ResponseExceptionAmino): _122.ResponseException;
            toAmino(message: _122.ResponseException): _122.ResponseExceptionAmino;
            fromAminoMsg(object: _122.ResponseExceptionAminoMsg): _122.ResponseException;
            fromProtoMsg(message: _122.ResponseExceptionProtoMsg): _122.ResponseException;
            toProto(message: _122.ResponseException): Uint8Array;
            toProtoMsg(message: _122.ResponseException): _122.ResponseExceptionProtoMsg;
        };
        ResponseEcho: {
            typeUrl: string;
            encode(message: _122.ResponseEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.ResponseEcho;
            fromJSON(object: any): _122.ResponseEcho;
            toJSON(message: _122.ResponseEcho): unknown;
            fromPartial(object: Partial<_122.ResponseEcho>): _122.ResponseEcho;
            fromSDK(object: _122.ResponseEchoSDKType): _122.ResponseEcho;
            toSDK(message: _122.ResponseEcho): _122.ResponseEchoSDKType;
            fromAmino(object: _122.ResponseEchoAmino): _122.ResponseEcho;
            toAmino(message: _122.ResponseEcho): _122.ResponseEchoAmino;
            fromAminoMsg(object: _122.ResponseEchoAminoMsg): _122.ResponseEcho;
            fromProtoMsg(message: _122.ResponseEchoProtoMsg): _122.ResponseEcho;
            toProto(message: _122.ResponseEcho): Uint8Array;
            toProtoMsg(message: _122.ResponseEcho): _122.ResponseEchoProtoMsg;
        };
        ResponseFlush: {
            typeUrl: string;
            encode(_: _122.ResponseFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.ResponseFlush;
            fromJSON(_: any): _122.ResponseFlush;
            toJSON(_: _122.ResponseFlush): unknown;
            fromPartial(_: Partial<_122.ResponseFlush>): _122.ResponseFlush;
            fromSDK(_: _122.ResponseFlushSDKType): _122.ResponseFlush;
            toSDK(_: _122.ResponseFlush): _122.ResponseFlushSDKType;
            fromAmino(_: _122.ResponseFlushAmino): _122.ResponseFlush;
            toAmino(_: _122.ResponseFlush): _122.ResponseFlushAmino;
            fromAminoMsg(object: _122.ResponseFlushAminoMsg): _122.ResponseFlush;
            fromProtoMsg(message: _122.ResponseFlushProtoMsg): _122.ResponseFlush;
            toProto(message: _122.ResponseFlush): Uint8Array;
            toProtoMsg(message: _122.ResponseFlush): _122.ResponseFlushProtoMsg;
        };
        ResponseInfo: {
            typeUrl: string;
            encode(message: _122.ResponseInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.ResponseInfo;
            fromJSON(object: any): _122.ResponseInfo;
            toJSON(message: _122.ResponseInfo): unknown;
            fromPartial(object: Partial<_122.ResponseInfo>): _122.ResponseInfo;
            fromSDK(object: _122.ResponseInfoSDKType): _122.ResponseInfo;
            toSDK(message: _122.ResponseInfo): _122.ResponseInfoSDKType;
            fromAmino(object: _122.ResponseInfoAmino): _122.ResponseInfo;
            toAmino(message: _122.ResponseInfo): _122.ResponseInfoAmino;
            fromAminoMsg(object: _122.ResponseInfoAminoMsg): _122.ResponseInfo;
            fromProtoMsg(message: _122.ResponseInfoProtoMsg): _122.ResponseInfo;
            toProto(message: _122.ResponseInfo): Uint8Array;
            toProtoMsg(message: _122.ResponseInfo): _122.ResponseInfoProtoMsg;
        };
        ResponseInitChain: {
            typeUrl: string;
            encode(message: _122.ResponseInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.ResponseInitChain;
            fromJSON(object: any): _122.ResponseInitChain;
            toJSON(message: _122.ResponseInitChain): unknown;
            fromPartial(object: Partial<_122.ResponseInitChain>): _122.ResponseInitChain;
            fromSDK(object: _122.ResponseInitChainSDKType): _122.ResponseInitChain;
            toSDK(message: _122.ResponseInitChain): _122.ResponseInitChainSDKType;
            fromAmino(object: _122.ResponseInitChainAmino): _122.ResponseInitChain;
            toAmino(message: _122.ResponseInitChain): _122.ResponseInitChainAmino;
            fromAminoMsg(object: _122.ResponseInitChainAminoMsg): _122.ResponseInitChain;
            fromProtoMsg(message: _122.ResponseInitChainProtoMsg): _122.ResponseInitChain;
            toProto(message: _122.ResponseInitChain): Uint8Array;
            toProtoMsg(message: _122.ResponseInitChain): _122.ResponseInitChainProtoMsg;
        };
        ResponseQuery: {
            typeUrl: string;
            encode(message: _122.ResponseQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.ResponseQuery;
            fromJSON(object: any): _122.ResponseQuery;
            toJSON(message: _122.ResponseQuery): unknown;
            fromPartial(object: Partial<_122.ResponseQuery>): _122.ResponseQuery;
            fromSDK(object: _122.ResponseQuerySDKType): _122.ResponseQuery;
            toSDK(message: _122.ResponseQuery): _122.ResponseQuerySDKType;
            fromAmino(object: _122.ResponseQueryAmino): _122.ResponseQuery;
            toAmino(message: _122.ResponseQuery): _122.ResponseQueryAmino;
            fromAminoMsg(object: _122.ResponseQueryAminoMsg): _122.ResponseQuery;
            fromProtoMsg(message: _122.ResponseQueryProtoMsg): _122.ResponseQuery;
            toProto(message: _122.ResponseQuery): Uint8Array;
            toProtoMsg(message: _122.ResponseQuery): _122.ResponseQueryProtoMsg;
        };
        ResponseBeginBlock: {
            typeUrl: string;
            encode(message: _122.ResponseBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.ResponseBeginBlock;
            fromJSON(object: any): _122.ResponseBeginBlock;
            toJSON(message: _122.ResponseBeginBlock): unknown;
            fromPartial(object: Partial<_122.ResponseBeginBlock>): _122.ResponseBeginBlock;
            fromSDK(object: _122.ResponseBeginBlockSDKType): _122.ResponseBeginBlock;
            toSDK(message: _122.ResponseBeginBlock): _122.ResponseBeginBlockSDKType;
            fromAmino(object: _122.ResponseBeginBlockAmino): _122.ResponseBeginBlock;
            toAmino(message: _122.ResponseBeginBlock): _122.ResponseBeginBlockAmino;
            fromAminoMsg(object: _122.ResponseBeginBlockAminoMsg): _122.ResponseBeginBlock;
            fromProtoMsg(message: _122.ResponseBeginBlockProtoMsg): _122.ResponseBeginBlock;
            toProto(message: _122.ResponseBeginBlock): Uint8Array;
            toProtoMsg(message: _122.ResponseBeginBlock): _122.ResponseBeginBlockProtoMsg;
        };
        ResponseCheckTx: {
            typeUrl: string;
            encode(message: _122.ResponseCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.ResponseCheckTx;
            fromJSON(object: any): _122.ResponseCheckTx;
            toJSON(message: _122.ResponseCheckTx): unknown;
            fromPartial(object: Partial<_122.ResponseCheckTx>): _122.ResponseCheckTx;
            fromSDK(object: _122.ResponseCheckTxSDKType): _122.ResponseCheckTx;
            toSDK(message: _122.ResponseCheckTx): _122.ResponseCheckTxSDKType;
            fromAmino(object: _122.ResponseCheckTxAmino): _122.ResponseCheckTx;
            toAmino(message: _122.ResponseCheckTx): _122.ResponseCheckTxAmino;
            fromAminoMsg(object: _122.ResponseCheckTxAminoMsg): _122.ResponseCheckTx;
            fromProtoMsg(message: _122.ResponseCheckTxProtoMsg): _122.ResponseCheckTx;
            toProto(message: _122.ResponseCheckTx): Uint8Array;
            toProtoMsg(message: _122.ResponseCheckTx): _122.ResponseCheckTxProtoMsg;
        };
        ResponseDeliverTx: {
            typeUrl: string;
            encode(message: _122.ResponseDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.ResponseDeliverTx;
            fromJSON(object: any): _122.ResponseDeliverTx;
            toJSON(message: _122.ResponseDeliverTx): unknown;
            fromPartial(object: Partial<_122.ResponseDeliverTx>): _122.ResponseDeliverTx;
            fromSDK(object: _122.ResponseDeliverTxSDKType): _122.ResponseDeliverTx;
            toSDK(message: _122.ResponseDeliverTx): _122.ResponseDeliverTxSDKType;
            fromAmino(object: _122.ResponseDeliverTxAmino): _122.ResponseDeliverTx;
            toAmino(message: _122.ResponseDeliverTx): _122.ResponseDeliverTxAmino;
            fromAminoMsg(object: _122.ResponseDeliverTxAminoMsg): _122.ResponseDeliverTx;
            fromProtoMsg(message: _122.ResponseDeliverTxProtoMsg): _122.ResponseDeliverTx;
            toProto(message: _122.ResponseDeliverTx): Uint8Array;
            toProtoMsg(message: _122.ResponseDeliverTx): _122.ResponseDeliverTxProtoMsg;
        };
        ResponseEndBlock: {
            typeUrl: string;
            encode(message: _122.ResponseEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.ResponseEndBlock;
            fromJSON(object: any): _122.ResponseEndBlock;
            toJSON(message: _122.ResponseEndBlock): unknown;
            fromPartial(object: Partial<_122.ResponseEndBlock>): _122.ResponseEndBlock;
            fromSDK(object: _122.ResponseEndBlockSDKType): _122.ResponseEndBlock;
            toSDK(message: _122.ResponseEndBlock): _122.ResponseEndBlockSDKType;
            fromAmino(object: _122.ResponseEndBlockAmino): _122.ResponseEndBlock;
            toAmino(message: _122.ResponseEndBlock): _122.ResponseEndBlockAmino;
            fromAminoMsg(object: _122.ResponseEndBlockAminoMsg): _122.ResponseEndBlock;
            fromProtoMsg(message: _122.ResponseEndBlockProtoMsg): _122.ResponseEndBlock;
            toProto(message: _122.ResponseEndBlock): Uint8Array;
            toProtoMsg(message: _122.ResponseEndBlock): _122.ResponseEndBlockProtoMsg;
        };
        ResponseCommit: {
            typeUrl: string;
            encode(message: _122.ResponseCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.ResponseCommit;
            fromJSON(object: any): _122.ResponseCommit;
            toJSON(message: _122.ResponseCommit): unknown;
            fromPartial(object: Partial<_122.ResponseCommit>): _122.ResponseCommit;
            fromSDK(object: _122.ResponseCommitSDKType): _122.ResponseCommit;
            toSDK(message: _122.ResponseCommit): _122.ResponseCommitSDKType;
            fromAmino(object: _122.ResponseCommitAmino): _122.ResponseCommit;
            toAmino(message: _122.ResponseCommit): _122.ResponseCommitAmino;
            fromAminoMsg(object: _122.ResponseCommitAminoMsg): _122.ResponseCommit;
            fromProtoMsg(message: _122.ResponseCommitProtoMsg): _122.ResponseCommit;
            toProto(message: _122.ResponseCommit): Uint8Array;
            toProtoMsg(message: _122.ResponseCommit): _122.ResponseCommitProtoMsg;
        };
        ResponseListSnapshots: {
            typeUrl: string;
            encode(message: _122.ResponseListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.ResponseListSnapshots;
            fromJSON(object: any): _122.ResponseListSnapshots;
            toJSON(message: _122.ResponseListSnapshots): unknown;
            fromPartial(object: Partial<_122.ResponseListSnapshots>): _122.ResponseListSnapshots;
            fromSDK(object: _122.ResponseListSnapshotsSDKType): _122.ResponseListSnapshots;
            toSDK(message: _122.ResponseListSnapshots): _122.ResponseListSnapshotsSDKType;
            fromAmino(object: _122.ResponseListSnapshotsAmino): _122.ResponseListSnapshots;
            toAmino(message: _122.ResponseListSnapshots): _122.ResponseListSnapshotsAmino;
            fromAminoMsg(object: _122.ResponseListSnapshotsAminoMsg): _122.ResponseListSnapshots;
            fromProtoMsg(message: _122.ResponseListSnapshotsProtoMsg): _122.ResponseListSnapshots;
            toProto(message: _122.ResponseListSnapshots): Uint8Array;
            toProtoMsg(message: _122.ResponseListSnapshots): _122.ResponseListSnapshotsProtoMsg;
        };
        ResponseOfferSnapshot: {
            typeUrl: string;
            encode(message: _122.ResponseOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.ResponseOfferSnapshot;
            fromJSON(object: any): _122.ResponseOfferSnapshot;
            toJSON(message: _122.ResponseOfferSnapshot): unknown;
            fromPartial(object: Partial<_122.ResponseOfferSnapshot>): _122.ResponseOfferSnapshot;
            fromSDK(object: _122.ResponseOfferSnapshotSDKType): _122.ResponseOfferSnapshot;
            toSDK(message: _122.ResponseOfferSnapshot): _122.ResponseOfferSnapshotSDKType;
            fromAmino(object: _122.ResponseOfferSnapshotAmino): _122.ResponseOfferSnapshot;
            toAmino(message: _122.ResponseOfferSnapshot): _122.ResponseOfferSnapshotAmino;
            fromAminoMsg(object: _122.ResponseOfferSnapshotAminoMsg): _122.ResponseOfferSnapshot;
            fromProtoMsg(message: _122.ResponseOfferSnapshotProtoMsg): _122.ResponseOfferSnapshot;
            toProto(message: _122.ResponseOfferSnapshot): Uint8Array;
            toProtoMsg(message: _122.ResponseOfferSnapshot): _122.ResponseOfferSnapshotProtoMsg;
        };
        ResponseLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _122.ResponseLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.ResponseLoadSnapshotChunk;
            fromJSON(object: any): _122.ResponseLoadSnapshotChunk;
            toJSON(message: _122.ResponseLoadSnapshotChunk): unknown;
            fromPartial(object: Partial<_122.ResponseLoadSnapshotChunk>): _122.ResponseLoadSnapshotChunk;
            fromSDK(object: _122.ResponseLoadSnapshotChunkSDKType): _122.ResponseLoadSnapshotChunk;
            toSDK(message: _122.ResponseLoadSnapshotChunk): _122.ResponseLoadSnapshotChunkSDKType;
            fromAmino(object: _122.ResponseLoadSnapshotChunkAmino): _122.ResponseLoadSnapshotChunk;
            toAmino(message: _122.ResponseLoadSnapshotChunk): _122.ResponseLoadSnapshotChunkAmino;
            fromAminoMsg(object: _122.ResponseLoadSnapshotChunkAminoMsg): _122.ResponseLoadSnapshotChunk;
            fromProtoMsg(message: _122.ResponseLoadSnapshotChunkProtoMsg): _122.ResponseLoadSnapshotChunk;
            toProto(message: _122.ResponseLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _122.ResponseLoadSnapshotChunk): _122.ResponseLoadSnapshotChunkProtoMsg;
        };
        ResponseApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _122.ResponseApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.ResponseApplySnapshotChunk;
            fromJSON(object: any): _122.ResponseApplySnapshotChunk;
            toJSON(message: _122.ResponseApplySnapshotChunk): unknown;
            fromPartial(object: Partial<_122.ResponseApplySnapshotChunk>): _122.ResponseApplySnapshotChunk;
            fromSDK(object: _122.ResponseApplySnapshotChunkSDKType): _122.ResponseApplySnapshotChunk;
            toSDK(message: _122.ResponseApplySnapshotChunk): _122.ResponseApplySnapshotChunkSDKType;
            fromAmino(object: _122.ResponseApplySnapshotChunkAmino): _122.ResponseApplySnapshotChunk;
            toAmino(message: _122.ResponseApplySnapshotChunk): _122.ResponseApplySnapshotChunkAmino;
            fromAminoMsg(object: _122.ResponseApplySnapshotChunkAminoMsg): _122.ResponseApplySnapshotChunk;
            fromProtoMsg(message: _122.ResponseApplySnapshotChunkProtoMsg): _122.ResponseApplySnapshotChunk;
            toProto(message: _122.ResponseApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _122.ResponseApplySnapshotChunk): _122.ResponseApplySnapshotChunkProtoMsg;
        };
        ResponsePrepareProposal: {
            typeUrl: string;
            encode(message: _122.ResponsePrepareProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.ResponsePrepareProposal;
            fromJSON(object: any): _122.ResponsePrepareProposal;
            toJSON(message: _122.ResponsePrepareProposal): unknown;
            fromPartial(object: Partial<_122.ResponsePrepareProposal>): _122.ResponsePrepareProposal;
            fromSDK(object: _122.ResponsePrepareProposalSDKType): _122.ResponsePrepareProposal;
            toSDK(message: _122.ResponsePrepareProposal): _122.ResponsePrepareProposalSDKType;
            fromAmino(object: _122.ResponsePrepareProposalAmino): _122.ResponsePrepareProposal;
            toAmino(message: _122.ResponsePrepareProposal): _122.ResponsePrepareProposalAmino;
            fromAminoMsg(object: _122.ResponsePrepareProposalAminoMsg): _122.ResponsePrepareProposal;
            fromProtoMsg(message: _122.ResponsePrepareProposalProtoMsg): _122.ResponsePrepareProposal;
            toProto(message: _122.ResponsePrepareProposal): Uint8Array;
            toProtoMsg(message: _122.ResponsePrepareProposal): _122.ResponsePrepareProposalProtoMsg;
        };
        ResponseProcessProposal: {
            typeUrl: string;
            encode(message: _122.ResponseProcessProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.ResponseProcessProposal;
            fromJSON(object: any): _122.ResponseProcessProposal;
            toJSON(message: _122.ResponseProcessProposal): unknown;
            fromPartial(object: Partial<_122.ResponseProcessProposal>): _122.ResponseProcessProposal;
            fromSDK(object: _122.ResponseProcessProposalSDKType): _122.ResponseProcessProposal;
            toSDK(message: _122.ResponseProcessProposal): _122.ResponseProcessProposalSDKType;
            fromAmino(object: _122.ResponseProcessProposalAmino): _122.ResponseProcessProposal;
            toAmino(message: _122.ResponseProcessProposal): _122.ResponseProcessProposalAmino;
            fromAminoMsg(object: _122.ResponseProcessProposalAminoMsg): _122.ResponseProcessProposal;
            fromProtoMsg(message: _122.ResponseProcessProposalProtoMsg): _122.ResponseProcessProposal;
            toProto(message: _122.ResponseProcessProposal): Uint8Array;
            toProtoMsg(message: _122.ResponseProcessProposal): _122.ResponseProcessProposalProtoMsg;
        };
        CommitInfo: {
            typeUrl: string;
            encode(message: _122.CommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.CommitInfo;
            fromJSON(object: any): _122.CommitInfo;
            toJSON(message: _122.CommitInfo): unknown;
            fromPartial(object: Partial<_122.CommitInfo>): _122.CommitInfo;
            fromSDK(object: _122.CommitInfoSDKType): _122.CommitInfo;
            toSDK(message: _122.CommitInfo): _122.CommitInfoSDKType;
            fromAmino(object: _122.CommitInfoAmino): _122.CommitInfo;
            toAmino(message: _122.CommitInfo): _122.CommitInfoAmino;
            fromAminoMsg(object: _122.CommitInfoAminoMsg): _122.CommitInfo;
            fromProtoMsg(message: _122.CommitInfoProtoMsg): _122.CommitInfo;
            toProto(message: _122.CommitInfo): Uint8Array;
            toProtoMsg(message: _122.CommitInfo): _122.CommitInfoProtoMsg;
        };
        ExtendedCommitInfo: {
            typeUrl: string;
            encode(message: _122.ExtendedCommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.ExtendedCommitInfo;
            fromJSON(object: any): _122.ExtendedCommitInfo;
            toJSON(message: _122.ExtendedCommitInfo): unknown;
            fromPartial(object: Partial<_122.ExtendedCommitInfo>): _122.ExtendedCommitInfo;
            fromSDK(object: _122.ExtendedCommitInfoSDKType): _122.ExtendedCommitInfo;
            toSDK(message: _122.ExtendedCommitInfo): _122.ExtendedCommitInfoSDKType;
            fromAmino(object: _122.ExtendedCommitInfoAmino): _122.ExtendedCommitInfo;
            toAmino(message: _122.ExtendedCommitInfo): _122.ExtendedCommitInfoAmino;
            fromAminoMsg(object: _122.ExtendedCommitInfoAminoMsg): _122.ExtendedCommitInfo;
            fromProtoMsg(message: _122.ExtendedCommitInfoProtoMsg): _122.ExtendedCommitInfo;
            toProto(message: _122.ExtendedCommitInfo): Uint8Array;
            toProtoMsg(message: _122.ExtendedCommitInfo): _122.ExtendedCommitInfoProtoMsg;
        };
        Event: {
            typeUrl: string;
            encode(message: _122.Event, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.Event;
            fromJSON(object: any): _122.Event;
            toJSON(message: _122.Event): unknown;
            fromPartial(object: Partial<_122.Event>): _122.Event;
            fromSDK(object: _122.EventSDKType): _122.Event;
            toSDK(message: _122.Event): _122.EventSDKType;
            fromAmino(object: _122.EventAmino): _122.Event;
            toAmino(message: _122.Event): _122.EventAmino;
            fromAminoMsg(object: _122.EventAminoMsg): _122.Event;
            fromProtoMsg(message: _122.EventProtoMsg): _122.Event;
            toProto(message: _122.Event): Uint8Array;
            toProtoMsg(message: _122.Event): _122.EventProtoMsg;
        };
        EventAttribute: {
            typeUrl: string;
            encode(message: _122.EventAttribute, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.EventAttribute;
            fromJSON(object: any): _122.EventAttribute;
            toJSON(message: _122.EventAttribute): unknown;
            fromPartial(object: Partial<_122.EventAttribute>): _122.EventAttribute;
            fromSDK(object: _122.EventAttributeSDKType): _122.EventAttribute;
            toSDK(message: _122.EventAttribute): _122.EventAttributeSDKType;
            fromAmino(object: _122.EventAttributeAmino): _122.EventAttribute;
            toAmino(message: _122.EventAttribute): _122.EventAttributeAmino;
            fromAminoMsg(object: _122.EventAttributeAminoMsg): _122.EventAttribute;
            fromProtoMsg(message: _122.EventAttributeProtoMsg): _122.EventAttribute;
            toProto(message: _122.EventAttribute): Uint8Array;
            toProtoMsg(message: _122.EventAttribute): _122.EventAttributeProtoMsg;
        };
        TxResult: {
            typeUrl: string;
            encode(message: _122.TxResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.TxResult;
            fromJSON(object: any): _122.TxResult;
            toJSON(message: _122.TxResult): unknown;
            fromPartial(object: Partial<_122.TxResult>): _122.TxResult;
            fromSDK(object: _122.TxResultSDKType): _122.TxResult;
            toSDK(message: _122.TxResult): _122.TxResultSDKType;
            fromAmino(object: _122.TxResultAmino): _122.TxResult;
            toAmino(message: _122.TxResult): _122.TxResultAmino;
            fromAminoMsg(object: _122.TxResultAminoMsg): _122.TxResult;
            fromProtoMsg(message: _122.TxResultProtoMsg): _122.TxResult;
            toProto(message: _122.TxResult): Uint8Array;
            toProtoMsg(message: _122.TxResult): _122.TxResultProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _122.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.Validator;
            fromJSON(object: any): _122.Validator;
            toJSON(message: _122.Validator): unknown;
            fromPartial(object: Partial<_122.Validator>): _122.Validator;
            fromSDK(object: _122.ValidatorSDKType): _122.Validator;
            toSDK(message: _122.Validator): _122.ValidatorSDKType;
            fromAmino(object: _122.ValidatorAmino): _122.Validator;
            toAmino(message: _122.Validator): _122.ValidatorAmino;
            fromAminoMsg(object: _122.ValidatorAminoMsg): _122.Validator;
            fromProtoMsg(message: _122.ValidatorProtoMsg): _122.Validator;
            toProto(message: _122.Validator): Uint8Array;
            toProtoMsg(message: _122.Validator): _122.ValidatorProtoMsg;
        };
        ValidatorUpdate: {
            typeUrl: string;
            encode(message: _122.ValidatorUpdate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.ValidatorUpdate;
            fromJSON(object: any): _122.ValidatorUpdate;
            toJSON(message: _122.ValidatorUpdate): unknown;
            fromPartial(object: Partial<_122.ValidatorUpdate>): _122.ValidatorUpdate;
            fromSDK(object: _122.ValidatorUpdateSDKType): _122.ValidatorUpdate;
            toSDK(message: _122.ValidatorUpdate): _122.ValidatorUpdateSDKType;
            fromAmino(object: _122.ValidatorUpdateAmino): _122.ValidatorUpdate;
            toAmino(message: _122.ValidatorUpdate): _122.ValidatorUpdateAmino;
            fromAminoMsg(object: _122.ValidatorUpdateAminoMsg): _122.ValidatorUpdate;
            fromProtoMsg(message: _122.ValidatorUpdateProtoMsg): _122.ValidatorUpdate;
            toProto(message: _122.ValidatorUpdate): Uint8Array;
            toProtoMsg(message: _122.ValidatorUpdate): _122.ValidatorUpdateProtoMsg;
        };
        VoteInfo: {
            typeUrl: string;
            encode(message: _122.VoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.VoteInfo;
            fromJSON(object: any): _122.VoteInfo;
            toJSON(message: _122.VoteInfo): unknown;
            fromPartial(object: Partial<_122.VoteInfo>): _122.VoteInfo;
            fromSDK(object: _122.VoteInfoSDKType): _122.VoteInfo;
            toSDK(message: _122.VoteInfo): _122.VoteInfoSDKType;
            fromAmino(object: _122.VoteInfoAmino): _122.VoteInfo;
            toAmino(message: _122.VoteInfo): _122.VoteInfoAmino;
            fromAminoMsg(object: _122.VoteInfoAminoMsg): _122.VoteInfo;
            fromProtoMsg(message: _122.VoteInfoProtoMsg): _122.VoteInfo;
            toProto(message: _122.VoteInfo): Uint8Array;
            toProtoMsg(message: _122.VoteInfo): _122.VoteInfoProtoMsg;
        };
        ExtendedVoteInfo: {
            typeUrl: string;
            encode(message: _122.ExtendedVoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.ExtendedVoteInfo;
            fromJSON(object: any): _122.ExtendedVoteInfo;
            toJSON(message: _122.ExtendedVoteInfo): unknown;
            fromPartial(object: Partial<_122.ExtendedVoteInfo>): _122.ExtendedVoteInfo;
            fromSDK(object: _122.ExtendedVoteInfoSDKType): _122.ExtendedVoteInfo;
            toSDK(message: _122.ExtendedVoteInfo): _122.ExtendedVoteInfoSDKType;
            fromAmino(object: _122.ExtendedVoteInfoAmino): _122.ExtendedVoteInfo;
            toAmino(message: _122.ExtendedVoteInfo): _122.ExtendedVoteInfoAmino;
            fromAminoMsg(object: _122.ExtendedVoteInfoAminoMsg): _122.ExtendedVoteInfo;
            fromProtoMsg(message: _122.ExtendedVoteInfoProtoMsg): _122.ExtendedVoteInfo;
            toProto(message: _122.ExtendedVoteInfo): Uint8Array;
            toProtoMsg(message: _122.ExtendedVoteInfo): _122.ExtendedVoteInfoProtoMsg;
        };
        Misbehavior: {
            typeUrl: string;
            encode(message: _122.Misbehavior, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.Misbehavior;
            fromJSON(object: any): _122.Misbehavior;
            toJSON(message: _122.Misbehavior): unknown;
            fromPartial(object: Partial<_122.Misbehavior>): _122.Misbehavior;
            fromSDK(object: _122.MisbehaviorSDKType): _122.Misbehavior;
            toSDK(message: _122.Misbehavior): _122.MisbehaviorSDKType;
            fromAmino(object: _122.MisbehaviorAmino): _122.Misbehavior;
            toAmino(message: _122.Misbehavior): _122.MisbehaviorAmino;
            fromAminoMsg(object: _122.MisbehaviorAminoMsg): _122.Misbehavior;
            fromProtoMsg(message: _122.MisbehaviorProtoMsg): _122.Misbehavior;
            toProto(message: _122.Misbehavior): Uint8Array;
            toProtoMsg(message: _122.Misbehavior): _122.MisbehaviorProtoMsg;
        };
        Snapshot: {
            typeUrl: string;
            encode(message: _122.Snapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _122.Snapshot;
            fromJSON(object: any): _122.Snapshot;
            toJSON(message: _122.Snapshot): unknown;
            fromPartial(object: Partial<_122.Snapshot>): _122.Snapshot;
            fromSDK(object: _122.SnapshotSDKType): _122.Snapshot;
            toSDK(message: _122.Snapshot): _122.SnapshotSDKType;
            fromAmino(object: _122.SnapshotAmino): _122.Snapshot;
            toAmino(message: _122.Snapshot): _122.SnapshotAmino;
            fromAminoMsg(object: _122.SnapshotAminoMsg): _122.Snapshot;
            fromProtoMsg(message: _122.SnapshotProtoMsg): _122.Snapshot;
            toProto(message: _122.Snapshot): Uint8Array;
            toProtoMsg(message: _122.Snapshot): _122.SnapshotProtoMsg;
        };
    };
    const crypto: {
        protobufPackage: "tendermint.crypto";
        Proof: {
            typeUrl: string;
            encode(message: _124.Proof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _124.Proof;
            fromJSON(object: any): _124.Proof;
            toJSON(message: _124.Proof): unknown;
            fromPartial(object: Partial<_124.Proof>): _124.Proof;
            fromSDK(object: _124.ProofSDKType): _124.Proof;
            toSDK(message: _124.Proof): _124.ProofSDKType;
            fromAmino(object: _124.ProofAmino): _124.Proof;
            toAmino(message: _124.Proof): _124.ProofAmino;
            fromAminoMsg(object: _124.ProofAminoMsg): _124.Proof;
            fromProtoMsg(message: _124.ProofProtoMsg): _124.Proof;
            toProto(message: _124.Proof): Uint8Array;
            toProtoMsg(message: _124.Proof): _124.ProofProtoMsg;
        };
        ValueOp: {
            typeUrl: string;
            encode(message: _124.ValueOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _124.ValueOp;
            fromJSON(object: any): _124.ValueOp;
            toJSON(message: _124.ValueOp): unknown;
            fromPartial(object: Partial<_124.ValueOp>): _124.ValueOp;
            fromSDK(object: _124.ValueOpSDKType): _124.ValueOp;
            toSDK(message: _124.ValueOp): _124.ValueOpSDKType;
            fromAmino(object: _124.ValueOpAmino): _124.ValueOp;
            toAmino(message: _124.ValueOp): _124.ValueOpAmino;
            fromAminoMsg(object: _124.ValueOpAminoMsg): _124.ValueOp;
            fromProtoMsg(message: _124.ValueOpProtoMsg): _124.ValueOp;
            toProto(message: _124.ValueOp): Uint8Array;
            toProtoMsg(message: _124.ValueOp): _124.ValueOpProtoMsg;
        };
        DominoOp: {
            typeUrl: string;
            encode(message: _124.DominoOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _124.DominoOp;
            fromJSON(object: any): _124.DominoOp;
            toJSON(message: _124.DominoOp): unknown;
            fromPartial(object: Partial<_124.DominoOp>): _124.DominoOp;
            fromSDK(object: _124.DominoOpSDKType): _124.DominoOp;
            toSDK(message: _124.DominoOp): _124.DominoOpSDKType;
            fromAmino(object: _124.DominoOpAmino): _124.DominoOp;
            toAmino(message: _124.DominoOp): _124.DominoOpAmino;
            fromAminoMsg(object: _124.DominoOpAminoMsg): _124.DominoOp;
            fromProtoMsg(message: _124.DominoOpProtoMsg): _124.DominoOp;
            toProto(message: _124.DominoOp): Uint8Array;
            toProtoMsg(message: _124.DominoOp): _124.DominoOpProtoMsg;
        };
        ProofOp: {
            typeUrl: string;
            encode(message: _124.ProofOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _124.ProofOp;
            fromJSON(object: any): _124.ProofOp;
            toJSON(message: _124.ProofOp): unknown;
            fromPartial(object: Partial<_124.ProofOp>): _124.ProofOp;
            fromSDK(object: _124.ProofOpSDKType): _124.ProofOp;
            toSDK(message: _124.ProofOp): _124.ProofOpSDKType;
            fromAmino(object: _124.ProofOpAmino): _124.ProofOp;
            toAmino(message: _124.ProofOp): _124.ProofOpAmino;
            fromAminoMsg(object: _124.ProofOpAminoMsg): _124.ProofOp;
            fromProtoMsg(message: _124.ProofOpProtoMsg): _124.ProofOp;
            toProto(message: _124.ProofOp): Uint8Array;
            toProtoMsg(message: _124.ProofOp): _124.ProofOpProtoMsg;
        };
        ProofOps: {
            typeUrl: string;
            encode(message: _124.ProofOps, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _124.ProofOps;
            fromJSON(object: any): _124.ProofOps;
            toJSON(message: _124.ProofOps): unknown;
            fromPartial(object: Partial<_124.ProofOps>): _124.ProofOps;
            fromSDK(object: _124.ProofOpsSDKType): _124.ProofOps;
            toSDK(message: _124.ProofOps): _124.ProofOpsSDKType;
            fromAmino(object: _124.ProofOpsAmino): _124.ProofOps;
            toAmino(message: _124.ProofOps): _124.ProofOpsAmino;
            fromAminoMsg(object: _124.ProofOpsAminoMsg): _124.ProofOps;
            fromProtoMsg(message: _124.ProofOpsProtoMsg): _124.ProofOps;
            toProto(message: _124.ProofOps): Uint8Array;
            toProtoMsg(message: _124.ProofOps): _124.ProofOpsProtoMsg;
        };
        PublicKey: {
            typeUrl: string;
            encode(message: _123.PublicKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _123.PublicKey;
            fromJSON(object: any): _123.PublicKey;
            toJSON(message: _123.PublicKey): unknown;
            fromPartial(object: Partial<_123.PublicKey>): _123.PublicKey;
            fromSDK(object: _123.PublicKeySDKType): _123.PublicKey;
            toSDK(message: _123.PublicKey): _123.PublicKeySDKType;
            fromAmino(object: _123.PublicKeyAmino): _123.PublicKey;
            toAmino(message: _123.PublicKey): _123.PublicKeyAmino;
            fromAminoMsg(object: _123.PublicKeyAminoMsg): _123.PublicKey;
            fromProtoMsg(message: _123.PublicKeyProtoMsg): _123.PublicKey;
            toProto(message: _123.PublicKey): Uint8Array;
            toProtoMsg(message: _123.PublicKey): _123.PublicKeyProtoMsg;
        };
    };
    namespace libs {
        const bits: {
            protobufPackage: "tendermint.libs.bits";
            BitArray: {
                typeUrl: string;
                encode(message: _125.BitArray, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: import("..").BinaryReader | Uint8Array, length?: number): _125.BitArray;
                fromJSON(object: any): _125.BitArray;
                toJSON(message: _125.BitArray): unknown;
                fromPartial(object: Partial<_125.BitArray>): _125.BitArray;
                fromSDK(object: _125.BitArraySDKType): _125.BitArray;
                toSDK(message: _125.BitArray): _125.BitArraySDKType;
                fromAmino(object: _125.BitArrayAmino): _125.BitArray;
                toAmino(message: _125.BitArray): _125.BitArrayAmino;
                fromAminoMsg(object: _125.BitArrayAminoMsg): _125.BitArray;
                fromProtoMsg(message: _125.BitArrayProtoMsg): _125.BitArray;
                toProto(message: _125.BitArray): Uint8Array;
                toProtoMsg(message: _125.BitArray): _125.BitArrayProtoMsg;
            };
        };
    }
    const p2p: {
        protobufPackage: "tendermint.p2p";
        NetAddress: {
            typeUrl: string;
            encode(message: _126.NetAddress, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _126.NetAddress;
            fromJSON(object: any): _126.NetAddress;
            toJSON(message: _126.NetAddress): unknown;
            fromPartial(object: Partial<_126.NetAddress>): _126.NetAddress;
            fromSDK(object: _126.NetAddressSDKType): _126.NetAddress;
            toSDK(message: _126.NetAddress): _126.NetAddressSDKType;
            fromAmino(object: _126.NetAddressAmino): _126.NetAddress;
            toAmino(message: _126.NetAddress): _126.NetAddressAmino;
            fromAminoMsg(object: _126.NetAddressAminoMsg): _126.NetAddress;
            fromProtoMsg(message: _126.NetAddressProtoMsg): _126.NetAddress;
            toProto(message: _126.NetAddress): Uint8Array;
            toProtoMsg(message: _126.NetAddress): _126.NetAddressProtoMsg;
        };
        ProtocolVersion: {
            typeUrl: string;
            encode(message: _126.ProtocolVersion, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _126.ProtocolVersion;
            fromJSON(object: any): _126.ProtocolVersion;
            toJSON(message: _126.ProtocolVersion): unknown;
            fromPartial(object: Partial<_126.ProtocolVersion>): _126.ProtocolVersion;
            fromSDK(object: _126.ProtocolVersionSDKType): _126.ProtocolVersion;
            toSDK(message: _126.ProtocolVersion): _126.ProtocolVersionSDKType;
            fromAmino(object: _126.ProtocolVersionAmino): _126.ProtocolVersion;
            toAmino(message: _126.ProtocolVersion): _126.ProtocolVersionAmino;
            fromAminoMsg(object: _126.ProtocolVersionAminoMsg): _126.ProtocolVersion;
            fromProtoMsg(message: _126.ProtocolVersionProtoMsg): _126.ProtocolVersion;
            toProto(message: _126.ProtocolVersion): Uint8Array;
            toProtoMsg(message: _126.ProtocolVersion): _126.ProtocolVersionProtoMsg;
        };
        DefaultNodeInfo: {
            typeUrl: string;
            encode(message: _126.DefaultNodeInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _126.DefaultNodeInfo;
            fromJSON(object: any): _126.DefaultNodeInfo;
            toJSON(message: _126.DefaultNodeInfo): unknown;
            fromPartial(object: Partial<_126.DefaultNodeInfo>): _126.DefaultNodeInfo;
            fromSDK(object: _126.DefaultNodeInfoSDKType): _126.DefaultNodeInfo;
            toSDK(message: _126.DefaultNodeInfo): _126.DefaultNodeInfoSDKType;
            fromAmino(object: _126.DefaultNodeInfoAmino): _126.DefaultNodeInfo;
            toAmino(message: _126.DefaultNodeInfo): _126.DefaultNodeInfoAmino;
            fromAminoMsg(object: _126.DefaultNodeInfoAminoMsg): _126.DefaultNodeInfo;
            fromProtoMsg(message: _126.DefaultNodeInfoProtoMsg): _126.DefaultNodeInfo;
            toProto(message: _126.DefaultNodeInfo): Uint8Array;
            toProtoMsg(message: _126.DefaultNodeInfo): _126.DefaultNodeInfoProtoMsg;
        };
        DefaultNodeInfoOther: {
            typeUrl: string;
            encode(message: _126.DefaultNodeInfoOther, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _126.DefaultNodeInfoOther;
            fromJSON(object: any): _126.DefaultNodeInfoOther;
            toJSON(message: _126.DefaultNodeInfoOther): unknown;
            fromPartial(object: Partial<_126.DefaultNodeInfoOther>): _126.DefaultNodeInfoOther;
            fromSDK(object: _126.DefaultNodeInfoOtherSDKType): _126.DefaultNodeInfoOther;
            toSDK(message: _126.DefaultNodeInfoOther): _126.DefaultNodeInfoOtherSDKType;
            fromAmino(object: _126.DefaultNodeInfoOtherAmino): _126.DefaultNodeInfoOther;
            toAmino(message: _126.DefaultNodeInfoOther): _126.DefaultNodeInfoOtherAmino;
            fromAminoMsg(object: _126.DefaultNodeInfoOtherAminoMsg): _126.DefaultNodeInfoOther;
            fromProtoMsg(message: _126.DefaultNodeInfoOtherProtoMsg): _126.DefaultNodeInfoOther;
            toProto(message: _126.DefaultNodeInfoOther): Uint8Array;
            toProtoMsg(message: _126.DefaultNodeInfoOther): _126.DefaultNodeInfoOtherProtoMsg;
        };
    };
    const types: {
        protobufPackage: "tendermint.types";
        ValidatorSet: {
            typeUrl: string;
            encode(message: _131.ValidatorSet, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _131.ValidatorSet;
            fromJSON(object: any): _131.ValidatorSet;
            toJSON(message: _131.ValidatorSet): unknown;
            fromPartial(object: Partial<_131.ValidatorSet>): _131.ValidatorSet;
            fromSDK(object: _131.ValidatorSetSDKType): _131.ValidatorSet;
            toSDK(message: _131.ValidatorSet): _131.ValidatorSetSDKType;
            fromAmino(object: _131.ValidatorSetAmino): _131.ValidatorSet;
            toAmino(message: _131.ValidatorSet): _131.ValidatorSetAmino;
            fromAminoMsg(object: _131.ValidatorSetAminoMsg): _131.ValidatorSet;
            fromProtoMsg(message: _131.ValidatorSetProtoMsg): _131.ValidatorSet;
            toProto(message: _131.ValidatorSet): Uint8Array;
            toProtoMsg(message: _131.ValidatorSet): _131.ValidatorSetProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _131.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _131.Validator;
            fromJSON(object: any): _131.Validator;
            toJSON(message: _131.Validator): unknown;
            fromPartial(object: Partial<_131.Validator>): _131.Validator;
            fromSDK(object: _131.ValidatorSDKType): _131.Validator;
            toSDK(message: _131.Validator): _131.ValidatorSDKType;
            fromAmino(object: _131.ValidatorAmino): _131.Validator;
            toAmino(message: _131.Validator): _131.ValidatorAmino;
            fromAminoMsg(object: _131.ValidatorAminoMsg): _131.Validator;
            fromProtoMsg(message: _131.ValidatorProtoMsg): _131.Validator;
            toProto(message: _131.Validator): Uint8Array;
            toProtoMsg(message: _131.Validator): _131.ValidatorProtoMsg;
        };
        SimpleValidator: {
            typeUrl: string;
            encode(message: _131.SimpleValidator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _131.SimpleValidator;
            fromJSON(object: any): _131.SimpleValidator;
            toJSON(message: _131.SimpleValidator): unknown;
            fromPartial(object: Partial<_131.SimpleValidator>): _131.SimpleValidator;
            fromSDK(object: _131.SimpleValidatorSDKType): _131.SimpleValidator;
            toSDK(message: _131.SimpleValidator): _131.SimpleValidatorSDKType;
            fromAmino(object: _131.SimpleValidatorAmino): _131.SimpleValidator;
            toAmino(message: _131.SimpleValidator): _131.SimpleValidatorAmino;
            fromAminoMsg(object: _131.SimpleValidatorAminoMsg): _131.SimpleValidator;
            fromProtoMsg(message: _131.SimpleValidatorProtoMsg): _131.SimpleValidator;
            toProto(message: _131.SimpleValidator): Uint8Array;
            toProtoMsg(message: _131.SimpleValidator): _131.SimpleValidatorProtoMsg;
        };
        blockIDFlagFromJSON(object: any): _130.BlockIDFlag;
        blockIDFlagToJSON(object: _130.BlockIDFlag): string;
        signedMsgTypeFromJSON(object: any): _130.SignedMsgType;
        signedMsgTypeToJSON(object: _130.SignedMsgType): string;
        BlockIDFlag: typeof _130.BlockIDFlag;
        BlockIDFlagSDKType: typeof _130.BlockIDFlag;
        BlockIDFlagAmino: typeof _130.BlockIDFlag;
        SignedMsgType: typeof _130.SignedMsgType;
        SignedMsgTypeSDKType: typeof _130.SignedMsgType;
        SignedMsgTypeAmino: typeof _130.SignedMsgType;
        PartSetHeader: {
            typeUrl: string;
            encode(message: _130.PartSetHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _130.PartSetHeader;
            fromJSON(object: any): _130.PartSetHeader;
            toJSON(message: _130.PartSetHeader): unknown;
            fromPartial(object: Partial<_130.PartSetHeader>): _130.PartSetHeader;
            fromSDK(object: _130.PartSetHeaderSDKType): _130.PartSetHeader;
            toSDK(message: _130.PartSetHeader): _130.PartSetHeaderSDKType;
            fromAmino(object: _130.PartSetHeaderAmino): _130.PartSetHeader;
            toAmino(message: _130.PartSetHeader): _130.PartSetHeaderAmino;
            fromAminoMsg(object: _130.PartSetHeaderAminoMsg): _130.PartSetHeader;
            fromProtoMsg(message: _130.PartSetHeaderProtoMsg): _130.PartSetHeader;
            toProto(message: _130.PartSetHeader): Uint8Array;
            toProtoMsg(message: _130.PartSetHeader): _130.PartSetHeaderProtoMsg;
        };
        Part: {
            typeUrl: string;
            encode(message: _130.Part, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _130.Part;
            fromJSON(object: any): _130.Part;
            toJSON(message: _130.Part): unknown;
            fromPartial(object: Partial<_130.Part>): _130.Part;
            fromSDK(object: _130.PartSDKType): _130.Part;
            toSDK(message: _130.Part): _130.PartSDKType;
            fromAmino(object: _130.PartAmino): _130.Part;
            toAmino(message: _130.Part): _130.PartAmino;
            fromAminoMsg(object: _130.PartAminoMsg): _130.Part;
            fromProtoMsg(message: _130.PartProtoMsg): _130.Part;
            toProto(message: _130.Part): Uint8Array;
            toProtoMsg(message: _130.Part): _130.PartProtoMsg;
        };
        BlockID: {
            typeUrl: string;
            encode(message: _130.BlockID, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _130.BlockID;
            fromJSON(object: any): _130.BlockID;
            toJSON(message: _130.BlockID): unknown;
            fromPartial(object: Partial<_130.BlockID>): _130.BlockID;
            fromSDK(object: _130.BlockIDSDKType): _130.BlockID;
            toSDK(message: _130.BlockID): _130.BlockIDSDKType;
            fromAmino(object: _130.BlockIDAmino): _130.BlockID;
            toAmino(message: _130.BlockID): _130.BlockIDAmino;
            fromAminoMsg(object: _130.BlockIDAminoMsg): _130.BlockID;
            fromProtoMsg(message: _130.BlockIDProtoMsg): _130.BlockID;
            toProto(message: _130.BlockID): Uint8Array;
            toProtoMsg(message: _130.BlockID): _130.BlockIDProtoMsg;
        };
        Header: {
            typeUrl: string;
            encode(message: _130.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _130.Header;
            fromJSON(object: any): _130.Header;
            toJSON(message: _130.Header): unknown;
            fromPartial(object: Partial<_130.Header>): _130.Header;
            fromSDK(object: _130.HeaderSDKType): _130.Header;
            toSDK(message: _130.Header): _130.HeaderSDKType;
            fromAmino(object: _130.HeaderAmino): _130.Header;
            toAmino(message: _130.Header): _130.HeaderAmino;
            fromAminoMsg(object: _130.HeaderAminoMsg): _130.Header;
            fromProtoMsg(message: _130.HeaderProtoMsg): _130.Header;
            toProto(message: _130.Header): Uint8Array;
            toProtoMsg(message: _130.Header): _130.HeaderProtoMsg;
        };
        Data: {
            typeUrl: string;
            encode(message: _130.Data, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _130.Data;
            fromJSON(object: any): _130.Data;
            toJSON(message: _130.Data): unknown;
            fromPartial(object: Partial<_130.Data>): _130.Data;
            fromSDK(object: _130.DataSDKType): _130.Data;
            toSDK(message: _130.Data): _130.DataSDKType;
            fromAmino(object: _130.DataAmino): _130.Data;
            toAmino(message: _130.Data): _130.DataAmino;
            fromAminoMsg(object: _130.DataAminoMsg): _130.Data;
            fromProtoMsg(message: _130.DataProtoMsg): _130.Data;
            toProto(message: _130.Data): Uint8Array;
            toProtoMsg(message: _130.Data): _130.DataProtoMsg;
        };
        Vote: {
            typeUrl: string;
            encode(message: _130.Vote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _130.Vote;
            fromJSON(object: any): _130.Vote;
            toJSON(message: _130.Vote): unknown;
            fromPartial(object: Partial<_130.Vote>): _130.Vote;
            fromSDK(object: _130.VoteSDKType): _130.Vote;
            toSDK(message: _130.Vote): _130.VoteSDKType;
            fromAmino(object: _130.VoteAmino): _130.Vote;
            toAmino(message: _130.Vote): _130.VoteAmino;
            fromAminoMsg(object: _130.VoteAminoMsg): _130.Vote;
            fromProtoMsg(message: _130.VoteProtoMsg): _130.Vote;
            toProto(message: _130.Vote): Uint8Array;
            toProtoMsg(message: _130.Vote): _130.VoteProtoMsg;
        };
        Commit: {
            typeUrl: string;
            encode(message: _130.Commit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _130.Commit;
            fromJSON(object: any): _130.Commit;
            toJSON(message: _130.Commit): unknown;
            fromPartial(object: Partial<_130.Commit>): _130.Commit;
            fromSDK(object: _130.CommitSDKType): _130.Commit;
            toSDK(message: _130.Commit): _130.CommitSDKType;
            fromAmino(object: _130.CommitAmino): _130.Commit;
            toAmino(message: _130.Commit): _130.CommitAmino;
            fromAminoMsg(object: _130.CommitAminoMsg): _130.Commit;
            fromProtoMsg(message: _130.CommitProtoMsg): _130.Commit;
            toProto(message: _130.Commit): Uint8Array;
            toProtoMsg(message: _130.Commit): _130.CommitProtoMsg;
        };
        CommitSig: {
            typeUrl: string;
            encode(message: _130.CommitSig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _130.CommitSig;
            fromJSON(object: any): _130.CommitSig;
            toJSON(message: _130.CommitSig): unknown;
            fromPartial(object: Partial<_130.CommitSig>): _130.CommitSig;
            fromSDK(object: _130.CommitSigSDKType): _130.CommitSig;
            toSDK(message: _130.CommitSig): _130.CommitSigSDKType;
            fromAmino(object: _130.CommitSigAmino): _130.CommitSig;
            toAmino(message: _130.CommitSig): _130.CommitSigAmino;
            fromAminoMsg(object: _130.CommitSigAminoMsg): _130.CommitSig;
            fromProtoMsg(message: _130.CommitSigProtoMsg): _130.CommitSig;
            toProto(message: _130.CommitSig): Uint8Array;
            toProtoMsg(message: _130.CommitSig): _130.CommitSigProtoMsg;
        };
        Proposal: {
            typeUrl: string;
            encode(message: _130.Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _130.Proposal;
            fromJSON(object: any): _130.Proposal;
            toJSON(message: _130.Proposal): unknown;
            fromPartial(object: Partial<_130.Proposal>): _130.Proposal;
            fromSDK(object: _130.ProposalSDKType): _130.Proposal;
            toSDK(message: _130.Proposal): _130.ProposalSDKType;
            fromAmino(object: _130.ProposalAmino): _130.Proposal;
            toAmino(message: _130.Proposal): _130.ProposalAmino;
            fromAminoMsg(object: _130.ProposalAminoMsg): _130.Proposal;
            fromProtoMsg(message: _130.ProposalProtoMsg): _130.Proposal;
            toProto(message: _130.Proposal): Uint8Array;
            toProtoMsg(message: _130.Proposal): _130.ProposalProtoMsg;
        };
        SignedHeader: {
            typeUrl: string;
            encode(message: _130.SignedHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _130.SignedHeader;
            fromJSON(object: any): _130.SignedHeader;
            toJSON(message: _130.SignedHeader): unknown;
            fromPartial(object: Partial<_130.SignedHeader>): _130.SignedHeader;
            fromSDK(object: _130.SignedHeaderSDKType): _130.SignedHeader;
            toSDK(message: _130.SignedHeader): _130.SignedHeaderSDKType;
            fromAmino(object: _130.SignedHeaderAmino): _130.SignedHeader;
            toAmino(message: _130.SignedHeader): _130.SignedHeaderAmino;
            fromAminoMsg(object: _130.SignedHeaderAminoMsg): _130.SignedHeader;
            fromProtoMsg(message: _130.SignedHeaderProtoMsg): _130.SignedHeader;
            toProto(message: _130.SignedHeader): Uint8Array;
            toProtoMsg(message: _130.SignedHeader): _130.SignedHeaderProtoMsg;
        };
        LightBlock: {
            typeUrl: string;
            encode(message: _130.LightBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _130.LightBlock;
            fromJSON(object: any): _130.LightBlock;
            toJSON(message: _130.LightBlock): unknown;
            fromPartial(object: Partial<_130.LightBlock>): _130.LightBlock;
            fromSDK(object: _130.LightBlockSDKType): _130.LightBlock;
            toSDK(message: _130.LightBlock): _130.LightBlockSDKType;
            fromAmino(object: _130.LightBlockAmino): _130.LightBlock;
            toAmino(message: _130.LightBlock): _130.LightBlockAmino;
            fromAminoMsg(object: _130.LightBlockAminoMsg): _130.LightBlock;
            fromProtoMsg(message: _130.LightBlockProtoMsg): _130.LightBlock;
            toProto(message: _130.LightBlock): Uint8Array;
            toProtoMsg(message: _130.LightBlock): _130.LightBlockProtoMsg;
        };
        BlockMeta: {
            typeUrl: string;
            encode(message: _130.BlockMeta, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _130.BlockMeta;
            fromJSON(object: any): _130.BlockMeta;
            toJSON(message: _130.BlockMeta): unknown;
            fromPartial(object: Partial<_130.BlockMeta>): _130.BlockMeta;
            fromSDK(object: _130.BlockMetaSDKType): _130.BlockMeta;
            toSDK(message: _130.BlockMeta): _130.BlockMetaSDKType;
            fromAmino(object: _130.BlockMetaAmino): _130.BlockMeta;
            toAmino(message: _130.BlockMeta): _130.BlockMetaAmino;
            fromAminoMsg(object: _130.BlockMetaAminoMsg): _130.BlockMeta;
            fromProtoMsg(message: _130.BlockMetaProtoMsg): _130.BlockMeta;
            toProto(message: _130.BlockMeta): Uint8Array;
            toProtoMsg(message: _130.BlockMeta): _130.BlockMetaProtoMsg;
        };
        TxProof: {
            typeUrl: string;
            encode(message: _130.TxProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _130.TxProof;
            fromJSON(object: any): _130.TxProof;
            toJSON(message: _130.TxProof): unknown;
            fromPartial(object: Partial<_130.TxProof>): _130.TxProof;
            fromSDK(object: _130.TxProofSDKType): _130.TxProof;
            toSDK(message: _130.TxProof): _130.TxProofSDKType;
            fromAmino(object: _130.TxProofAmino): _130.TxProof;
            toAmino(message: _130.TxProof): _130.TxProofAmino;
            fromAminoMsg(object: _130.TxProofAminoMsg): _130.TxProof;
            fromProtoMsg(message: _130.TxProofProtoMsg): _130.TxProof;
            toProto(message: _130.TxProof): Uint8Array;
            toProtoMsg(message: _130.TxProof): _130.TxProofProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            encode(message: _129.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _129.ConsensusParams;
            fromJSON(object: any): _129.ConsensusParams;
            toJSON(message: _129.ConsensusParams): unknown;
            fromPartial(object: Partial<_129.ConsensusParams>): _129.ConsensusParams;
            fromSDK(object: _129.ConsensusParamsSDKType): _129.ConsensusParams;
            toSDK(message: _129.ConsensusParams): _129.ConsensusParamsSDKType;
            fromAmino(object: _129.ConsensusParamsAmino): _129.ConsensusParams;
            toAmino(message: _129.ConsensusParams): _129.ConsensusParamsAmino;
            fromAminoMsg(object: _129.ConsensusParamsAminoMsg): _129.ConsensusParams;
            fromProtoMsg(message: _129.ConsensusParamsProtoMsg): _129.ConsensusParams;
            toProto(message: _129.ConsensusParams): Uint8Array;
            toProtoMsg(message: _129.ConsensusParams): _129.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            encode(message: _129.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _129.BlockParams;
            fromJSON(object: any): _129.BlockParams;
            toJSON(message: _129.BlockParams): unknown;
            fromPartial(object: Partial<_129.BlockParams>): _129.BlockParams;
            fromSDK(object: _129.BlockParamsSDKType): _129.BlockParams;
            toSDK(message: _129.BlockParams): _129.BlockParamsSDKType;
            fromAmino(object: _129.BlockParamsAmino): _129.BlockParams;
            toAmino(message: _129.BlockParams): _129.BlockParamsAmino;
            fromAminoMsg(object: _129.BlockParamsAminoMsg): _129.BlockParams;
            fromProtoMsg(message: _129.BlockParamsProtoMsg): _129.BlockParams;
            toProto(message: _129.BlockParams): Uint8Array;
            toProtoMsg(message: _129.BlockParams): _129.BlockParamsProtoMsg;
        };
        EvidenceParams: {
            typeUrl: string;
            encode(message: _129.EvidenceParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _129.EvidenceParams;
            fromJSON(object: any): _129.EvidenceParams;
            toJSON(message: _129.EvidenceParams): unknown;
            fromPartial(object: Partial<_129.EvidenceParams>): _129.EvidenceParams;
            fromSDK(object: _129.EvidenceParamsSDKType): _129.EvidenceParams;
            toSDK(message: _129.EvidenceParams): _129.EvidenceParamsSDKType;
            fromAmino(object: _129.EvidenceParamsAmino): _129.EvidenceParams;
            toAmino(message: _129.EvidenceParams): _129.EvidenceParamsAmino;
            fromAminoMsg(object: _129.EvidenceParamsAminoMsg): _129.EvidenceParams;
            fromProtoMsg(message: _129.EvidenceParamsProtoMsg): _129.EvidenceParams;
            toProto(message: _129.EvidenceParams): Uint8Array;
            toProtoMsg(message: _129.EvidenceParams): _129.EvidenceParamsProtoMsg;
        };
        ValidatorParams: {
            typeUrl: string;
            encode(message: _129.ValidatorParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _129.ValidatorParams;
            fromJSON(object: any): _129.ValidatorParams;
            toJSON(message: _129.ValidatorParams): unknown;
            fromPartial(object: Partial<_129.ValidatorParams>): _129.ValidatorParams;
            fromSDK(object: _129.ValidatorParamsSDKType): _129.ValidatorParams;
            toSDK(message: _129.ValidatorParams): _129.ValidatorParamsSDKType;
            fromAmino(object: _129.ValidatorParamsAmino): _129.ValidatorParams;
            toAmino(message: _129.ValidatorParams): _129.ValidatorParamsAmino;
            fromAminoMsg(object: _129.ValidatorParamsAminoMsg): _129.ValidatorParams;
            fromProtoMsg(message: _129.ValidatorParamsProtoMsg): _129.ValidatorParams;
            toProto(message: _129.ValidatorParams): Uint8Array;
            toProtoMsg(message: _129.ValidatorParams): _129.ValidatorParamsProtoMsg;
        };
        VersionParams: {
            typeUrl: string;
            encode(message: _129.VersionParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _129.VersionParams;
            fromJSON(object: any): _129.VersionParams;
            toJSON(message: _129.VersionParams): unknown;
            fromPartial(object: Partial<_129.VersionParams>): _129.VersionParams;
            fromSDK(object: _129.VersionParamsSDKType): _129.VersionParams;
            toSDK(message: _129.VersionParams): _129.VersionParamsSDKType;
            fromAmino(object: _129.VersionParamsAmino): _129.VersionParams;
            toAmino(message: _129.VersionParams): _129.VersionParamsAmino;
            fromAminoMsg(object: _129.VersionParamsAminoMsg): _129.VersionParams;
            fromProtoMsg(message: _129.VersionParamsProtoMsg): _129.VersionParams;
            toProto(message: _129.VersionParams): Uint8Array;
            toProtoMsg(message: _129.VersionParams): _129.VersionParamsProtoMsg;
        };
        HashedParams: {
            typeUrl: string;
            encode(message: _129.HashedParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _129.HashedParams;
            fromJSON(object: any): _129.HashedParams;
            toJSON(message: _129.HashedParams): unknown;
            fromPartial(object: Partial<_129.HashedParams>): _129.HashedParams;
            fromSDK(object: _129.HashedParamsSDKType): _129.HashedParams;
            toSDK(message: _129.HashedParams): _129.HashedParamsSDKType;
            fromAmino(object: _129.HashedParamsAmino): _129.HashedParams;
            toAmino(message: _129.HashedParams): _129.HashedParamsAmino;
            fromAminoMsg(object: _129.HashedParamsAminoMsg): _129.HashedParams;
            fromProtoMsg(message: _129.HashedParamsProtoMsg): _129.HashedParams;
            toProto(message: _129.HashedParams): Uint8Array;
            toProtoMsg(message: _129.HashedParams): _129.HashedParamsProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            encode(message: _128.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _128.Evidence;
            fromJSON(object: any): _128.Evidence;
            toJSON(message: _128.Evidence): unknown;
            fromPartial(object: Partial<_128.Evidence>): _128.Evidence;
            fromSDK(object: _128.EvidenceSDKType): _128.Evidence;
            toSDK(message: _128.Evidence): _128.EvidenceSDKType;
            fromAmino(object: _128.EvidenceAmino): _128.Evidence;
            toAmino(message: _128.Evidence): _128.EvidenceAmino;
            fromAminoMsg(object: _128.EvidenceAminoMsg): _128.Evidence;
            fromProtoMsg(message: _128.EvidenceProtoMsg): _128.Evidence;
            toProto(message: _128.Evidence): Uint8Array;
            toProtoMsg(message: _128.Evidence): _128.EvidenceProtoMsg;
        };
        DuplicateVoteEvidence: {
            typeUrl: string;
            encode(message: _128.DuplicateVoteEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _128.DuplicateVoteEvidence;
            fromJSON(object: any): _128.DuplicateVoteEvidence;
            toJSON(message: _128.DuplicateVoteEvidence): unknown;
            fromPartial(object: Partial<_128.DuplicateVoteEvidence>): _128.DuplicateVoteEvidence;
            fromSDK(object: _128.DuplicateVoteEvidenceSDKType): _128.DuplicateVoteEvidence;
            toSDK(message: _128.DuplicateVoteEvidence): _128.DuplicateVoteEvidenceSDKType;
            fromAmino(object: _128.DuplicateVoteEvidenceAmino): _128.DuplicateVoteEvidence;
            toAmino(message: _128.DuplicateVoteEvidence): _128.DuplicateVoteEvidenceAmino;
            fromAminoMsg(object: _128.DuplicateVoteEvidenceAminoMsg): _128.DuplicateVoteEvidence;
            fromProtoMsg(message: _128.DuplicateVoteEvidenceProtoMsg): _128.DuplicateVoteEvidence;
            toProto(message: _128.DuplicateVoteEvidence): Uint8Array;
            toProtoMsg(message: _128.DuplicateVoteEvidence): _128.DuplicateVoteEvidenceProtoMsg;
        };
        LightClientAttackEvidence: {
            typeUrl: string;
            encode(message: _128.LightClientAttackEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _128.LightClientAttackEvidence;
            fromJSON(object: any): _128.LightClientAttackEvidence;
            toJSON(message: _128.LightClientAttackEvidence): unknown;
            fromPartial(object: Partial<_128.LightClientAttackEvidence>): _128.LightClientAttackEvidence;
            fromSDK(object: _128.LightClientAttackEvidenceSDKType): _128.LightClientAttackEvidence;
            toSDK(message: _128.LightClientAttackEvidence): _128.LightClientAttackEvidenceSDKType;
            fromAmino(object: _128.LightClientAttackEvidenceAmino): _128.LightClientAttackEvidence;
            toAmino(message: _128.LightClientAttackEvidence): _128.LightClientAttackEvidenceAmino;
            fromAminoMsg(object: _128.LightClientAttackEvidenceAminoMsg): _128.LightClientAttackEvidence;
            fromProtoMsg(message: _128.LightClientAttackEvidenceProtoMsg): _128.LightClientAttackEvidence;
            toProto(message: _128.LightClientAttackEvidence): Uint8Array;
            toProtoMsg(message: _128.LightClientAttackEvidence): _128.LightClientAttackEvidenceProtoMsg;
        };
        EvidenceList: {
            typeUrl: string;
            encode(message: _128.EvidenceList, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _128.EvidenceList;
            fromJSON(object: any): _128.EvidenceList;
            toJSON(message: _128.EvidenceList): unknown;
            fromPartial(object: Partial<_128.EvidenceList>): _128.EvidenceList;
            fromSDK(object: _128.EvidenceListSDKType): _128.EvidenceList;
            toSDK(message: _128.EvidenceList): _128.EvidenceListSDKType;
            fromAmino(object: _128.EvidenceListAmino): _128.EvidenceList;
            toAmino(message: _128.EvidenceList): _128.EvidenceListAmino;
            fromAminoMsg(object: _128.EvidenceListAminoMsg): _128.EvidenceList;
            fromProtoMsg(message: _128.EvidenceListProtoMsg): _128.EvidenceList;
            toProto(message: _128.EvidenceList): Uint8Array;
            toProtoMsg(message: _128.EvidenceList): _128.EvidenceListProtoMsg;
        };
        Block: {
            typeUrl: string;
            encode(message: _127.Block, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _127.Block;
            fromJSON(object: any): _127.Block;
            toJSON(message: _127.Block): unknown;
            fromPartial(object: Partial<_127.Block>): _127.Block;
            fromSDK(object: _127.BlockSDKType): _127.Block;
            toSDK(message: _127.Block): _127.BlockSDKType;
            fromAmino(object: _127.BlockAmino): _127.Block;
            toAmino(message: _127.Block): _127.BlockAmino;
            fromAminoMsg(object: _127.BlockAminoMsg): _127.Block;
            fromProtoMsg(message: _127.BlockProtoMsg): _127.Block;
            toProto(message: _127.Block): Uint8Array;
            toProtoMsg(message: _127.Block): _127.BlockProtoMsg;
        };
    };
    const version: {
        protobufPackage: "tendermint.version";
        App: {
            typeUrl: string;
            encode(message: _132.App, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.App;
            fromJSON(object: any): _132.App;
            toJSON(message: _132.App): unknown;
            fromPartial(object: Partial<_132.App>): _132.App;
            fromSDK(object: _132.AppSDKType): _132.App;
            toSDK(message: _132.App): _132.AppSDKType;
            fromAmino(object: _132.AppAmino): _132.App;
            toAmino(message: _132.App): _132.AppAmino;
            fromAminoMsg(object: _132.AppAminoMsg): _132.App;
            fromProtoMsg(message: _132.AppProtoMsg): _132.App;
            toProto(message: _132.App): Uint8Array;
            toProtoMsg(message: _132.App): _132.AppProtoMsg;
        };
        Consensus: {
            typeUrl: string;
            encode(message: _132.Consensus, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.Consensus;
            fromJSON(object: any): _132.Consensus;
            toJSON(message: _132.Consensus): unknown;
            fromPartial(object: Partial<_132.Consensus>): _132.Consensus;
            fromSDK(object: _132.ConsensusSDKType): _132.Consensus;
            toSDK(message: _132.Consensus): _132.ConsensusSDKType;
            fromAmino(object: _132.ConsensusAmino): _132.Consensus;
            toAmino(message: _132.Consensus): _132.ConsensusAmino;
            fromAminoMsg(object: _132.ConsensusAminoMsg): _132.Consensus;
            fromProtoMsg(message: _132.ConsensusProtoMsg): _132.Consensus;
            toProto(message: _132.Consensus): Uint8Array;
            toProtoMsg(message: _132.Consensus): _132.ConsensusProtoMsg;
        };
    };
}
