import * as _168 from "./abci/types";
import * as _169 from "./crypto/keys";
import * as _170 from "./crypto/proof";
import * as _171 from "./libs/bits/types";
import * as _172 from "./p2p/types";
import * as _173 from "./types/block";
import * as _174 from "./types/evidence";
import * as _175 from "./types/params";
import * as _176 from "./types/types";
import * as _177 from "./types/validator";
import * as _178 from "./version/types";
export declare namespace tendermint {
    const abci: {
        checkTxTypeFromJSON(object: any): _168.CheckTxType;
        checkTxTypeToJSON(object: _168.CheckTxType): string;
        responseOfferSnapshot_ResultFromJSON(object: any): _168.ResponseOfferSnapshot_Result;
        responseOfferSnapshot_ResultToJSON(object: _168.ResponseOfferSnapshot_Result): string;
        responseApplySnapshotChunk_ResultFromJSON(object: any): _168.ResponseApplySnapshotChunk_Result;
        responseApplySnapshotChunk_ResultToJSON(object: _168.ResponseApplySnapshotChunk_Result): string;
        responseProcessProposal_ProposalStatusFromJSON(object: any): _168.ResponseProcessProposal_ProposalStatus;
        responseProcessProposal_ProposalStatusToJSON(object: _168.ResponseProcessProposal_ProposalStatus): string;
        responseVerifyVoteExtension_VerifyStatusFromJSON(object: any): _168.ResponseVerifyVoteExtension_VerifyStatus;
        responseVerifyVoteExtension_VerifyStatusToJSON(object: _168.ResponseVerifyVoteExtension_VerifyStatus): string;
        misbehaviorTypeFromJSON(object: any): _168.MisbehaviorType;
        misbehaviorTypeToJSON(object: _168.MisbehaviorType): string;
        protobufPackage: "tendermint.abci";
        CheckTxType: typeof _168.CheckTxType;
        CheckTxTypeSDKType: typeof _168.CheckTxType;
        CheckTxTypeAmino: typeof _168.CheckTxType;
        ResponseOfferSnapshot_Result: typeof _168.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultSDKType: typeof _168.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultAmino: typeof _168.ResponseOfferSnapshot_Result;
        ResponseApplySnapshotChunk_Result: typeof _168.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultSDKType: typeof _168.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultAmino: typeof _168.ResponseApplySnapshotChunk_Result;
        ResponseProcessProposal_ProposalStatus: typeof _168.ResponseProcessProposal_ProposalStatus;
        ResponseProcessProposal_ProposalStatusSDKType: typeof _168.ResponseProcessProposal_ProposalStatus;
        ResponseProcessProposal_ProposalStatusAmino: typeof _168.ResponseProcessProposal_ProposalStatus;
        ResponseVerifyVoteExtension_VerifyStatus: typeof _168.ResponseVerifyVoteExtension_VerifyStatus;
        ResponseVerifyVoteExtension_VerifyStatusSDKType: typeof _168.ResponseVerifyVoteExtension_VerifyStatus;
        ResponseVerifyVoteExtension_VerifyStatusAmino: typeof _168.ResponseVerifyVoteExtension_VerifyStatus;
        MisbehaviorType: typeof _168.MisbehaviorType;
        MisbehaviorTypeSDKType: typeof _168.MisbehaviorType;
        MisbehaviorTypeAmino: typeof _168.MisbehaviorType;
        Request: {
            typeUrl: string;
            encode(message: _168.Request, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.Request;
            fromJSON(object: any): _168.Request;
            toJSON(message: _168.Request): unknown;
            fromPartial(object: Partial<_168.Request>): _168.Request;
            fromAmino(object: _168.RequestAmino): _168.Request;
            toAmino(message: _168.Request): _168.RequestAmino;
            fromAminoMsg(object: _168.RequestAminoMsg): _168.Request;
            fromProtoMsg(message: _168.RequestProtoMsg): _168.Request;
            toProto(message: _168.Request): Uint8Array;
            toProtoMsg(message: _168.Request): _168.RequestProtoMsg;
        };
        RequestEcho: {
            typeUrl: string;
            encode(message: _168.RequestEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.RequestEcho;
            fromJSON(object: any): _168.RequestEcho;
            toJSON(message: _168.RequestEcho): unknown;
            fromPartial(object: Partial<_168.RequestEcho>): _168.RequestEcho;
            fromAmino(object: _168.RequestEchoAmino): _168.RequestEcho;
            toAmino(message: _168.RequestEcho): _168.RequestEchoAmino;
            fromAminoMsg(object: _168.RequestEchoAminoMsg): _168.RequestEcho;
            fromProtoMsg(message: _168.RequestEchoProtoMsg): _168.RequestEcho;
            toProto(message: _168.RequestEcho): Uint8Array;
            toProtoMsg(message: _168.RequestEcho): _168.RequestEchoProtoMsg;
        };
        RequestFlush: {
            typeUrl: string;
            encode(_: _168.RequestFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.RequestFlush;
            fromJSON(_: any): _168.RequestFlush;
            toJSON(_: _168.RequestFlush): unknown;
            fromPartial(_: Partial<_168.RequestFlush>): _168.RequestFlush;
            fromAmino(_: _168.RequestFlushAmino): _168.RequestFlush;
            toAmino(_: _168.RequestFlush): _168.RequestFlushAmino;
            fromAminoMsg(object: _168.RequestFlushAminoMsg): _168.RequestFlush;
            fromProtoMsg(message: _168.RequestFlushProtoMsg): _168.RequestFlush;
            toProto(message: _168.RequestFlush): Uint8Array;
            toProtoMsg(message: _168.RequestFlush): _168.RequestFlushProtoMsg;
        };
        RequestInfo: {
            typeUrl: string;
            encode(message: _168.RequestInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.RequestInfo;
            fromJSON(object: any): _168.RequestInfo;
            toJSON(message: _168.RequestInfo): unknown;
            fromPartial(object: Partial<_168.RequestInfo>): _168.RequestInfo;
            fromAmino(object: _168.RequestInfoAmino): _168.RequestInfo;
            toAmino(message: _168.RequestInfo): _168.RequestInfoAmino;
            fromAminoMsg(object: _168.RequestInfoAminoMsg): _168.RequestInfo;
            fromProtoMsg(message: _168.RequestInfoProtoMsg): _168.RequestInfo;
            toProto(message: _168.RequestInfo): Uint8Array;
            toProtoMsg(message: _168.RequestInfo): _168.RequestInfoProtoMsg;
        };
        RequestInitChain: {
            typeUrl: string;
            encode(message: _168.RequestInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.RequestInitChain;
            fromJSON(object: any): _168.RequestInitChain;
            toJSON(message: _168.RequestInitChain): unknown;
            fromPartial(object: Partial<_168.RequestInitChain>): _168.RequestInitChain;
            fromAmino(object: _168.RequestInitChainAmino): _168.RequestInitChain;
            toAmino(message: _168.RequestInitChain): _168.RequestInitChainAmino;
            fromAminoMsg(object: _168.RequestInitChainAminoMsg): _168.RequestInitChain;
            fromProtoMsg(message: _168.RequestInitChainProtoMsg): _168.RequestInitChain;
            toProto(message: _168.RequestInitChain): Uint8Array;
            toProtoMsg(message: _168.RequestInitChain): _168.RequestInitChainProtoMsg;
        };
        RequestQuery: {
            typeUrl: string;
            encode(message: _168.RequestQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.RequestQuery;
            fromJSON(object: any): _168.RequestQuery;
            toJSON(message: _168.RequestQuery): unknown;
            fromPartial(object: Partial<_168.RequestQuery>): _168.RequestQuery;
            fromAmino(object: _168.RequestQueryAmino): _168.RequestQuery;
            toAmino(message: _168.RequestQuery): _168.RequestQueryAmino;
            fromAminoMsg(object: _168.RequestQueryAminoMsg): _168.RequestQuery;
            fromProtoMsg(message: _168.RequestQueryProtoMsg): _168.RequestQuery;
            toProto(message: _168.RequestQuery): Uint8Array;
            toProtoMsg(message: _168.RequestQuery): _168.RequestQueryProtoMsg;
        };
        RequestCheckTx: {
            typeUrl: string;
            encode(message: _168.RequestCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.RequestCheckTx;
            fromJSON(object: any): _168.RequestCheckTx;
            toJSON(message: _168.RequestCheckTx): unknown;
            fromPartial(object: Partial<_168.RequestCheckTx>): _168.RequestCheckTx;
            fromAmino(object: _168.RequestCheckTxAmino): _168.RequestCheckTx;
            toAmino(message: _168.RequestCheckTx): _168.RequestCheckTxAmino;
            fromAminoMsg(object: _168.RequestCheckTxAminoMsg): _168.RequestCheckTx;
            fromProtoMsg(message: _168.RequestCheckTxProtoMsg): _168.RequestCheckTx;
            toProto(message: _168.RequestCheckTx): Uint8Array;
            toProtoMsg(message: _168.RequestCheckTx): _168.RequestCheckTxProtoMsg;
        };
        RequestCommit: {
            typeUrl: string;
            encode(_: _168.RequestCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.RequestCommit;
            fromJSON(_: any): _168.RequestCommit;
            toJSON(_: _168.RequestCommit): unknown;
            fromPartial(_: Partial<_168.RequestCommit>): _168.RequestCommit;
            fromAmino(_: _168.RequestCommitAmino): _168.RequestCommit;
            toAmino(_: _168.RequestCommit): _168.RequestCommitAmino;
            fromAminoMsg(object: _168.RequestCommitAminoMsg): _168.RequestCommit;
            fromProtoMsg(message: _168.RequestCommitProtoMsg): _168.RequestCommit;
            toProto(message: _168.RequestCommit): Uint8Array;
            toProtoMsg(message: _168.RequestCommit): _168.RequestCommitProtoMsg;
        };
        RequestListSnapshots: {
            typeUrl: string;
            encode(_: _168.RequestListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.RequestListSnapshots;
            fromJSON(_: any): _168.RequestListSnapshots;
            toJSON(_: _168.RequestListSnapshots): unknown;
            fromPartial(_: Partial<_168.RequestListSnapshots>): _168.RequestListSnapshots;
            fromAmino(_: _168.RequestListSnapshotsAmino): _168.RequestListSnapshots;
            toAmino(_: _168.RequestListSnapshots): _168.RequestListSnapshotsAmino;
            fromAminoMsg(object: _168.RequestListSnapshotsAminoMsg): _168.RequestListSnapshots;
            fromProtoMsg(message: _168.RequestListSnapshotsProtoMsg): _168.RequestListSnapshots;
            toProto(message: _168.RequestListSnapshots): Uint8Array;
            toProtoMsg(message: _168.RequestListSnapshots): _168.RequestListSnapshotsProtoMsg;
        };
        RequestOfferSnapshot: {
            typeUrl: string;
            encode(message: _168.RequestOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.RequestOfferSnapshot;
            fromJSON(object: any): _168.RequestOfferSnapshot;
            toJSON(message: _168.RequestOfferSnapshot): unknown;
            fromPartial(object: Partial<_168.RequestOfferSnapshot>): _168.RequestOfferSnapshot;
            fromAmino(object: _168.RequestOfferSnapshotAmino): _168.RequestOfferSnapshot;
            toAmino(message: _168.RequestOfferSnapshot): _168.RequestOfferSnapshotAmino;
            fromAminoMsg(object: _168.RequestOfferSnapshotAminoMsg): _168.RequestOfferSnapshot;
            fromProtoMsg(message: _168.RequestOfferSnapshotProtoMsg): _168.RequestOfferSnapshot;
            toProto(message: _168.RequestOfferSnapshot): Uint8Array;
            toProtoMsg(message: _168.RequestOfferSnapshot): _168.RequestOfferSnapshotProtoMsg;
        };
        RequestLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _168.RequestLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.RequestLoadSnapshotChunk;
            fromJSON(object: any): _168.RequestLoadSnapshotChunk;
            toJSON(message: _168.RequestLoadSnapshotChunk): unknown;
            fromPartial(object: Partial<_168.RequestLoadSnapshotChunk>): _168.RequestLoadSnapshotChunk;
            fromAmino(object: _168.RequestLoadSnapshotChunkAmino): _168.RequestLoadSnapshotChunk;
            toAmino(message: _168.RequestLoadSnapshotChunk): _168.RequestLoadSnapshotChunkAmino;
            fromAminoMsg(object: _168.RequestLoadSnapshotChunkAminoMsg): _168.RequestLoadSnapshotChunk;
            fromProtoMsg(message: _168.RequestLoadSnapshotChunkProtoMsg): _168.RequestLoadSnapshotChunk;
            toProto(message: _168.RequestLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _168.RequestLoadSnapshotChunk): _168.RequestLoadSnapshotChunkProtoMsg;
        };
        RequestApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _168.RequestApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.RequestApplySnapshotChunk;
            fromJSON(object: any): _168.RequestApplySnapshotChunk;
            toJSON(message: _168.RequestApplySnapshotChunk): unknown;
            fromPartial(object: Partial<_168.RequestApplySnapshotChunk>): _168.RequestApplySnapshotChunk;
            fromAmino(object: _168.RequestApplySnapshotChunkAmino): _168.RequestApplySnapshotChunk;
            toAmino(message: _168.RequestApplySnapshotChunk): _168.RequestApplySnapshotChunkAmino;
            fromAminoMsg(object: _168.RequestApplySnapshotChunkAminoMsg): _168.RequestApplySnapshotChunk;
            fromProtoMsg(message: _168.RequestApplySnapshotChunkProtoMsg): _168.RequestApplySnapshotChunk;
            toProto(message: _168.RequestApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _168.RequestApplySnapshotChunk): _168.RequestApplySnapshotChunkProtoMsg;
        };
        RequestPrepareProposal: {
            typeUrl: string;
            encode(message: _168.RequestPrepareProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.RequestPrepareProposal;
            fromJSON(object: any): _168.RequestPrepareProposal;
            toJSON(message: _168.RequestPrepareProposal): unknown;
            fromPartial(object: Partial<_168.RequestPrepareProposal>): _168.RequestPrepareProposal;
            fromAmino(object: _168.RequestPrepareProposalAmino): _168.RequestPrepareProposal;
            toAmino(message: _168.RequestPrepareProposal): _168.RequestPrepareProposalAmino;
            fromAminoMsg(object: _168.RequestPrepareProposalAminoMsg): _168.RequestPrepareProposal;
            fromProtoMsg(message: _168.RequestPrepareProposalProtoMsg): _168.RequestPrepareProposal;
            toProto(message: _168.RequestPrepareProposal): Uint8Array;
            toProtoMsg(message: _168.RequestPrepareProposal): _168.RequestPrepareProposalProtoMsg;
        };
        RequestProcessProposal: {
            typeUrl: string;
            encode(message: _168.RequestProcessProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.RequestProcessProposal;
            fromJSON(object: any): _168.RequestProcessProposal;
            toJSON(message: _168.RequestProcessProposal): unknown;
            fromPartial(object: Partial<_168.RequestProcessProposal>): _168.RequestProcessProposal;
            fromAmino(object: _168.RequestProcessProposalAmino): _168.RequestProcessProposal;
            toAmino(message: _168.RequestProcessProposal): _168.RequestProcessProposalAmino;
            fromAminoMsg(object: _168.RequestProcessProposalAminoMsg): _168.RequestProcessProposal;
            fromProtoMsg(message: _168.RequestProcessProposalProtoMsg): _168.RequestProcessProposal;
            toProto(message: _168.RequestProcessProposal): Uint8Array;
            toProtoMsg(message: _168.RequestProcessProposal): _168.RequestProcessProposalProtoMsg;
        };
        RequestExtendVote: {
            typeUrl: string;
            encode(message: _168.RequestExtendVote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.RequestExtendVote;
            fromJSON(object: any): _168.RequestExtendVote;
            toJSON(message: _168.RequestExtendVote): unknown;
            fromPartial(object: Partial<_168.RequestExtendVote>): _168.RequestExtendVote;
            fromAmino(object: _168.RequestExtendVoteAmino): _168.RequestExtendVote;
            toAmino(message: _168.RequestExtendVote): _168.RequestExtendVoteAmino;
            fromAminoMsg(object: _168.RequestExtendVoteAminoMsg): _168.RequestExtendVote;
            fromProtoMsg(message: _168.RequestExtendVoteProtoMsg): _168.RequestExtendVote;
            toProto(message: _168.RequestExtendVote): Uint8Array;
            toProtoMsg(message: _168.RequestExtendVote): _168.RequestExtendVoteProtoMsg;
        };
        RequestVerifyVoteExtension: {
            typeUrl: string;
            encode(message: _168.RequestVerifyVoteExtension, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.RequestVerifyVoteExtension;
            fromJSON(object: any): _168.RequestVerifyVoteExtension;
            toJSON(message: _168.RequestVerifyVoteExtension): unknown;
            fromPartial(object: Partial<_168.RequestVerifyVoteExtension>): _168.RequestVerifyVoteExtension;
            fromAmino(object: _168.RequestVerifyVoteExtensionAmino): _168.RequestVerifyVoteExtension;
            toAmino(message: _168.RequestVerifyVoteExtension): _168.RequestVerifyVoteExtensionAmino;
            fromAminoMsg(object: _168.RequestVerifyVoteExtensionAminoMsg): _168.RequestVerifyVoteExtension;
            fromProtoMsg(message: _168.RequestVerifyVoteExtensionProtoMsg): _168.RequestVerifyVoteExtension;
            toProto(message: _168.RequestVerifyVoteExtension): Uint8Array;
            toProtoMsg(message: _168.RequestVerifyVoteExtension): _168.RequestVerifyVoteExtensionProtoMsg;
        };
        RequestFinalizeBlock: {
            typeUrl: string;
            encode(message: _168.RequestFinalizeBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.RequestFinalizeBlock;
            fromJSON(object: any): _168.RequestFinalizeBlock;
            toJSON(message: _168.RequestFinalizeBlock): unknown;
            fromPartial(object: Partial<_168.RequestFinalizeBlock>): _168.RequestFinalizeBlock;
            fromAmino(object: _168.RequestFinalizeBlockAmino): _168.RequestFinalizeBlock;
            toAmino(message: _168.RequestFinalizeBlock): _168.RequestFinalizeBlockAmino;
            fromAminoMsg(object: _168.RequestFinalizeBlockAminoMsg): _168.RequestFinalizeBlock;
            fromProtoMsg(message: _168.RequestFinalizeBlockProtoMsg): _168.RequestFinalizeBlock;
            toProto(message: _168.RequestFinalizeBlock): Uint8Array;
            toProtoMsg(message: _168.RequestFinalizeBlock): _168.RequestFinalizeBlockProtoMsg;
        };
        Response: {
            typeUrl: string;
            encode(message: _168.Response, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.Response;
            fromJSON(object: any): _168.Response;
            toJSON(message: _168.Response): unknown;
            fromPartial(object: Partial<_168.Response>): _168.Response;
            fromAmino(object: _168.ResponseAmino): _168.Response;
            toAmino(message: _168.Response): _168.ResponseAmino;
            fromAminoMsg(object: _168.ResponseAminoMsg): _168.Response;
            fromProtoMsg(message: _168.ResponseProtoMsg): _168.Response;
            toProto(message: _168.Response): Uint8Array;
            toProtoMsg(message: _168.Response): _168.ResponseProtoMsg;
        };
        ResponseException: {
            typeUrl: string;
            encode(message: _168.ResponseException, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.ResponseException;
            fromJSON(object: any): _168.ResponseException;
            toJSON(message: _168.ResponseException): unknown;
            fromPartial(object: Partial<_168.ResponseException>): _168.ResponseException;
            fromAmino(object: _168.ResponseExceptionAmino): _168.ResponseException;
            toAmino(message: _168.ResponseException): _168.ResponseExceptionAmino;
            fromAminoMsg(object: _168.ResponseExceptionAminoMsg): _168.ResponseException;
            fromProtoMsg(message: _168.ResponseExceptionProtoMsg): _168.ResponseException;
            toProto(message: _168.ResponseException): Uint8Array;
            toProtoMsg(message: _168.ResponseException): _168.ResponseExceptionProtoMsg;
        };
        ResponseEcho: {
            typeUrl: string;
            encode(message: _168.ResponseEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.ResponseEcho;
            fromJSON(object: any): _168.ResponseEcho;
            toJSON(message: _168.ResponseEcho): unknown;
            fromPartial(object: Partial<_168.ResponseEcho>): _168.ResponseEcho;
            fromAmino(object: _168.ResponseEchoAmino): _168.ResponseEcho;
            toAmino(message: _168.ResponseEcho): _168.ResponseEchoAmino;
            fromAminoMsg(object: _168.ResponseEchoAminoMsg): _168.ResponseEcho;
            fromProtoMsg(message: _168.ResponseEchoProtoMsg): _168.ResponseEcho;
            toProto(message: _168.ResponseEcho): Uint8Array;
            toProtoMsg(message: _168.ResponseEcho): _168.ResponseEchoProtoMsg;
        };
        ResponseFlush: {
            typeUrl: string;
            encode(_: _168.ResponseFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.ResponseFlush;
            fromJSON(_: any): _168.ResponseFlush;
            toJSON(_: _168.ResponseFlush): unknown;
            fromPartial(_: Partial<_168.ResponseFlush>): _168.ResponseFlush;
            fromAmino(_: _168.ResponseFlushAmino): _168.ResponseFlush;
            toAmino(_: _168.ResponseFlush): _168.ResponseFlushAmino;
            fromAminoMsg(object: _168.ResponseFlushAminoMsg): _168.ResponseFlush;
            fromProtoMsg(message: _168.ResponseFlushProtoMsg): _168.ResponseFlush;
            toProto(message: _168.ResponseFlush): Uint8Array;
            toProtoMsg(message: _168.ResponseFlush): _168.ResponseFlushProtoMsg;
        };
        ResponseInfo: {
            typeUrl: string;
            encode(message: _168.ResponseInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.ResponseInfo;
            fromJSON(object: any): _168.ResponseInfo;
            toJSON(message: _168.ResponseInfo): unknown;
            fromPartial(object: Partial<_168.ResponseInfo>): _168.ResponseInfo;
            fromAmino(object: _168.ResponseInfoAmino): _168.ResponseInfo;
            toAmino(message: _168.ResponseInfo): _168.ResponseInfoAmino;
            fromAminoMsg(object: _168.ResponseInfoAminoMsg): _168.ResponseInfo;
            fromProtoMsg(message: _168.ResponseInfoProtoMsg): _168.ResponseInfo;
            toProto(message: _168.ResponseInfo): Uint8Array;
            toProtoMsg(message: _168.ResponseInfo): _168.ResponseInfoProtoMsg;
        };
        ResponseInitChain: {
            typeUrl: string;
            encode(message: _168.ResponseInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.ResponseInitChain;
            fromJSON(object: any): _168.ResponseInitChain;
            toJSON(message: _168.ResponseInitChain): unknown;
            fromPartial(object: Partial<_168.ResponseInitChain>): _168.ResponseInitChain;
            fromAmino(object: _168.ResponseInitChainAmino): _168.ResponseInitChain;
            toAmino(message: _168.ResponseInitChain): _168.ResponseInitChainAmino;
            fromAminoMsg(object: _168.ResponseInitChainAminoMsg): _168.ResponseInitChain;
            fromProtoMsg(message: _168.ResponseInitChainProtoMsg): _168.ResponseInitChain;
            toProto(message: _168.ResponseInitChain): Uint8Array;
            toProtoMsg(message: _168.ResponseInitChain): _168.ResponseInitChainProtoMsg;
        };
        ResponseQuery: {
            typeUrl: string;
            encode(message: _168.ResponseQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.ResponseQuery;
            fromJSON(object: any): _168.ResponseQuery;
            toJSON(message: _168.ResponseQuery): unknown;
            fromPartial(object: Partial<_168.ResponseQuery>): _168.ResponseQuery;
            fromAmino(object: _168.ResponseQueryAmino): _168.ResponseQuery;
            toAmino(message: _168.ResponseQuery): _168.ResponseQueryAmino;
            fromAminoMsg(object: _168.ResponseQueryAminoMsg): _168.ResponseQuery;
            fromProtoMsg(message: _168.ResponseQueryProtoMsg): _168.ResponseQuery;
            toProto(message: _168.ResponseQuery): Uint8Array;
            toProtoMsg(message: _168.ResponseQuery): _168.ResponseQueryProtoMsg;
        };
        ResponseCheckTx: {
            typeUrl: string;
            encode(message: _168.ResponseCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.ResponseCheckTx;
            fromJSON(object: any): _168.ResponseCheckTx;
            toJSON(message: _168.ResponseCheckTx): unknown;
            fromPartial(object: Partial<_168.ResponseCheckTx>): _168.ResponseCheckTx;
            fromAmino(object: _168.ResponseCheckTxAmino): _168.ResponseCheckTx;
            toAmino(message: _168.ResponseCheckTx): _168.ResponseCheckTxAmino;
            fromAminoMsg(object: _168.ResponseCheckTxAminoMsg): _168.ResponseCheckTx;
            fromProtoMsg(message: _168.ResponseCheckTxProtoMsg): _168.ResponseCheckTx;
            toProto(message: _168.ResponseCheckTx): Uint8Array;
            toProtoMsg(message: _168.ResponseCheckTx): _168.ResponseCheckTxProtoMsg;
        };
        ResponseCommit: {
            typeUrl: string;
            encode(message: _168.ResponseCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.ResponseCommit;
            fromJSON(object: any): _168.ResponseCommit;
            toJSON(message: _168.ResponseCommit): unknown;
            fromPartial(object: Partial<_168.ResponseCommit>): _168.ResponseCommit;
            fromAmino(object: _168.ResponseCommitAmino): _168.ResponseCommit;
            toAmino(message: _168.ResponseCommit): _168.ResponseCommitAmino;
            fromAminoMsg(object: _168.ResponseCommitAminoMsg): _168.ResponseCommit;
            fromProtoMsg(message: _168.ResponseCommitProtoMsg): _168.ResponseCommit;
            toProto(message: _168.ResponseCommit): Uint8Array;
            toProtoMsg(message: _168.ResponseCommit): _168.ResponseCommitProtoMsg;
        };
        ResponseListSnapshots: {
            typeUrl: string;
            encode(message: _168.ResponseListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.ResponseListSnapshots;
            fromJSON(object: any): _168.ResponseListSnapshots;
            toJSON(message: _168.ResponseListSnapshots): unknown;
            fromPartial(object: Partial<_168.ResponseListSnapshots>): _168.ResponseListSnapshots;
            fromAmino(object: _168.ResponseListSnapshotsAmino): _168.ResponseListSnapshots;
            toAmino(message: _168.ResponseListSnapshots): _168.ResponseListSnapshotsAmino;
            fromAminoMsg(object: _168.ResponseListSnapshotsAminoMsg): _168.ResponseListSnapshots;
            fromProtoMsg(message: _168.ResponseListSnapshotsProtoMsg): _168.ResponseListSnapshots;
            toProto(message: _168.ResponseListSnapshots): Uint8Array;
            toProtoMsg(message: _168.ResponseListSnapshots): _168.ResponseListSnapshotsProtoMsg;
        };
        ResponseOfferSnapshot: {
            typeUrl: string;
            encode(message: _168.ResponseOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.ResponseOfferSnapshot;
            fromJSON(object: any): _168.ResponseOfferSnapshot;
            toJSON(message: _168.ResponseOfferSnapshot): unknown;
            fromPartial(object: Partial<_168.ResponseOfferSnapshot>): _168.ResponseOfferSnapshot;
            fromAmino(object: _168.ResponseOfferSnapshotAmino): _168.ResponseOfferSnapshot;
            toAmino(message: _168.ResponseOfferSnapshot): _168.ResponseOfferSnapshotAmino;
            fromAminoMsg(object: _168.ResponseOfferSnapshotAminoMsg): _168.ResponseOfferSnapshot;
            fromProtoMsg(message: _168.ResponseOfferSnapshotProtoMsg): _168.ResponseOfferSnapshot;
            toProto(message: _168.ResponseOfferSnapshot): Uint8Array;
            toProtoMsg(message: _168.ResponseOfferSnapshot): _168.ResponseOfferSnapshotProtoMsg;
        };
        ResponseLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _168.ResponseLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.ResponseLoadSnapshotChunk;
            fromJSON(object: any): _168.ResponseLoadSnapshotChunk;
            toJSON(message: _168.ResponseLoadSnapshotChunk): unknown;
            fromPartial(object: Partial<_168.ResponseLoadSnapshotChunk>): _168.ResponseLoadSnapshotChunk;
            fromAmino(object: _168.ResponseLoadSnapshotChunkAmino): _168.ResponseLoadSnapshotChunk;
            toAmino(message: _168.ResponseLoadSnapshotChunk): _168.ResponseLoadSnapshotChunkAmino;
            fromAminoMsg(object: _168.ResponseLoadSnapshotChunkAminoMsg): _168.ResponseLoadSnapshotChunk;
            fromProtoMsg(message: _168.ResponseLoadSnapshotChunkProtoMsg): _168.ResponseLoadSnapshotChunk;
            toProto(message: _168.ResponseLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _168.ResponseLoadSnapshotChunk): _168.ResponseLoadSnapshotChunkProtoMsg;
        };
        ResponseApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _168.ResponseApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.ResponseApplySnapshotChunk;
            fromJSON(object: any): _168.ResponseApplySnapshotChunk;
            toJSON(message: _168.ResponseApplySnapshotChunk): unknown;
            fromPartial(object: Partial<_168.ResponseApplySnapshotChunk>): _168.ResponseApplySnapshotChunk;
            fromAmino(object: _168.ResponseApplySnapshotChunkAmino): _168.ResponseApplySnapshotChunk;
            toAmino(message: _168.ResponseApplySnapshotChunk): _168.ResponseApplySnapshotChunkAmino;
            fromAminoMsg(object: _168.ResponseApplySnapshotChunkAminoMsg): _168.ResponseApplySnapshotChunk;
            fromProtoMsg(message: _168.ResponseApplySnapshotChunkProtoMsg): _168.ResponseApplySnapshotChunk;
            toProto(message: _168.ResponseApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _168.ResponseApplySnapshotChunk): _168.ResponseApplySnapshotChunkProtoMsg;
        };
        ResponsePrepareProposal: {
            typeUrl: string;
            encode(message: _168.ResponsePrepareProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.ResponsePrepareProposal;
            fromJSON(object: any): _168.ResponsePrepareProposal;
            toJSON(message: _168.ResponsePrepareProposal): unknown;
            fromPartial(object: Partial<_168.ResponsePrepareProposal>): _168.ResponsePrepareProposal;
            fromAmino(object: _168.ResponsePrepareProposalAmino): _168.ResponsePrepareProposal;
            toAmino(message: _168.ResponsePrepareProposal): _168.ResponsePrepareProposalAmino;
            fromAminoMsg(object: _168.ResponsePrepareProposalAminoMsg): _168.ResponsePrepareProposal;
            fromProtoMsg(message: _168.ResponsePrepareProposalProtoMsg): _168.ResponsePrepareProposal;
            toProto(message: _168.ResponsePrepareProposal): Uint8Array;
            toProtoMsg(message: _168.ResponsePrepareProposal): _168.ResponsePrepareProposalProtoMsg;
        };
        ResponseProcessProposal: {
            typeUrl: string;
            encode(message: _168.ResponseProcessProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.ResponseProcessProposal;
            fromJSON(object: any): _168.ResponseProcessProposal;
            toJSON(message: _168.ResponseProcessProposal): unknown;
            fromPartial(object: Partial<_168.ResponseProcessProposal>): _168.ResponseProcessProposal;
            fromAmino(object: _168.ResponseProcessProposalAmino): _168.ResponseProcessProposal;
            toAmino(message: _168.ResponseProcessProposal): _168.ResponseProcessProposalAmino;
            fromAminoMsg(object: _168.ResponseProcessProposalAminoMsg): _168.ResponseProcessProposal;
            fromProtoMsg(message: _168.ResponseProcessProposalProtoMsg): _168.ResponseProcessProposal;
            toProto(message: _168.ResponseProcessProposal): Uint8Array;
            toProtoMsg(message: _168.ResponseProcessProposal): _168.ResponseProcessProposalProtoMsg;
        };
        ResponseExtendVote: {
            typeUrl: string;
            encode(message: _168.ResponseExtendVote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.ResponseExtendVote;
            fromJSON(object: any): _168.ResponseExtendVote;
            toJSON(message: _168.ResponseExtendVote): unknown;
            fromPartial(object: Partial<_168.ResponseExtendVote>): _168.ResponseExtendVote;
            fromAmino(object: _168.ResponseExtendVoteAmino): _168.ResponseExtendVote;
            toAmino(message: _168.ResponseExtendVote): _168.ResponseExtendVoteAmino;
            fromAminoMsg(object: _168.ResponseExtendVoteAminoMsg): _168.ResponseExtendVote;
            fromProtoMsg(message: _168.ResponseExtendVoteProtoMsg): _168.ResponseExtendVote;
            toProto(message: _168.ResponseExtendVote): Uint8Array;
            toProtoMsg(message: _168.ResponseExtendVote): _168.ResponseExtendVoteProtoMsg;
        };
        ResponseVerifyVoteExtension: {
            typeUrl: string;
            encode(message: _168.ResponseVerifyVoteExtension, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.ResponseVerifyVoteExtension;
            fromJSON(object: any): _168.ResponseVerifyVoteExtension;
            toJSON(message: _168.ResponseVerifyVoteExtension): unknown;
            fromPartial(object: Partial<_168.ResponseVerifyVoteExtension>): _168.ResponseVerifyVoteExtension;
            fromAmino(object: _168.ResponseVerifyVoteExtensionAmino): _168.ResponseVerifyVoteExtension;
            toAmino(message: _168.ResponseVerifyVoteExtension): _168.ResponseVerifyVoteExtensionAmino;
            fromAminoMsg(object: _168.ResponseVerifyVoteExtensionAminoMsg): _168.ResponseVerifyVoteExtension;
            fromProtoMsg(message: _168.ResponseVerifyVoteExtensionProtoMsg): _168.ResponseVerifyVoteExtension;
            toProto(message: _168.ResponseVerifyVoteExtension): Uint8Array;
            toProtoMsg(message: _168.ResponseVerifyVoteExtension): _168.ResponseVerifyVoteExtensionProtoMsg;
        };
        ResponseFinalizeBlock: {
            typeUrl: string;
            encode(message: _168.ResponseFinalizeBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.ResponseFinalizeBlock;
            fromJSON(object: any): _168.ResponseFinalizeBlock;
            toJSON(message: _168.ResponseFinalizeBlock): unknown;
            fromPartial(object: Partial<_168.ResponseFinalizeBlock>): _168.ResponseFinalizeBlock;
            fromAmino(object: _168.ResponseFinalizeBlockAmino): _168.ResponseFinalizeBlock;
            toAmino(message: _168.ResponseFinalizeBlock): _168.ResponseFinalizeBlockAmino;
            fromAminoMsg(object: _168.ResponseFinalizeBlockAminoMsg): _168.ResponseFinalizeBlock;
            fromProtoMsg(message: _168.ResponseFinalizeBlockProtoMsg): _168.ResponseFinalizeBlock;
            toProto(message: _168.ResponseFinalizeBlock): Uint8Array;
            toProtoMsg(message: _168.ResponseFinalizeBlock): _168.ResponseFinalizeBlockProtoMsg;
        };
        CommitInfo: {
            typeUrl: string;
            encode(message: _168.CommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.CommitInfo;
            fromJSON(object: any): _168.CommitInfo;
            toJSON(message: _168.CommitInfo): unknown;
            fromPartial(object: Partial<_168.CommitInfo>): _168.CommitInfo;
            fromAmino(object: _168.CommitInfoAmino): _168.CommitInfo;
            toAmino(message: _168.CommitInfo): _168.CommitInfoAmino;
            fromAminoMsg(object: _168.CommitInfoAminoMsg): _168.CommitInfo;
            fromProtoMsg(message: _168.CommitInfoProtoMsg): _168.CommitInfo;
            toProto(message: _168.CommitInfo): Uint8Array;
            toProtoMsg(message: _168.CommitInfo): _168.CommitInfoProtoMsg;
        };
        ExtendedCommitInfo: {
            typeUrl: string;
            encode(message: _168.ExtendedCommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.ExtendedCommitInfo;
            fromJSON(object: any): _168.ExtendedCommitInfo;
            toJSON(message: _168.ExtendedCommitInfo): unknown;
            fromPartial(object: Partial<_168.ExtendedCommitInfo>): _168.ExtendedCommitInfo;
            fromAmino(object: _168.ExtendedCommitInfoAmino): _168.ExtendedCommitInfo;
            toAmino(message: _168.ExtendedCommitInfo): _168.ExtendedCommitInfoAmino;
            fromAminoMsg(object: _168.ExtendedCommitInfoAminoMsg): _168.ExtendedCommitInfo;
            fromProtoMsg(message: _168.ExtendedCommitInfoProtoMsg): _168.ExtendedCommitInfo;
            toProto(message: _168.ExtendedCommitInfo): Uint8Array;
            toProtoMsg(message: _168.ExtendedCommitInfo): _168.ExtendedCommitInfoProtoMsg;
        };
        Event: {
            typeUrl: string;
            encode(message: _168.Event, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.Event;
            fromJSON(object: any): _168.Event;
            toJSON(message: _168.Event): unknown;
            fromPartial(object: Partial<_168.Event>): _168.Event;
            fromAmino(object: _168.EventAmino): _168.Event;
            toAmino(message: _168.Event): _168.EventAmino;
            fromAminoMsg(object: _168.EventAminoMsg): _168.Event;
            fromProtoMsg(message: _168.EventProtoMsg): _168.Event;
            toProto(message: _168.Event): Uint8Array;
            toProtoMsg(message: _168.Event): _168.EventProtoMsg;
        };
        EventAttribute: {
            typeUrl: string;
            encode(message: _168.EventAttribute, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.EventAttribute;
            fromJSON(object: any): _168.EventAttribute;
            toJSON(message: _168.EventAttribute): unknown;
            fromPartial(object: Partial<_168.EventAttribute>): _168.EventAttribute;
            fromAmino(object: _168.EventAttributeAmino): _168.EventAttribute;
            toAmino(message: _168.EventAttribute): _168.EventAttributeAmino;
            fromAminoMsg(object: _168.EventAttributeAminoMsg): _168.EventAttribute;
            fromProtoMsg(message: _168.EventAttributeProtoMsg): _168.EventAttribute;
            toProto(message: _168.EventAttribute): Uint8Array;
            toProtoMsg(message: _168.EventAttribute): _168.EventAttributeProtoMsg;
        };
        ExecTxResult: {
            typeUrl: string;
            encode(message: _168.ExecTxResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.ExecTxResult;
            fromJSON(object: any): _168.ExecTxResult;
            toJSON(message: _168.ExecTxResult): unknown;
            fromPartial(object: Partial<_168.ExecTxResult>): _168.ExecTxResult;
            fromAmino(object: _168.ExecTxResultAmino): _168.ExecTxResult;
            toAmino(message: _168.ExecTxResult): _168.ExecTxResultAmino;
            fromAminoMsg(object: _168.ExecTxResultAminoMsg): _168.ExecTxResult;
            fromProtoMsg(message: _168.ExecTxResultProtoMsg): _168.ExecTxResult;
            toProto(message: _168.ExecTxResult): Uint8Array;
            toProtoMsg(message: _168.ExecTxResult): _168.ExecTxResultProtoMsg;
        };
        TxResult: {
            typeUrl: string;
            encode(message: _168.TxResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.TxResult;
            fromJSON(object: any): _168.TxResult;
            toJSON(message: _168.TxResult): unknown;
            fromPartial(object: Partial<_168.TxResult>): _168.TxResult;
            fromAmino(object: _168.TxResultAmino): _168.TxResult;
            toAmino(message: _168.TxResult): _168.TxResultAmino;
            fromAminoMsg(object: _168.TxResultAminoMsg): _168.TxResult;
            fromProtoMsg(message: _168.TxResultProtoMsg): _168.TxResult;
            toProto(message: _168.TxResult): Uint8Array;
            toProtoMsg(message: _168.TxResult): _168.TxResultProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _168.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.Validator;
            fromJSON(object: any): _168.Validator;
            toJSON(message: _168.Validator): unknown;
            fromPartial(object: Partial<_168.Validator>): _168.Validator;
            fromAmino(object: _168.ValidatorAmino): _168.Validator;
            toAmino(message: _168.Validator): _168.ValidatorAmino;
            fromAminoMsg(object: _168.ValidatorAminoMsg): _168.Validator;
            fromProtoMsg(message: _168.ValidatorProtoMsg): _168.Validator;
            toProto(message: _168.Validator): Uint8Array;
            toProtoMsg(message: _168.Validator): _168.ValidatorProtoMsg;
        };
        ValidatorUpdate: {
            typeUrl: string;
            encode(message: _168.ValidatorUpdate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.ValidatorUpdate;
            fromJSON(object: any): _168.ValidatorUpdate;
            toJSON(message: _168.ValidatorUpdate): unknown;
            fromPartial(object: Partial<_168.ValidatorUpdate>): _168.ValidatorUpdate;
            fromAmino(object: _168.ValidatorUpdateAmino): _168.ValidatorUpdate;
            toAmino(message: _168.ValidatorUpdate): _168.ValidatorUpdateAmino;
            fromAminoMsg(object: _168.ValidatorUpdateAminoMsg): _168.ValidatorUpdate;
            fromProtoMsg(message: _168.ValidatorUpdateProtoMsg): _168.ValidatorUpdate;
            toProto(message: _168.ValidatorUpdate): Uint8Array;
            toProtoMsg(message: _168.ValidatorUpdate): _168.ValidatorUpdateProtoMsg;
        };
        VoteInfo: {
            typeUrl: string;
            encode(message: _168.VoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.VoteInfo;
            fromJSON(object: any): _168.VoteInfo;
            toJSON(message: _168.VoteInfo): unknown;
            fromPartial(object: Partial<_168.VoteInfo>): _168.VoteInfo;
            fromAmino(object: _168.VoteInfoAmino): _168.VoteInfo;
            toAmino(message: _168.VoteInfo): _168.VoteInfoAmino;
            fromAminoMsg(object: _168.VoteInfoAminoMsg): _168.VoteInfo;
            fromProtoMsg(message: _168.VoteInfoProtoMsg): _168.VoteInfo;
            toProto(message: _168.VoteInfo): Uint8Array;
            toProtoMsg(message: _168.VoteInfo): _168.VoteInfoProtoMsg;
        };
        ExtendedVoteInfo: {
            typeUrl: string;
            encode(message: _168.ExtendedVoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.ExtendedVoteInfo;
            fromJSON(object: any): _168.ExtendedVoteInfo;
            toJSON(message: _168.ExtendedVoteInfo): unknown;
            fromPartial(object: Partial<_168.ExtendedVoteInfo>): _168.ExtendedVoteInfo;
            fromAmino(object: _168.ExtendedVoteInfoAmino): _168.ExtendedVoteInfo;
            toAmino(message: _168.ExtendedVoteInfo): _168.ExtendedVoteInfoAmino;
            fromAminoMsg(object: _168.ExtendedVoteInfoAminoMsg): _168.ExtendedVoteInfo;
            fromProtoMsg(message: _168.ExtendedVoteInfoProtoMsg): _168.ExtendedVoteInfo;
            toProto(message: _168.ExtendedVoteInfo): Uint8Array;
            toProtoMsg(message: _168.ExtendedVoteInfo): _168.ExtendedVoteInfoProtoMsg;
        };
        Misbehavior: {
            typeUrl: string;
            encode(message: _168.Misbehavior, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.Misbehavior;
            fromJSON(object: any): _168.Misbehavior;
            toJSON(message: _168.Misbehavior): unknown;
            fromPartial(object: Partial<_168.Misbehavior>): _168.Misbehavior;
            fromAmino(object: _168.MisbehaviorAmino): _168.Misbehavior;
            toAmino(message: _168.Misbehavior): _168.MisbehaviorAmino;
            fromAminoMsg(object: _168.MisbehaviorAminoMsg): _168.Misbehavior;
            fromProtoMsg(message: _168.MisbehaviorProtoMsg): _168.Misbehavior;
            toProto(message: _168.Misbehavior): Uint8Array;
            toProtoMsg(message: _168.Misbehavior): _168.MisbehaviorProtoMsg;
        };
        Snapshot: {
            typeUrl: string;
            encode(message: _168.Snapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.Snapshot;
            fromJSON(object: any): _168.Snapshot;
            toJSON(message: _168.Snapshot): unknown;
            fromPartial(object: Partial<_168.Snapshot>): _168.Snapshot;
            fromAmino(object: _168.SnapshotAmino): _168.Snapshot;
            toAmino(message: _168.Snapshot): _168.SnapshotAmino;
            fromAminoMsg(object: _168.SnapshotAminoMsg): _168.Snapshot;
            fromProtoMsg(message: _168.SnapshotProtoMsg): _168.Snapshot;
            toProto(message: _168.Snapshot): Uint8Array;
            toProtoMsg(message: _168.Snapshot): _168.SnapshotProtoMsg;
        };
    };
    const crypto: {
        protobufPackage: "tendermint.crypto";
        Proof: {
            typeUrl: string;
            encode(message: _170.Proof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _170.Proof;
            fromJSON(object: any): _170.Proof;
            toJSON(message: _170.Proof): unknown;
            fromPartial(object: Partial<_170.Proof>): _170.Proof;
            fromAmino(object: _170.ProofAmino): _170.Proof;
            toAmino(message: _170.Proof): _170.ProofAmino;
            fromAminoMsg(object: _170.ProofAminoMsg): _170.Proof;
            fromProtoMsg(message: _170.ProofProtoMsg): _170.Proof;
            toProto(message: _170.Proof): Uint8Array;
            toProtoMsg(message: _170.Proof): _170.ProofProtoMsg;
        };
        ValueOp: {
            typeUrl: string;
            encode(message: _170.ValueOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _170.ValueOp;
            fromJSON(object: any): _170.ValueOp;
            toJSON(message: _170.ValueOp): unknown;
            fromPartial(object: Partial<_170.ValueOp>): _170.ValueOp;
            fromAmino(object: _170.ValueOpAmino): _170.ValueOp;
            toAmino(message: _170.ValueOp): _170.ValueOpAmino;
            fromAminoMsg(object: _170.ValueOpAminoMsg): _170.ValueOp;
            fromProtoMsg(message: _170.ValueOpProtoMsg): _170.ValueOp;
            toProto(message: _170.ValueOp): Uint8Array;
            toProtoMsg(message: _170.ValueOp): _170.ValueOpProtoMsg;
        };
        DominoOp: {
            typeUrl: string;
            encode(message: _170.DominoOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _170.DominoOp;
            fromJSON(object: any): _170.DominoOp;
            toJSON(message: _170.DominoOp): unknown;
            fromPartial(object: Partial<_170.DominoOp>): _170.DominoOp;
            fromAmino(object: _170.DominoOpAmino): _170.DominoOp;
            toAmino(message: _170.DominoOp): _170.DominoOpAmino;
            fromAminoMsg(object: _170.DominoOpAminoMsg): _170.DominoOp;
            fromProtoMsg(message: _170.DominoOpProtoMsg): _170.DominoOp;
            toProto(message: _170.DominoOp): Uint8Array;
            toProtoMsg(message: _170.DominoOp): _170.DominoOpProtoMsg;
        };
        ProofOp: {
            typeUrl: string;
            encode(message: _170.ProofOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _170.ProofOp;
            fromJSON(object: any): _170.ProofOp;
            toJSON(message: _170.ProofOp): unknown;
            fromPartial(object: Partial<_170.ProofOp>): _170.ProofOp;
            fromAmino(object: _170.ProofOpAmino): _170.ProofOp;
            toAmino(message: _170.ProofOp): _170.ProofOpAmino;
            fromAminoMsg(object: _170.ProofOpAminoMsg): _170.ProofOp;
            fromProtoMsg(message: _170.ProofOpProtoMsg): _170.ProofOp;
            toProto(message: _170.ProofOp): Uint8Array;
            toProtoMsg(message: _170.ProofOp): _170.ProofOpProtoMsg;
        };
        ProofOps: {
            typeUrl: string;
            encode(message: _170.ProofOps, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _170.ProofOps;
            fromJSON(object: any): _170.ProofOps;
            toJSON(message: _170.ProofOps): unknown;
            fromPartial(object: Partial<_170.ProofOps>): _170.ProofOps;
            fromAmino(object: _170.ProofOpsAmino): _170.ProofOps;
            toAmino(message: _170.ProofOps): _170.ProofOpsAmino;
            fromAminoMsg(object: _170.ProofOpsAminoMsg): _170.ProofOps;
            fromProtoMsg(message: _170.ProofOpsProtoMsg): _170.ProofOps;
            toProto(message: _170.ProofOps): Uint8Array;
            toProtoMsg(message: _170.ProofOps): _170.ProofOpsProtoMsg;
        };
        PublicKey: {
            typeUrl: string;
            encode(message: _169.PublicKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.PublicKey;
            fromJSON(object: any): _169.PublicKey;
            toJSON(message: _169.PublicKey): unknown;
            fromPartial(object: Partial<_169.PublicKey>): _169.PublicKey;
            fromAmino(object: _169.PublicKeyAmino): _169.PublicKey;
            toAmino(message: _169.PublicKey): _169.PublicKeyAmino;
            fromAminoMsg(object: _169.PublicKeyAminoMsg): _169.PublicKey;
            fromProtoMsg(message: _169.PublicKeyProtoMsg): _169.PublicKey;
            toProto(message: _169.PublicKey): Uint8Array;
            toProtoMsg(message: _169.PublicKey): _169.PublicKeyProtoMsg;
        };
    };
    namespace libs {
        const bits: {
            protobufPackage: "tendermint.libs.bits";
            BitArray: {
                typeUrl: string;
                encode(message: _171.BitArray, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: import("..").BinaryReader | Uint8Array, length?: number): _171.BitArray;
                fromJSON(object: any): _171.BitArray;
                toJSON(message: _171.BitArray): unknown;
                fromPartial(object: Partial<_171.BitArray>): _171.BitArray;
                fromAmino(object: _171.BitArrayAmino): _171.BitArray;
                toAmino(message: _171.BitArray): _171.BitArrayAmino;
                fromAminoMsg(object: _171.BitArrayAminoMsg): _171.BitArray;
                fromProtoMsg(message: _171.BitArrayProtoMsg): _171.BitArray;
                toProto(message: _171.BitArray): Uint8Array;
                toProtoMsg(message: _171.BitArray): _171.BitArrayProtoMsg;
            };
        };
    }
    const p2p: {
        protobufPackage: "tendermint.p2p";
        NetAddress: {
            typeUrl: string;
            encode(message: _172.NetAddress, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _172.NetAddress;
            fromJSON(object: any): _172.NetAddress;
            toJSON(message: _172.NetAddress): unknown;
            fromPartial(object: Partial<_172.NetAddress>): _172.NetAddress;
            fromAmino(object: _172.NetAddressAmino): _172.NetAddress;
            toAmino(message: _172.NetAddress): _172.NetAddressAmino;
            fromAminoMsg(object: _172.NetAddressAminoMsg): _172.NetAddress;
            fromProtoMsg(message: _172.NetAddressProtoMsg): _172.NetAddress;
            toProto(message: _172.NetAddress): Uint8Array;
            toProtoMsg(message: _172.NetAddress): _172.NetAddressProtoMsg;
        };
        ProtocolVersion: {
            typeUrl: string;
            encode(message: _172.ProtocolVersion, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _172.ProtocolVersion;
            fromJSON(object: any): _172.ProtocolVersion;
            toJSON(message: _172.ProtocolVersion): unknown;
            fromPartial(object: Partial<_172.ProtocolVersion>): _172.ProtocolVersion;
            fromAmino(object: _172.ProtocolVersionAmino): _172.ProtocolVersion;
            toAmino(message: _172.ProtocolVersion): _172.ProtocolVersionAmino;
            fromAminoMsg(object: _172.ProtocolVersionAminoMsg): _172.ProtocolVersion;
            fromProtoMsg(message: _172.ProtocolVersionProtoMsg): _172.ProtocolVersion;
            toProto(message: _172.ProtocolVersion): Uint8Array;
            toProtoMsg(message: _172.ProtocolVersion): _172.ProtocolVersionProtoMsg;
        };
        DefaultNodeInfo: {
            typeUrl: string;
            encode(message: _172.DefaultNodeInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _172.DefaultNodeInfo;
            fromJSON(object: any): _172.DefaultNodeInfo;
            toJSON(message: _172.DefaultNodeInfo): unknown;
            fromPartial(object: Partial<_172.DefaultNodeInfo>): _172.DefaultNodeInfo;
            fromAmino(object: _172.DefaultNodeInfoAmino): _172.DefaultNodeInfo;
            toAmino(message: _172.DefaultNodeInfo): _172.DefaultNodeInfoAmino;
            fromAminoMsg(object: _172.DefaultNodeInfoAminoMsg): _172.DefaultNodeInfo;
            fromProtoMsg(message: _172.DefaultNodeInfoProtoMsg): _172.DefaultNodeInfo;
            toProto(message: _172.DefaultNodeInfo): Uint8Array;
            toProtoMsg(message: _172.DefaultNodeInfo): _172.DefaultNodeInfoProtoMsg;
        };
        DefaultNodeInfoOther: {
            typeUrl: string;
            encode(message: _172.DefaultNodeInfoOther, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _172.DefaultNodeInfoOther;
            fromJSON(object: any): _172.DefaultNodeInfoOther;
            toJSON(message: _172.DefaultNodeInfoOther): unknown;
            fromPartial(object: Partial<_172.DefaultNodeInfoOther>): _172.DefaultNodeInfoOther;
            fromAmino(object: _172.DefaultNodeInfoOtherAmino): _172.DefaultNodeInfoOther;
            toAmino(message: _172.DefaultNodeInfoOther): _172.DefaultNodeInfoOtherAmino;
            fromAminoMsg(object: _172.DefaultNodeInfoOtherAminoMsg): _172.DefaultNodeInfoOther;
            fromProtoMsg(message: _172.DefaultNodeInfoOtherProtoMsg): _172.DefaultNodeInfoOther;
            toProto(message: _172.DefaultNodeInfoOther): Uint8Array;
            toProtoMsg(message: _172.DefaultNodeInfoOther): _172.DefaultNodeInfoOtherProtoMsg;
        };
    };
    const types: {
        blockIDFlagFromJSON(object: any): _177.BlockIDFlag;
        blockIDFlagToJSON(object: _177.BlockIDFlag): string;
        protobufPackage: "tendermint.types";
        BlockIDFlag: typeof _177.BlockIDFlag;
        BlockIDFlagSDKType: typeof _177.BlockIDFlag;
        BlockIDFlagAmino: typeof _177.BlockIDFlag;
        ValidatorSet: {
            typeUrl: string;
            encode(message: _177.ValidatorSet, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _177.ValidatorSet;
            fromJSON(object: any): _177.ValidatorSet;
            toJSON(message: _177.ValidatorSet): unknown;
            fromPartial(object: Partial<_177.ValidatorSet>): _177.ValidatorSet;
            fromAmino(object: _177.ValidatorSetAmino): _177.ValidatorSet;
            toAmino(message: _177.ValidatorSet): _177.ValidatorSetAmino;
            fromAminoMsg(object: _177.ValidatorSetAminoMsg): _177.ValidatorSet;
            fromProtoMsg(message: _177.ValidatorSetProtoMsg): _177.ValidatorSet;
            toProto(message: _177.ValidatorSet): Uint8Array;
            toProtoMsg(message: _177.ValidatorSet): _177.ValidatorSetProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _177.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _177.Validator;
            fromJSON(object: any): _177.Validator;
            toJSON(message: _177.Validator): unknown;
            fromPartial(object: Partial<_177.Validator>): _177.Validator;
            fromAmino(object: _177.ValidatorAmino): _177.Validator;
            toAmino(message: _177.Validator): _177.ValidatorAmino;
            fromAminoMsg(object: _177.ValidatorAminoMsg): _177.Validator;
            fromProtoMsg(message: _177.ValidatorProtoMsg): _177.Validator;
            toProto(message: _177.Validator): Uint8Array;
            toProtoMsg(message: _177.Validator): _177.ValidatorProtoMsg;
        };
        SimpleValidator: {
            typeUrl: string;
            encode(message: _177.SimpleValidator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _177.SimpleValidator;
            fromJSON(object: any): _177.SimpleValidator;
            toJSON(message: _177.SimpleValidator): unknown;
            fromPartial(object: Partial<_177.SimpleValidator>): _177.SimpleValidator;
            fromAmino(object: _177.SimpleValidatorAmino): _177.SimpleValidator;
            toAmino(message: _177.SimpleValidator): _177.SimpleValidatorAmino;
            fromAminoMsg(object: _177.SimpleValidatorAminoMsg): _177.SimpleValidator;
            fromProtoMsg(message: _177.SimpleValidatorProtoMsg): _177.SimpleValidator;
            toProto(message: _177.SimpleValidator): Uint8Array;
            toProtoMsg(message: _177.SimpleValidator): _177.SimpleValidatorProtoMsg;
        };
        signedMsgTypeFromJSON(object: any): _176.SignedMsgType;
        signedMsgTypeToJSON(object: _176.SignedMsgType): string;
        SignedMsgType: typeof _176.SignedMsgType;
        SignedMsgTypeSDKType: typeof _176.SignedMsgType;
        SignedMsgTypeAmino: typeof _176.SignedMsgType;
        PartSetHeader: {
            typeUrl: string;
            encode(message: _176.PartSetHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _176.PartSetHeader;
            fromJSON(object: any): _176.PartSetHeader;
            toJSON(message: _176.PartSetHeader): unknown;
            fromPartial(object: Partial<_176.PartSetHeader>): _176.PartSetHeader;
            fromAmino(object: _176.PartSetHeaderAmino): _176.PartSetHeader;
            toAmino(message: _176.PartSetHeader): _176.PartSetHeaderAmino;
            fromAminoMsg(object: _176.PartSetHeaderAminoMsg): _176.PartSetHeader;
            fromProtoMsg(message: _176.PartSetHeaderProtoMsg): _176.PartSetHeader;
            toProto(message: _176.PartSetHeader): Uint8Array;
            toProtoMsg(message: _176.PartSetHeader): _176.PartSetHeaderProtoMsg;
        };
        Part: {
            typeUrl: string;
            encode(message: _176.Part, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _176.Part;
            fromJSON(object: any): _176.Part;
            toJSON(message: _176.Part): unknown;
            fromPartial(object: Partial<_176.Part>): _176.Part;
            fromAmino(object: _176.PartAmino): _176.Part;
            toAmino(message: _176.Part): _176.PartAmino;
            fromAminoMsg(object: _176.PartAminoMsg): _176.Part;
            fromProtoMsg(message: _176.PartProtoMsg): _176.Part;
            toProto(message: _176.Part): Uint8Array;
            toProtoMsg(message: _176.Part): _176.PartProtoMsg;
        };
        BlockID: {
            typeUrl: string;
            encode(message: _176.BlockID, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _176.BlockID;
            fromJSON(object: any): _176.BlockID;
            toJSON(message: _176.BlockID): unknown;
            fromPartial(object: Partial<_176.BlockID>): _176.BlockID;
            fromAmino(object: _176.BlockIDAmino): _176.BlockID;
            toAmino(message: _176.BlockID): _176.BlockIDAmino;
            fromAminoMsg(object: _176.BlockIDAminoMsg): _176.BlockID;
            fromProtoMsg(message: _176.BlockIDProtoMsg): _176.BlockID;
            toProto(message: _176.BlockID): Uint8Array;
            toProtoMsg(message: _176.BlockID): _176.BlockIDProtoMsg;
        };
        Header: {
            typeUrl: string;
            encode(message: _176.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _176.Header;
            fromJSON(object: any): _176.Header;
            toJSON(message: _176.Header): unknown;
            fromPartial(object: Partial<_176.Header>): _176.Header;
            fromAmino(object: _176.HeaderAmino): _176.Header;
            toAmino(message: _176.Header): _176.HeaderAmino;
            fromAminoMsg(object: _176.HeaderAminoMsg): _176.Header;
            fromProtoMsg(message: _176.HeaderProtoMsg): _176.Header;
            toProto(message: _176.Header): Uint8Array;
            toProtoMsg(message: _176.Header): _176.HeaderProtoMsg;
        };
        Data: {
            typeUrl: string;
            encode(message: _176.Data, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _176.Data;
            fromJSON(object: any): _176.Data;
            toJSON(message: _176.Data): unknown;
            fromPartial(object: Partial<_176.Data>): _176.Data;
            fromAmino(object: _176.DataAmino): _176.Data;
            toAmino(message: _176.Data): _176.DataAmino;
            fromAminoMsg(object: _176.DataAminoMsg): _176.Data;
            fromProtoMsg(message: _176.DataProtoMsg): _176.Data;
            toProto(message: _176.Data): Uint8Array;
            toProtoMsg(message: _176.Data): _176.DataProtoMsg;
        };
        Vote: {
            typeUrl: string;
            encode(message: _176.Vote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _176.Vote;
            fromJSON(object: any): _176.Vote;
            toJSON(message: _176.Vote): unknown;
            fromPartial(object: Partial<_176.Vote>): _176.Vote;
            fromAmino(object: _176.VoteAmino): _176.Vote;
            toAmino(message: _176.Vote): _176.VoteAmino;
            fromAminoMsg(object: _176.VoteAminoMsg): _176.Vote;
            fromProtoMsg(message: _176.VoteProtoMsg): _176.Vote;
            toProto(message: _176.Vote): Uint8Array;
            toProtoMsg(message: _176.Vote): _176.VoteProtoMsg;
        };
        Commit: {
            typeUrl: string;
            encode(message: _176.Commit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _176.Commit;
            fromJSON(object: any): _176.Commit;
            toJSON(message: _176.Commit): unknown;
            fromPartial(object: Partial<_176.Commit>): _176.Commit;
            fromAmino(object: _176.CommitAmino): _176.Commit;
            toAmino(message: _176.Commit): _176.CommitAmino;
            fromAminoMsg(object: _176.CommitAminoMsg): _176.Commit;
            fromProtoMsg(message: _176.CommitProtoMsg): _176.Commit;
            toProto(message: _176.Commit): Uint8Array;
            toProtoMsg(message: _176.Commit): _176.CommitProtoMsg;
        };
        CommitSig: {
            typeUrl: string;
            encode(message: _176.CommitSig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _176.CommitSig;
            fromJSON(object: any): _176.CommitSig;
            toJSON(message: _176.CommitSig): unknown;
            fromPartial(object: Partial<_176.CommitSig>): _176.CommitSig;
            fromAmino(object: _176.CommitSigAmino): _176.CommitSig;
            toAmino(message: _176.CommitSig): _176.CommitSigAmino;
            fromAminoMsg(object: _176.CommitSigAminoMsg): _176.CommitSig;
            fromProtoMsg(message: _176.CommitSigProtoMsg): _176.CommitSig;
            toProto(message: _176.CommitSig): Uint8Array;
            toProtoMsg(message: _176.CommitSig): _176.CommitSigProtoMsg;
        };
        ExtendedCommit: {
            typeUrl: string;
            encode(message: _176.ExtendedCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _176.ExtendedCommit;
            fromJSON(object: any): _176.ExtendedCommit;
            toJSON(message: _176.ExtendedCommit): unknown;
            fromPartial(object: Partial<_176.ExtendedCommit>): _176.ExtendedCommit;
            fromAmino(object: _176.ExtendedCommitAmino): _176.ExtendedCommit;
            toAmino(message: _176.ExtendedCommit): _176.ExtendedCommitAmino;
            fromAminoMsg(object: _176.ExtendedCommitAminoMsg): _176.ExtendedCommit;
            fromProtoMsg(message: _176.ExtendedCommitProtoMsg): _176.ExtendedCommit;
            toProto(message: _176.ExtendedCommit): Uint8Array;
            toProtoMsg(message: _176.ExtendedCommit): _176.ExtendedCommitProtoMsg;
        };
        ExtendedCommitSig: {
            typeUrl: string;
            encode(message: _176.ExtendedCommitSig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _176.ExtendedCommitSig;
            fromJSON(object: any): _176.ExtendedCommitSig;
            toJSON(message: _176.ExtendedCommitSig): unknown;
            fromPartial(object: Partial<_176.ExtendedCommitSig>): _176.ExtendedCommitSig;
            fromAmino(object: _176.ExtendedCommitSigAmino): _176.ExtendedCommitSig;
            toAmino(message: _176.ExtendedCommitSig): _176.ExtendedCommitSigAmino;
            fromAminoMsg(object: _176.ExtendedCommitSigAminoMsg): _176.ExtendedCommitSig;
            fromProtoMsg(message: _176.ExtendedCommitSigProtoMsg): _176.ExtendedCommitSig;
            toProto(message: _176.ExtendedCommitSig): Uint8Array;
            toProtoMsg(message: _176.ExtendedCommitSig): _176.ExtendedCommitSigProtoMsg;
        };
        Proposal: {
            typeUrl: string;
            encode(message: _176.Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _176.Proposal;
            fromJSON(object: any): _176.Proposal;
            toJSON(message: _176.Proposal): unknown;
            fromPartial(object: Partial<_176.Proposal>): _176.Proposal;
            fromAmino(object: _176.ProposalAmino): _176.Proposal;
            toAmino(message: _176.Proposal): _176.ProposalAmino;
            fromAminoMsg(object: _176.ProposalAminoMsg): _176.Proposal;
            fromProtoMsg(message: _176.ProposalProtoMsg): _176.Proposal;
            toProto(message: _176.Proposal): Uint8Array;
            toProtoMsg(message: _176.Proposal): _176.ProposalProtoMsg;
        };
        SignedHeader: {
            typeUrl: string;
            encode(message: _176.SignedHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _176.SignedHeader;
            fromJSON(object: any): _176.SignedHeader;
            toJSON(message: _176.SignedHeader): unknown;
            fromPartial(object: Partial<_176.SignedHeader>): _176.SignedHeader;
            fromAmino(object: _176.SignedHeaderAmino): _176.SignedHeader;
            toAmino(message: _176.SignedHeader): _176.SignedHeaderAmino;
            fromAminoMsg(object: _176.SignedHeaderAminoMsg): _176.SignedHeader;
            fromProtoMsg(message: _176.SignedHeaderProtoMsg): _176.SignedHeader;
            toProto(message: _176.SignedHeader): Uint8Array;
            toProtoMsg(message: _176.SignedHeader): _176.SignedHeaderProtoMsg;
        };
        LightBlock: {
            typeUrl: string;
            encode(message: _176.LightBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _176.LightBlock;
            fromJSON(object: any): _176.LightBlock;
            toJSON(message: _176.LightBlock): unknown;
            fromPartial(object: Partial<_176.LightBlock>): _176.LightBlock;
            fromAmino(object: _176.LightBlockAmino): _176.LightBlock;
            toAmino(message: _176.LightBlock): _176.LightBlockAmino;
            fromAminoMsg(object: _176.LightBlockAminoMsg): _176.LightBlock;
            fromProtoMsg(message: _176.LightBlockProtoMsg): _176.LightBlock;
            toProto(message: _176.LightBlock): Uint8Array;
            toProtoMsg(message: _176.LightBlock): _176.LightBlockProtoMsg;
        };
        BlockMeta: {
            typeUrl: string;
            encode(message: _176.BlockMeta, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _176.BlockMeta;
            fromJSON(object: any): _176.BlockMeta;
            toJSON(message: _176.BlockMeta): unknown;
            fromPartial(object: Partial<_176.BlockMeta>): _176.BlockMeta;
            fromAmino(object: _176.BlockMetaAmino): _176.BlockMeta;
            toAmino(message: _176.BlockMeta): _176.BlockMetaAmino;
            fromAminoMsg(object: _176.BlockMetaAminoMsg): _176.BlockMeta;
            fromProtoMsg(message: _176.BlockMetaProtoMsg): _176.BlockMeta;
            toProto(message: _176.BlockMeta): Uint8Array;
            toProtoMsg(message: _176.BlockMeta): _176.BlockMetaProtoMsg;
        };
        TxProof: {
            typeUrl: string;
            encode(message: _176.TxProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _176.TxProof;
            fromJSON(object: any): _176.TxProof;
            toJSON(message: _176.TxProof): unknown;
            fromPartial(object: Partial<_176.TxProof>): _176.TxProof;
            fromAmino(object: _176.TxProofAmino): _176.TxProof;
            toAmino(message: _176.TxProof): _176.TxProofAmino;
            fromAminoMsg(object: _176.TxProofAminoMsg): _176.TxProof;
            fromProtoMsg(message: _176.TxProofProtoMsg): _176.TxProof;
            toProto(message: _176.TxProof): Uint8Array;
            toProtoMsg(message: _176.TxProof): _176.TxProofProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            encode(message: _175.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _175.ConsensusParams;
            fromJSON(object: any): _175.ConsensusParams;
            toJSON(message: _175.ConsensusParams): unknown;
            fromPartial(object: Partial<_175.ConsensusParams>): _175.ConsensusParams;
            fromAmino(object: _175.ConsensusParamsAmino): _175.ConsensusParams;
            toAmino(message: _175.ConsensusParams): _175.ConsensusParamsAmino;
            fromAminoMsg(object: _175.ConsensusParamsAminoMsg): _175.ConsensusParams;
            fromProtoMsg(message: _175.ConsensusParamsProtoMsg): _175.ConsensusParams;
            toProto(message: _175.ConsensusParams): Uint8Array;
            toProtoMsg(message: _175.ConsensusParams): _175.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            encode(message: _175.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _175.BlockParams;
            fromJSON(object: any): _175.BlockParams;
            toJSON(message: _175.BlockParams): unknown;
            fromPartial(object: Partial<_175.BlockParams>): _175.BlockParams;
            fromAmino(object: _175.BlockParamsAmino): _175.BlockParams;
            toAmino(message: _175.BlockParams): _175.BlockParamsAmino;
            fromAminoMsg(object: _175.BlockParamsAminoMsg): _175.BlockParams;
            fromProtoMsg(message: _175.BlockParamsProtoMsg): _175.BlockParams;
            toProto(message: _175.BlockParams): Uint8Array;
            toProtoMsg(message: _175.BlockParams): _175.BlockParamsProtoMsg;
        };
        EvidenceParams: {
            typeUrl: string;
            encode(message: _175.EvidenceParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _175.EvidenceParams;
            fromJSON(object: any): _175.EvidenceParams;
            toJSON(message: _175.EvidenceParams): unknown;
            fromPartial(object: Partial<_175.EvidenceParams>): _175.EvidenceParams;
            fromAmino(object: _175.EvidenceParamsAmino): _175.EvidenceParams;
            toAmino(message: _175.EvidenceParams): _175.EvidenceParamsAmino;
            fromAminoMsg(object: _175.EvidenceParamsAminoMsg): _175.EvidenceParams;
            fromProtoMsg(message: _175.EvidenceParamsProtoMsg): _175.EvidenceParams;
            toProto(message: _175.EvidenceParams): Uint8Array;
            toProtoMsg(message: _175.EvidenceParams): _175.EvidenceParamsProtoMsg;
        };
        ValidatorParams: {
            typeUrl: string;
            encode(message: _175.ValidatorParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _175.ValidatorParams;
            fromJSON(object: any): _175.ValidatorParams;
            toJSON(message: _175.ValidatorParams): unknown;
            fromPartial(object: Partial<_175.ValidatorParams>): _175.ValidatorParams;
            fromAmino(object: _175.ValidatorParamsAmino): _175.ValidatorParams;
            toAmino(message: _175.ValidatorParams): _175.ValidatorParamsAmino;
            fromAminoMsg(object: _175.ValidatorParamsAminoMsg): _175.ValidatorParams;
            fromProtoMsg(message: _175.ValidatorParamsProtoMsg): _175.ValidatorParams;
            toProto(message: _175.ValidatorParams): Uint8Array;
            toProtoMsg(message: _175.ValidatorParams): _175.ValidatorParamsProtoMsg;
        };
        VersionParams: {
            typeUrl: string;
            encode(message: _175.VersionParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _175.VersionParams;
            fromJSON(object: any): _175.VersionParams;
            toJSON(message: _175.VersionParams): unknown;
            fromPartial(object: Partial<_175.VersionParams>): _175.VersionParams;
            fromAmino(object: _175.VersionParamsAmino): _175.VersionParams;
            toAmino(message: _175.VersionParams): _175.VersionParamsAmino;
            fromAminoMsg(object: _175.VersionParamsAminoMsg): _175.VersionParams;
            fromProtoMsg(message: _175.VersionParamsProtoMsg): _175.VersionParams;
            toProto(message: _175.VersionParams): Uint8Array;
            toProtoMsg(message: _175.VersionParams): _175.VersionParamsProtoMsg;
        };
        HashedParams: {
            typeUrl: string;
            encode(message: _175.HashedParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _175.HashedParams;
            fromJSON(object: any): _175.HashedParams;
            toJSON(message: _175.HashedParams): unknown;
            fromPartial(object: Partial<_175.HashedParams>): _175.HashedParams;
            fromAmino(object: _175.HashedParamsAmino): _175.HashedParams;
            toAmino(message: _175.HashedParams): _175.HashedParamsAmino;
            fromAminoMsg(object: _175.HashedParamsAminoMsg): _175.HashedParams;
            fromProtoMsg(message: _175.HashedParamsProtoMsg): _175.HashedParams;
            toProto(message: _175.HashedParams): Uint8Array;
            toProtoMsg(message: _175.HashedParams): _175.HashedParamsProtoMsg;
        };
        ABCIParams: {
            typeUrl: string;
            encode(message: _175.ABCIParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _175.ABCIParams;
            fromJSON(object: any): _175.ABCIParams;
            toJSON(message: _175.ABCIParams): unknown;
            fromPartial(object: Partial<_175.ABCIParams>): _175.ABCIParams;
            fromAmino(object: _175.ABCIParamsAmino): _175.ABCIParams;
            toAmino(message: _175.ABCIParams): _175.ABCIParamsAmino;
            fromAminoMsg(object: _175.ABCIParamsAminoMsg): _175.ABCIParams;
            fromProtoMsg(message: _175.ABCIParamsProtoMsg): _175.ABCIParams;
            toProto(message: _175.ABCIParams): Uint8Array;
            toProtoMsg(message: _175.ABCIParams): _175.ABCIParamsProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            encode(message: _174.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _174.Evidence;
            fromJSON(object: any): _174.Evidence;
            toJSON(message: _174.Evidence): unknown;
            fromPartial(object: Partial<_174.Evidence>): _174.Evidence;
            fromAmino(object: _174.EvidenceAmino): _174.Evidence;
            toAmino(message: _174.Evidence): _174.EvidenceAmino;
            fromAminoMsg(object: _174.EvidenceAminoMsg): _174.Evidence;
            fromProtoMsg(message: _174.EvidenceProtoMsg): _174.Evidence;
            toProto(message: _174.Evidence): Uint8Array;
            toProtoMsg(message: _174.Evidence): _174.EvidenceProtoMsg;
        };
        DuplicateVoteEvidence: {
            typeUrl: string;
            encode(message: _174.DuplicateVoteEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _174.DuplicateVoteEvidence;
            fromJSON(object: any): _174.DuplicateVoteEvidence;
            toJSON(message: _174.DuplicateVoteEvidence): unknown;
            fromPartial(object: Partial<_174.DuplicateVoteEvidence>): _174.DuplicateVoteEvidence;
            fromAmino(object: _174.DuplicateVoteEvidenceAmino): _174.DuplicateVoteEvidence;
            toAmino(message: _174.DuplicateVoteEvidence): _174.DuplicateVoteEvidenceAmino;
            fromAminoMsg(object: _174.DuplicateVoteEvidenceAminoMsg): _174.DuplicateVoteEvidence;
            fromProtoMsg(message: _174.DuplicateVoteEvidenceProtoMsg): _174.DuplicateVoteEvidence;
            toProto(message: _174.DuplicateVoteEvidence): Uint8Array;
            toProtoMsg(message: _174.DuplicateVoteEvidence): _174.DuplicateVoteEvidenceProtoMsg;
        };
        LightClientAttackEvidence: {
            typeUrl: string;
            encode(message: _174.LightClientAttackEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _174.LightClientAttackEvidence;
            fromJSON(object: any): _174.LightClientAttackEvidence;
            toJSON(message: _174.LightClientAttackEvidence): unknown;
            fromPartial(object: Partial<_174.LightClientAttackEvidence>): _174.LightClientAttackEvidence;
            fromAmino(object: _174.LightClientAttackEvidenceAmino): _174.LightClientAttackEvidence;
            toAmino(message: _174.LightClientAttackEvidence): _174.LightClientAttackEvidenceAmino;
            fromAminoMsg(object: _174.LightClientAttackEvidenceAminoMsg): _174.LightClientAttackEvidence;
            fromProtoMsg(message: _174.LightClientAttackEvidenceProtoMsg): _174.LightClientAttackEvidence;
            toProto(message: _174.LightClientAttackEvidence): Uint8Array;
            toProtoMsg(message: _174.LightClientAttackEvidence): _174.LightClientAttackEvidenceProtoMsg;
        };
        EvidenceList: {
            typeUrl: string;
            encode(message: _174.EvidenceList, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _174.EvidenceList;
            fromJSON(object: any): _174.EvidenceList;
            toJSON(message: _174.EvidenceList): unknown;
            fromPartial(object: Partial<_174.EvidenceList>): _174.EvidenceList;
            fromAmino(object: _174.EvidenceListAmino): _174.EvidenceList;
            toAmino(message: _174.EvidenceList): _174.EvidenceListAmino;
            fromAminoMsg(object: _174.EvidenceListAminoMsg): _174.EvidenceList;
            fromProtoMsg(message: _174.EvidenceListProtoMsg): _174.EvidenceList;
            toProto(message: _174.EvidenceList): Uint8Array;
            toProtoMsg(message: _174.EvidenceList): _174.EvidenceListProtoMsg;
        };
        Block: {
            typeUrl: string;
            encode(message: _173.Block, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _173.Block;
            fromJSON(object: any): _173.Block;
            toJSON(message: _173.Block): unknown;
            fromPartial(object: Partial<_173.Block>): _173.Block;
            fromAmino(object: _173.BlockAmino): _173.Block;
            toAmino(message: _173.Block): _173.BlockAmino;
            fromAminoMsg(object: _173.BlockAminoMsg): _173.Block;
            fromProtoMsg(message: _173.BlockProtoMsg): _173.Block;
            toProto(message: _173.Block): Uint8Array;
            toProtoMsg(message: _173.Block): _173.BlockProtoMsg;
        };
    };
    const version: {
        protobufPackage: "tendermint.version";
        App: {
            typeUrl: string;
            encode(message: _178.App, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _178.App;
            fromJSON(object: any): _178.App;
            toJSON(message: _178.App): unknown;
            fromPartial(object: Partial<_178.App>): _178.App;
            fromAmino(object: _178.AppAmino): _178.App;
            toAmino(message: _178.App): _178.AppAmino;
            fromAminoMsg(object: _178.AppAminoMsg): _178.App;
            fromProtoMsg(message: _178.AppProtoMsg): _178.App;
            toProto(message: _178.App): Uint8Array;
            toProtoMsg(message: _178.App): _178.AppProtoMsg;
        };
        Consensus: {
            typeUrl: string;
            encode(message: _178.Consensus, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _178.Consensus;
            fromJSON(object: any): _178.Consensus;
            toJSON(message: _178.Consensus): unknown;
            fromPartial(object: Partial<_178.Consensus>): _178.Consensus;
            fromAmino(object: _178.ConsensusAmino): _178.Consensus;
            toAmino(message: _178.Consensus): _178.ConsensusAmino;
            fromAminoMsg(object: _178.ConsensusAminoMsg): _178.Consensus;
            fromProtoMsg(message: _178.ConsensusProtoMsg): _178.Consensus;
            toProto(message: _178.Consensus): Uint8Array;
            toProtoMsg(message: _178.Consensus): _178.ConsensusProtoMsg;
        };
    };
}
