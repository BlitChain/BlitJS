import * as _132 from "./abci/types";
import * as _133 from "./crypto/keys";
import * as _134 from "./crypto/proof";
import * as _135 from "./libs/bits/types";
import * as _136 from "./p2p/types";
import * as _137 from "./types/block";
import * as _138 from "./types/evidence";
import * as _139 from "./types/params";
import * as _140 from "./types/types";
import * as _141 from "./types/validator";
import * as _142 from "./version/types";
export declare namespace tendermint {
    const abci: {
        checkTxTypeFromJSON(object: any): _132.CheckTxType;
        checkTxTypeToJSON(object: _132.CheckTxType): string;
        responseOfferSnapshot_ResultFromJSON(object: any): _132.ResponseOfferSnapshot_Result;
        responseOfferSnapshot_ResultToJSON(object: _132.ResponseOfferSnapshot_Result): string;
        responseApplySnapshotChunk_ResultFromJSON(object: any): _132.ResponseApplySnapshotChunk_Result;
        responseApplySnapshotChunk_ResultToJSON(object: _132.ResponseApplySnapshotChunk_Result): string;
        responseProcessProposal_ProposalStatusFromJSON(object: any): _132.ResponseProcessProposal_ProposalStatus;
        responseProcessProposal_ProposalStatusToJSON(object: _132.ResponseProcessProposal_ProposalStatus): string;
        responseVerifyVoteExtension_VerifyStatusFromJSON(object: any): _132.ResponseVerifyVoteExtension_VerifyStatus;
        responseVerifyVoteExtension_VerifyStatusToJSON(object: _132.ResponseVerifyVoteExtension_VerifyStatus): string;
        misbehaviorTypeFromJSON(object: any): _132.MisbehaviorType;
        misbehaviorTypeToJSON(object: _132.MisbehaviorType): string;
        protobufPackage: "tendermint.abci";
        CheckTxType: typeof _132.CheckTxType;
        CheckTxTypeSDKType: typeof _132.CheckTxType;
        CheckTxTypeAmino: typeof _132.CheckTxType;
        ResponseOfferSnapshot_Result: typeof _132.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultSDKType: typeof _132.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultAmino: typeof _132.ResponseOfferSnapshot_Result;
        ResponseApplySnapshotChunk_Result: typeof _132.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultSDKType: typeof _132.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultAmino: typeof _132.ResponseApplySnapshotChunk_Result;
        ResponseProcessProposal_ProposalStatus: typeof _132.ResponseProcessProposal_ProposalStatus;
        ResponseProcessProposal_ProposalStatusSDKType: typeof _132.ResponseProcessProposal_ProposalStatus;
        ResponseProcessProposal_ProposalStatusAmino: typeof _132.ResponseProcessProposal_ProposalStatus;
        ResponseVerifyVoteExtension_VerifyStatus: typeof _132.ResponseVerifyVoteExtension_VerifyStatus;
        ResponseVerifyVoteExtension_VerifyStatusSDKType: typeof _132.ResponseVerifyVoteExtension_VerifyStatus;
        ResponseVerifyVoteExtension_VerifyStatusAmino: typeof _132.ResponseVerifyVoteExtension_VerifyStatus;
        MisbehaviorType: typeof _132.MisbehaviorType;
        MisbehaviorTypeSDKType: typeof _132.MisbehaviorType;
        MisbehaviorTypeAmino: typeof _132.MisbehaviorType;
        Request: {
            typeUrl: string;
            encode(message: _132.Request, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.Request;
            fromJSON(object: any): _132.Request;
            toJSON(message: _132.Request): unknown;
            fromPartial(object: Partial<_132.Request>): _132.Request;
            fromSDK(object: _132.RequestSDKType): _132.Request;
            toSDK(message: _132.Request): _132.RequestSDKType;
            fromAmino(object: _132.RequestAmino): _132.Request;
            toAmino(message: _132.Request): _132.RequestAmino;
            fromAminoMsg(object: _132.RequestAminoMsg): _132.Request;
            fromProtoMsg(message: _132.RequestProtoMsg): _132.Request;
            toProto(message: _132.Request): Uint8Array;
            toProtoMsg(message: _132.Request): _132.RequestProtoMsg;
        };
        RequestEcho: {
            typeUrl: string;
            encode(message: _132.RequestEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.RequestEcho;
            fromJSON(object: any): _132.RequestEcho;
            toJSON(message: _132.RequestEcho): unknown;
            fromPartial(object: Partial<_132.RequestEcho>): _132.RequestEcho;
            fromSDK(object: _132.RequestEchoSDKType): _132.RequestEcho;
            toSDK(message: _132.RequestEcho): _132.RequestEchoSDKType;
            fromAmino(object: _132.RequestEchoAmino): _132.RequestEcho;
            toAmino(message: _132.RequestEcho): _132.RequestEchoAmino;
            fromAminoMsg(object: _132.RequestEchoAminoMsg): _132.RequestEcho;
            fromProtoMsg(message: _132.RequestEchoProtoMsg): _132.RequestEcho;
            toProto(message: _132.RequestEcho): Uint8Array;
            toProtoMsg(message: _132.RequestEcho): _132.RequestEchoProtoMsg;
        };
        RequestFlush: {
            typeUrl: string;
            encode(_: _132.RequestFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.RequestFlush;
            fromJSON(_: any): _132.RequestFlush;
            toJSON(_: _132.RequestFlush): unknown;
            fromPartial(_: Partial<_132.RequestFlush>): _132.RequestFlush;
            fromSDK(_: _132.RequestFlushSDKType): _132.RequestFlush;
            toSDK(_: _132.RequestFlush): _132.RequestFlushSDKType;
            fromAmino(_: _132.RequestFlushAmino): _132.RequestFlush;
            toAmino(_: _132.RequestFlush): _132.RequestFlushAmino;
            fromAminoMsg(object: _132.RequestFlushAminoMsg): _132.RequestFlush;
            fromProtoMsg(message: _132.RequestFlushProtoMsg): _132.RequestFlush;
            toProto(message: _132.RequestFlush): Uint8Array;
            toProtoMsg(message: _132.RequestFlush): _132.RequestFlushProtoMsg;
        };
        RequestInfo: {
            typeUrl: string;
            encode(message: _132.RequestInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.RequestInfo;
            fromJSON(object: any): _132.RequestInfo;
            toJSON(message: _132.RequestInfo): unknown;
            fromPartial(object: Partial<_132.RequestInfo>): _132.RequestInfo;
            fromSDK(object: _132.RequestInfoSDKType): _132.RequestInfo;
            toSDK(message: _132.RequestInfo): _132.RequestInfoSDKType;
            fromAmino(object: _132.RequestInfoAmino): _132.RequestInfo;
            toAmino(message: _132.RequestInfo): _132.RequestInfoAmino;
            fromAminoMsg(object: _132.RequestInfoAminoMsg): _132.RequestInfo;
            fromProtoMsg(message: _132.RequestInfoProtoMsg): _132.RequestInfo;
            toProto(message: _132.RequestInfo): Uint8Array;
            toProtoMsg(message: _132.RequestInfo): _132.RequestInfoProtoMsg;
        };
        RequestInitChain: {
            typeUrl: string;
            encode(message: _132.RequestInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.RequestInitChain;
            fromJSON(object: any): _132.RequestInitChain;
            toJSON(message: _132.RequestInitChain): unknown;
            fromPartial(object: Partial<_132.RequestInitChain>): _132.RequestInitChain;
            fromSDK(object: _132.RequestInitChainSDKType): _132.RequestInitChain;
            toSDK(message: _132.RequestInitChain): _132.RequestInitChainSDKType;
            fromAmino(object: _132.RequestInitChainAmino): _132.RequestInitChain;
            toAmino(message: _132.RequestInitChain): _132.RequestInitChainAmino;
            fromAminoMsg(object: _132.RequestInitChainAminoMsg): _132.RequestInitChain;
            fromProtoMsg(message: _132.RequestInitChainProtoMsg): _132.RequestInitChain;
            toProto(message: _132.RequestInitChain): Uint8Array;
            toProtoMsg(message: _132.RequestInitChain): _132.RequestInitChainProtoMsg;
        };
        RequestQuery: {
            typeUrl: string;
            encode(message: _132.RequestQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.RequestQuery;
            fromJSON(object: any): _132.RequestQuery;
            toJSON(message: _132.RequestQuery): unknown;
            fromPartial(object: Partial<_132.RequestQuery>): _132.RequestQuery;
            fromSDK(object: _132.RequestQuerySDKType): _132.RequestQuery;
            toSDK(message: _132.RequestQuery): _132.RequestQuerySDKType;
            fromAmino(object: _132.RequestQueryAmino): _132.RequestQuery;
            toAmino(message: _132.RequestQuery): _132.RequestQueryAmino;
            fromAminoMsg(object: _132.RequestQueryAminoMsg): _132.RequestQuery;
            fromProtoMsg(message: _132.RequestQueryProtoMsg): _132.RequestQuery;
            toProto(message: _132.RequestQuery): Uint8Array;
            toProtoMsg(message: _132.RequestQuery): _132.RequestQueryProtoMsg;
        };
        RequestCheckTx: {
            typeUrl: string;
            encode(message: _132.RequestCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.RequestCheckTx;
            fromJSON(object: any): _132.RequestCheckTx;
            toJSON(message: _132.RequestCheckTx): unknown;
            fromPartial(object: Partial<_132.RequestCheckTx>): _132.RequestCheckTx;
            fromSDK(object: _132.RequestCheckTxSDKType): _132.RequestCheckTx;
            toSDK(message: _132.RequestCheckTx): _132.RequestCheckTxSDKType;
            fromAmino(object: _132.RequestCheckTxAmino): _132.RequestCheckTx;
            toAmino(message: _132.RequestCheckTx): _132.RequestCheckTxAmino;
            fromAminoMsg(object: _132.RequestCheckTxAminoMsg): _132.RequestCheckTx;
            fromProtoMsg(message: _132.RequestCheckTxProtoMsg): _132.RequestCheckTx;
            toProto(message: _132.RequestCheckTx): Uint8Array;
            toProtoMsg(message: _132.RequestCheckTx): _132.RequestCheckTxProtoMsg;
        };
        RequestCommit: {
            typeUrl: string;
            encode(_: _132.RequestCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.RequestCommit;
            fromJSON(_: any): _132.RequestCommit;
            toJSON(_: _132.RequestCommit): unknown;
            fromPartial(_: Partial<_132.RequestCommit>): _132.RequestCommit;
            fromSDK(_: _132.RequestCommitSDKType): _132.RequestCommit;
            toSDK(_: _132.RequestCommit): _132.RequestCommitSDKType;
            fromAmino(_: _132.RequestCommitAmino): _132.RequestCommit;
            toAmino(_: _132.RequestCommit): _132.RequestCommitAmino;
            fromAminoMsg(object: _132.RequestCommitAminoMsg): _132.RequestCommit;
            fromProtoMsg(message: _132.RequestCommitProtoMsg): _132.RequestCommit;
            toProto(message: _132.RequestCommit): Uint8Array;
            toProtoMsg(message: _132.RequestCommit): _132.RequestCommitProtoMsg;
        };
        RequestListSnapshots: {
            typeUrl: string;
            encode(_: _132.RequestListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.RequestListSnapshots;
            fromJSON(_: any): _132.RequestListSnapshots;
            toJSON(_: _132.RequestListSnapshots): unknown;
            fromPartial(_: Partial<_132.RequestListSnapshots>): _132.RequestListSnapshots;
            fromSDK(_: _132.RequestListSnapshotsSDKType): _132.RequestListSnapshots;
            toSDK(_: _132.RequestListSnapshots): _132.RequestListSnapshotsSDKType;
            fromAmino(_: _132.RequestListSnapshotsAmino): _132.RequestListSnapshots;
            toAmino(_: _132.RequestListSnapshots): _132.RequestListSnapshotsAmino;
            fromAminoMsg(object: _132.RequestListSnapshotsAminoMsg): _132.RequestListSnapshots;
            fromProtoMsg(message: _132.RequestListSnapshotsProtoMsg): _132.RequestListSnapshots;
            toProto(message: _132.RequestListSnapshots): Uint8Array;
            toProtoMsg(message: _132.RequestListSnapshots): _132.RequestListSnapshotsProtoMsg;
        };
        RequestOfferSnapshot: {
            typeUrl: string;
            encode(message: _132.RequestOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.RequestOfferSnapshot;
            fromJSON(object: any): _132.RequestOfferSnapshot;
            toJSON(message: _132.RequestOfferSnapshot): unknown;
            fromPartial(object: Partial<_132.RequestOfferSnapshot>): _132.RequestOfferSnapshot;
            fromSDK(object: _132.RequestOfferSnapshotSDKType): _132.RequestOfferSnapshot;
            toSDK(message: _132.RequestOfferSnapshot): _132.RequestOfferSnapshotSDKType;
            fromAmino(object: _132.RequestOfferSnapshotAmino): _132.RequestOfferSnapshot;
            toAmino(message: _132.RequestOfferSnapshot): _132.RequestOfferSnapshotAmino;
            fromAminoMsg(object: _132.RequestOfferSnapshotAminoMsg): _132.RequestOfferSnapshot;
            fromProtoMsg(message: _132.RequestOfferSnapshotProtoMsg): _132.RequestOfferSnapshot;
            toProto(message: _132.RequestOfferSnapshot): Uint8Array;
            toProtoMsg(message: _132.RequestOfferSnapshot): _132.RequestOfferSnapshotProtoMsg;
        };
        RequestLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _132.RequestLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.RequestLoadSnapshotChunk;
            fromJSON(object: any): _132.RequestLoadSnapshotChunk;
            toJSON(message: _132.RequestLoadSnapshotChunk): unknown;
            fromPartial(object: Partial<_132.RequestLoadSnapshotChunk>): _132.RequestLoadSnapshotChunk;
            fromSDK(object: _132.RequestLoadSnapshotChunkSDKType): _132.RequestLoadSnapshotChunk;
            toSDK(message: _132.RequestLoadSnapshotChunk): _132.RequestLoadSnapshotChunkSDKType;
            fromAmino(object: _132.RequestLoadSnapshotChunkAmino): _132.RequestLoadSnapshotChunk;
            toAmino(message: _132.RequestLoadSnapshotChunk): _132.RequestLoadSnapshotChunkAmino;
            fromAminoMsg(object: _132.RequestLoadSnapshotChunkAminoMsg): _132.RequestLoadSnapshotChunk;
            fromProtoMsg(message: _132.RequestLoadSnapshotChunkProtoMsg): _132.RequestLoadSnapshotChunk;
            toProto(message: _132.RequestLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _132.RequestLoadSnapshotChunk): _132.RequestLoadSnapshotChunkProtoMsg;
        };
        RequestApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _132.RequestApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.RequestApplySnapshotChunk;
            fromJSON(object: any): _132.RequestApplySnapshotChunk;
            toJSON(message: _132.RequestApplySnapshotChunk): unknown;
            fromPartial(object: Partial<_132.RequestApplySnapshotChunk>): _132.RequestApplySnapshotChunk;
            fromSDK(object: _132.RequestApplySnapshotChunkSDKType): _132.RequestApplySnapshotChunk;
            toSDK(message: _132.RequestApplySnapshotChunk): _132.RequestApplySnapshotChunkSDKType;
            fromAmino(object: _132.RequestApplySnapshotChunkAmino): _132.RequestApplySnapshotChunk;
            toAmino(message: _132.RequestApplySnapshotChunk): _132.RequestApplySnapshotChunkAmino;
            fromAminoMsg(object: _132.RequestApplySnapshotChunkAminoMsg): _132.RequestApplySnapshotChunk;
            fromProtoMsg(message: _132.RequestApplySnapshotChunkProtoMsg): _132.RequestApplySnapshotChunk;
            toProto(message: _132.RequestApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _132.RequestApplySnapshotChunk): _132.RequestApplySnapshotChunkProtoMsg;
        };
        RequestPrepareProposal: {
            typeUrl: string;
            encode(message: _132.RequestPrepareProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.RequestPrepareProposal;
            fromJSON(object: any): _132.RequestPrepareProposal;
            toJSON(message: _132.RequestPrepareProposal): unknown;
            fromPartial(object: Partial<_132.RequestPrepareProposal>): _132.RequestPrepareProposal;
            fromSDK(object: _132.RequestPrepareProposalSDKType): _132.RequestPrepareProposal;
            toSDK(message: _132.RequestPrepareProposal): _132.RequestPrepareProposalSDKType;
            fromAmino(object: _132.RequestPrepareProposalAmino): _132.RequestPrepareProposal;
            toAmino(message: _132.RequestPrepareProposal): _132.RequestPrepareProposalAmino;
            fromAminoMsg(object: _132.RequestPrepareProposalAminoMsg): _132.RequestPrepareProposal;
            fromProtoMsg(message: _132.RequestPrepareProposalProtoMsg): _132.RequestPrepareProposal;
            toProto(message: _132.RequestPrepareProposal): Uint8Array;
            toProtoMsg(message: _132.RequestPrepareProposal): _132.RequestPrepareProposalProtoMsg;
        };
        RequestProcessProposal: {
            typeUrl: string;
            encode(message: _132.RequestProcessProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.RequestProcessProposal;
            fromJSON(object: any): _132.RequestProcessProposal;
            toJSON(message: _132.RequestProcessProposal): unknown;
            fromPartial(object: Partial<_132.RequestProcessProposal>): _132.RequestProcessProposal;
            fromSDK(object: _132.RequestProcessProposalSDKType): _132.RequestProcessProposal;
            toSDK(message: _132.RequestProcessProposal): _132.RequestProcessProposalSDKType;
            fromAmino(object: _132.RequestProcessProposalAmino): _132.RequestProcessProposal;
            toAmino(message: _132.RequestProcessProposal): _132.RequestProcessProposalAmino;
            fromAminoMsg(object: _132.RequestProcessProposalAminoMsg): _132.RequestProcessProposal;
            fromProtoMsg(message: _132.RequestProcessProposalProtoMsg): _132.RequestProcessProposal;
            toProto(message: _132.RequestProcessProposal): Uint8Array;
            toProtoMsg(message: _132.RequestProcessProposal): _132.RequestProcessProposalProtoMsg;
        };
        RequestExtendVote: {
            typeUrl: string;
            encode(message: _132.RequestExtendVote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.RequestExtendVote;
            fromJSON(object: any): _132.RequestExtendVote;
            toJSON(message: _132.RequestExtendVote): unknown;
            fromPartial(object: Partial<_132.RequestExtendVote>): _132.RequestExtendVote;
            fromSDK(object: _132.RequestExtendVoteSDKType): _132.RequestExtendVote;
            toSDK(message: _132.RequestExtendVote): _132.RequestExtendVoteSDKType;
            fromAmino(object: _132.RequestExtendVoteAmino): _132.RequestExtendVote;
            toAmino(message: _132.RequestExtendVote): _132.RequestExtendVoteAmino;
            fromAminoMsg(object: _132.RequestExtendVoteAminoMsg): _132.RequestExtendVote;
            fromProtoMsg(message: _132.RequestExtendVoteProtoMsg): _132.RequestExtendVote;
            toProto(message: _132.RequestExtendVote): Uint8Array;
            toProtoMsg(message: _132.RequestExtendVote): _132.RequestExtendVoteProtoMsg;
        };
        RequestVerifyVoteExtension: {
            typeUrl: string;
            encode(message: _132.RequestVerifyVoteExtension, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.RequestVerifyVoteExtension;
            fromJSON(object: any): _132.RequestVerifyVoteExtension;
            toJSON(message: _132.RequestVerifyVoteExtension): unknown;
            fromPartial(object: Partial<_132.RequestVerifyVoteExtension>): _132.RequestVerifyVoteExtension;
            fromSDK(object: _132.RequestVerifyVoteExtensionSDKType): _132.RequestVerifyVoteExtension;
            toSDK(message: _132.RequestVerifyVoteExtension): _132.RequestVerifyVoteExtensionSDKType;
            fromAmino(object: _132.RequestVerifyVoteExtensionAmino): _132.RequestVerifyVoteExtension;
            toAmino(message: _132.RequestVerifyVoteExtension): _132.RequestVerifyVoteExtensionAmino;
            fromAminoMsg(object: _132.RequestVerifyVoteExtensionAminoMsg): _132.RequestVerifyVoteExtension;
            fromProtoMsg(message: _132.RequestVerifyVoteExtensionProtoMsg): _132.RequestVerifyVoteExtension;
            toProto(message: _132.RequestVerifyVoteExtension): Uint8Array;
            toProtoMsg(message: _132.RequestVerifyVoteExtension): _132.RequestVerifyVoteExtensionProtoMsg;
        };
        RequestFinalizeBlock: {
            typeUrl: string;
            encode(message: _132.RequestFinalizeBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.RequestFinalizeBlock;
            fromJSON(object: any): _132.RequestFinalizeBlock;
            toJSON(message: _132.RequestFinalizeBlock): unknown;
            fromPartial(object: Partial<_132.RequestFinalizeBlock>): _132.RequestFinalizeBlock;
            fromSDK(object: _132.RequestFinalizeBlockSDKType): _132.RequestFinalizeBlock;
            toSDK(message: _132.RequestFinalizeBlock): _132.RequestFinalizeBlockSDKType;
            fromAmino(object: _132.RequestFinalizeBlockAmino): _132.RequestFinalizeBlock;
            toAmino(message: _132.RequestFinalizeBlock): _132.RequestFinalizeBlockAmino;
            fromAminoMsg(object: _132.RequestFinalizeBlockAminoMsg): _132.RequestFinalizeBlock;
            fromProtoMsg(message: _132.RequestFinalizeBlockProtoMsg): _132.RequestFinalizeBlock;
            toProto(message: _132.RequestFinalizeBlock): Uint8Array;
            toProtoMsg(message: _132.RequestFinalizeBlock): _132.RequestFinalizeBlockProtoMsg;
        };
        Response: {
            typeUrl: string;
            encode(message: _132.Response, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.Response;
            fromJSON(object: any): _132.Response;
            toJSON(message: _132.Response): unknown;
            fromPartial(object: Partial<_132.Response>): _132.Response;
            fromSDK(object: _132.ResponseSDKType): _132.Response;
            toSDK(message: _132.Response): _132.ResponseSDKType;
            fromAmino(object: _132.ResponseAmino): _132.Response;
            toAmino(message: _132.Response): _132.ResponseAmino;
            fromAminoMsg(object: _132.ResponseAminoMsg): _132.Response;
            fromProtoMsg(message: _132.ResponseProtoMsg): _132.Response;
            toProto(message: _132.Response): Uint8Array;
            toProtoMsg(message: _132.Response): _132.ResponseProtoMsg;
        };
        ResponseException: {
            typeUrl: string;
            encode(message: _132.ResponseException, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.ResponseException;
            fromJSON(object: any): _132.ResponseException;
            toJSON(message: _132.ResponseException): unknown;
            fromPartial(object: Partial<_132.ResponseException>): _132.ResponseException;
            fromSDK(object: _132.ResponseExceptionSDKType): _132.ResponseException;
            toSDK(message: _132.ResponseException): _132.ResponseExceptionSDKType;
            fromAmino(object: _132.ResponseExceptionAmino): _132.ResponseException;
            toAmino(message: _132.ResponseException): _132.ResponseExceptionAmino;
            fromAminoMsg(object: _132.ResponseExceptionAminoMsg): _132.ResponseException;
            fromProtoMsg(message: _132.ResponseExceptionProtoMsg): _132.ResponseException;
            toProto(message: _132.ResponseException): Uint8Array;
            toProtoMsg(message: _132.ResponseException): _132.ResponseExceptionProtoMsg;
        };
        ResponseEcho: {
            typeUrl: string;
            encode(message: _132.ResponseEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.ResponseEcho;
            fromJSON(object: any): _132.ResponseEcho;
            toJSON(message: _132.ResponseEcho): unknown;
            fromPartial(object: Partial<_132.ResponseEcho>): _132.ResponseEcho;
            fromSDK(object: _132.ResponseEchoSDKType): _132.ResponseEcho;
            toSDK(message: _132.ResponseEcho): _132.ResponseEchoSDKType;
            fromAmino(object: _132.ResponseEchoAmino): _132.ResponseEcho;
            toAmino(message: _132.ResponseEcho): _132.ResponseEchoAmino;
            fromAminoMsg(object: _132.ResponseEchoAminoMsg): _132.ResponseEcho;
            fromProtoMsg(message: _132.ResponseEchoProtoMsg): _132.ResponseEcho;
            toProto(message: _132.ResponseEcho): Uint8Array;
            toProtoMsg(message: _132.ResponseEcho): _132.ResponseEchoProtoMsg;
        };
        ResponseFlush: {
            typeUrl: string;
            encode(_: _132.ResponseFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.ResponseFlush;
            fromJSON(_: any): _132.ResponseFlush;
            toJSON(_: _132.ResponseFlush): unknown;
            fromPartial(_: Partial<_132.ResponseFlush>): _132.ResponseFlush;
            fromSDK(_: _132.ResponseFlushSDKType): _132.ResponseFlush;
            toSDK(_: _132.ResponseFlush): _132.ResponseFlushSDKType;
            fromAmino(_: _132.ResponseFlushAmino): _132.ResponseFlush;
            toAmino(_: _132.ResponseFlush): _132.ResponseFlushAmino;
            fromAminoMsg(object: _132.ResponseFlushAminoMsg): _132.ResponseFlush;
            fromProtoMsg(message: _132.ResponseFlushProtoMsg): _132.ResponseFlush;
            toProto(message: _132.ResponseFlush): Uint8Array;
            toProtoMsg(message: _132.ResponseFlush): _132.ResponseFlushProtoMsg;
        };
        ResponseInfo: {
            typeUrl: string;
            encode(message: _132.ResponseInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.ResponseInfo;
            fromJSON(object: any): _132.ResponseInfo;
            toJSON(message: _132.ResponseInfo): unknown;
            fromPartial(object: Partial<_132.ResponseInfo>): _132.ResponseInfo;
            fromSDK(object: _132.ResponseInfoSDKType): _132.ResponseInfo;
            toSDK(message: _132.ResponseInfo): _132.ResponseInfoSDKType;
            fromAmino(object: _132.ResponseInfoAmino): _132.ResponseInfo;
            toAmino(message: _132.ResponseInfo): _132.ResponseInfoAmino;
            fromAminoMsg(object: _132.ResponseInfoAminoMsg): _132.ResponseInfo;
            fromProtoMsg(message: _132.ResponseInfoProtoMsg): _132.ResponseInfo;
            toProto(message: _132.ResponseInfo): Uint8Array;
            toProtoMsg(message: _132.ResponseInfo): _132.ResponseInfoProtoMsg;
        };
        ResponseInitChain: {
            typeUrl: string;
            encode(message: _132.ResponseInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.ResponseInitChain;
            fromJSON(object: any): _132.ResponseInitChain;
            toJSON(message: _132.ResponseInitChain): unknown;
            fromPartial(object: Partial<_132.ResponseInitChain>): _132.ResponseInitChain;
            fromSDK(object: _132.ResponseInitChainSDKType): _132.ResponseInitChain;
            toSDK(message: _132.ResponseInitChain): _132.ResponseInitChainSDKType;
            fromAmino(object: _132.ResponseInitChainAmino): _132.ResponseInitChain;
            toAmino(message: _132.ResponseInitChain): _132.ResponseInitChainAmino;
            fromAminoMsg(object: _132.ResponseInitChainAminoMsg): _132.ResponseInitChain;
            fromProtoMsg(message: _132.ResponseInitChainProtoMsg): _132.ResponseInitChain;
            toProto(message: _132.ResponseInitChain): Uint8Array;
            toProtoMsg(message: _132.ResponseInitChain): _132.ResponseInitChainProtoMsg;
        };
        ResponseQuery: {
            typeUrl: string;
            encode(message: _132.ResponseQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.ResponseQuery;
            fromJSON(object: any): _132.ResponseQuery;
            toJSON(message: _132.ResponseQuery): unknown;
            fromPartial(object: Partial<_132.ResponseQuery>): _132.ResponseQuery;
            fromSDK(object: _132.ResponseQuerySDKType): _132.ResponseQuery;
            toSDK(message: _132.ResponseQuery): _132.ResponseQuerySDKType;
            fromAmino(object: _132.ResponseQueryAmino): _132.ResponseQuery;
            toAmino(message: _132.ResponseQuery): _132.ResponseQueryAmino;
            fromAminoMsg(object: _132.ResponseQueryAminoMsg): _132.ResponseQuery;
            fromProtoMsg(message: _132.ResponseQueryProtoMsg): _132.ResponseQuery;
            toProto(message: _132.ResponseQuery): Uint8Array;
            toProtoMsg(message: _132.ResponseQuery): _132.ResponseQueryProtoMsg;
        };
        ResponseCheckTx: {
            typeUrl: string;
            encode(message: _132.ResponseCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.ResponseCheckTx;
            fromJSON(object: any): _132.ResponseCheckTx;
            toJSON(message: _132.ResponseCheckTx): unknown;
            fromPartial(object: Partial<_132.ResponseCheckTx>): _132.ResponseCheckTx;
            fromSDK(object: _132.ResponseCheckTxSDKType): _132.ResponseCheckTx;
            toSDK(message: _132.ResponseCheckTx): _132.ResponseCheckTxSDKType;
            fromAmino(object: _132.ResponseCheckTxAmino): _132.ResponseCheckTx;
            toAmino(message: _132.ResponseCheckTx): _132.ResponseCheckTxAmino;
            fromAminoMsg(object: _132.ResponseCheckTxAminoMsg): _132.ResponseCheckTx;
            fromProtoMsg(message: _132.ResponseCheckTxProtoMsg): _132.ResponseCheckTx;
            toProto(message: _132.ResponseCheckTx): Uint8Array;
            toProtoMsg(message: _132.ResponseCheckTx): _132.ResponseCheckTxProtoMsg;
        };
        ResponseCommit: {
            typeUrl: string;
            encode(message: _132.ResponseCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.ResponseCommit;
            fromJSON(object: any): _132.ResponseCommit;
            toJSON(message: _132.ResponseCommit): unknown;
            fromPartial(object: Partial<_132.ResponseCommit>): _132.ResponseCommit;
            fromSDK(object: _132.ResponseCommitSDKType): _132.ResponseCommit;
            toSDK(message: _132.ResponseCommit): _132.ResponseCommitSDKType;
            fromAmino(object: _132.ResponseCommitAmino): _132.ResponseCommit;
            toAmino(message: _132.ResponseCommit): _132.ResponseCommitAmino;
            fromAminoMsg(object: _132.ResponseCommitAminoMsg): _132.ResponseCommit;
            fromProtoMsg(message: _132.ResponseCommitProtoMsg): _132.ResponseCommit;
            toProto(message: _132.ResponseCommit): Uint8Array;
            toProtoMsg(message: _132.ResponseCommit): _132.ResponseCommitProtoMsg;
        };
        ResponseListSnapshots: {
            typeUrl: string;
            encode(message: _132.ResponseListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.ResponseListSnapshots;
            fromJSON(object: any): _132.ResponseListSnapshots;
            toJSON(message: _132.ResponseListSnapshots): unknown;
            fromPartial(object: Partial<_132.ResponseListSnapshots>): _132.ResponseListSnapshots;
            fromSDK(object: _132.ResponseListSnapshotsSDKType): _132.ResponseListSnapshots;
            toSDK(message: _132.ResponseListSnapshots): _132.ResponseListSnapshotsSDKType;
            fromAmino(object: _132.ResponseListSnapshotsAmino): _132.ResponseListSnapshots;
            toAmino(message: _132.ResponseListSnapshots): _132.ResponseListSnapshotsAmino;
            fromAminoMsg(object: _132.ResponseListSnapshotsAminoMsg): _132.ResponseListSnapshots;
            fromProtoMsg(message: _132.ResponseListSnapshotsProtoMsg): _132.ResponseListSnapshots;
            toProto(message: _132.ResponseListSnapshots): Uint8Array;
            toProtoMsg(message: _132.ResponseListSnapshots): _132.ResponseListSnapshotsProtoMsg;
        };
        ResponseOfferSnapshot: {
            typeUrl: string;
            encode(message: _132.ResponseOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.ResponseOfferSnapshot;
            fromJSON(object: any): _132.ResponseOfferSnapshot;
            toJSON(message: _132.ResponseOfferSnapshot): unknown;
            fromPartial(object: Partial<_132.ResponseOfferSnapshot>): _132.ResponseOfferSnapshot;
            fromSDK(object: _132.ResponseOfferSnapshotSDKType): _132.ResponseOfferSnapshot;
            toSDK(message: _132.ResponseOfferSnapshot): _132.ResponseOfferSnapshotSDKType;
            fromAmino(object: _132.ResponseOfferSnapshotAmino): _132.ResponseOfferSnapshot;
            toAmino(message: _132.ResponseOfferSnapshot): _132.ResponseOfferSnapshotAmino;
            fromAminoMsg(object: _132.ResponseOfferSnapshotAminoMsg): _132.ResponseOfferSnapshot;
            fromProtoMsg(message: _132.ResponseOfferSnapshotProtoMsg): _132.ResponseOfferSnapshot;
            toProto(message: _132.ResponseOfferSnapshot): Uint8Array;
            toProtoMsg(message: _132.ResponseOfferSnapshot): _132.ResponseOfferSnapshotProtoMsg;
        };
        ResponseLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _132.ResponseLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.ResponseLoadSnapshotChunk;
            fromJSON(object: any): _132.ResponseLoadSnapshotChunk;
            toJSON(message: _132.ResponseLoadSnapshotChunk): unknown;
            fromPartial(object: Partial<_132.ResponseLoadSnapshotChunk>): _132.ResponseLoadSnapshotChunk;
            fromSDK(object: _132.ResponseLoadSnapshotChunkSDKType): _132.ResponseLoadSnapshotChunk;
            toSDK(message: _132.ResponseLoadSnapshotChunk): _132.ResponseLoadSnapshotChunkSDKType;
            fromAmino(object: _132.ResponseLoadSnapshotChunkAmino): _132.ResponseLoadSnapshotChunk;
            toAmino(message: _132.ResponseLoadSnapshotChunk): _132.ResponseLoadSnapshotChunkAmino;
            fromAminoMsg(object: _132.ResponseLoadSnapshotChunkAminoMsg): _132.ResponseLoadSnapshotChunk;
            fromProtoMsg(message: _132.ResponseLoadSnapshotChunkProtoMsg): _132.ResponseLoadSnapshotChunk;
            toProto(message: _132.ResponseLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _132.ResponseLoadSnapshotChunk): _132.ResponseLoadSnapshotChunkProtoMsg;
        };
        ResponseApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _132.ResponseApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.ResponseApplySnapshotChunk;
            fromJSON(object: any): _132.ResponseApplySnapshotChunk;
            toJSON(message: _132.ResponseApplySnapshotChunk): unknown;
            fromPartial(object: Partial<_132.ResponseApplySnapshotChunk>): _132.ResponseApplySnapshotChunk;
            fromSDK(object: _132.ResponseApplySnapshotChunkSDKType): _132.ResponseApplySnapshotChunk;
            toSDK(message: _132.ResponseApplySnapshotChunk): _132.ResponseApplySnapshotChunkSDKType;
            fromAmino(object: _132.ResponseApplySnapshotChunkAmino): _132.ResponseApplySnapshotChunk;
            toAmino(message: _132.ResponseApplySnapshotChunk): _132.ResponseApplySnapshotChunkAmino;
            fromAminoMsg(object: _132.ResponseApplySnapshotChunkAminoMsg): _132.ResponseApplySnapshotChunk;
            fromProtoMsg(message: _132.ResponseApplySnapshotChunkProtoMsg): _132.ResponseApplySnapshotChunk;
            toProto(message: _132.ResponseApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _132.ResponseApplySnapshotChunk): _132.ResponseApplySnapshotChunkProtoMsg;
        };
        ResponsePrepareProposal: {
            typeUrl: string;
            encode(message: _132.ResponsePrepareProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.ResponsePrepareProposal;
            fromJSON(object: any): _132.ResponsePrepareProposal;
            toJSON(message: _132.ResponsePrepareProposal): unknown;
            fromPartial(object: Partial<_132.ResponsePrepareProposal>): _132.ResponsePrepareProposal;
            fromSDK(object: _132.ResponsePrepareProposalSDKType): _132.ResponsePrepareProposal;
            toSDK(message: _132.ResponsePrepareProposal): _132.ResponsePrepareProposalSDKType;
            fromAmino(object: _132.ResponsePrepareProposalAmino): _132.ResponsePrepareProposal;
            toAmino(message: _132.ResponsePrepareProposal): _132.ResponsePrepareProposalAmino;
            fromAminoMsg(object: _132.ResponsePrepareProposalAminoMsg): _132.ResponsePrepareProposal;
            fromProtoMsg(message: _132.ResponsePrepareProposalProtoMsg): _132.ResponsePrepareProposal;
            toProto(message: _132.ResponsePrepareProposal): Uint8Array;
            toProtoMsg(message: _132.ResponsePrepareProposal): _132.ResponsePrepareProposalProtoMsg;
        };
        ResponseProcessProposal: {
            typeUrl: string;
            encode(message: _132.ResponseProcessProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.ResponseProcessProposal;
            fromJSON(object: any): _132.ResponseProcessProposal;
            toJSON(message: _132.ResponseProcessProposal): unknown;
            fromPartial(object: Partial<_132.ResponseProcessProposal>): _132.ResponseProcessProposal;
            fromSDK(object: _132.ResponseProcessProposalSDKType): _132.ResponseProcessProposal;
            toSDK(message: _132.ResponseProcessProposal): _132.ResponseProcessProposalSDKType;
            fromAmino(object: _132.ResponseProcessProposalAmino): _132.ResponseProcessProposal;
            toAmino(message: _132.ResponseProcessProposal): _132.ResponseProcessProposalAmino;
            fromAminoMsg(object: _132.ResponseProcessProposalAminoMsg): _132.ResponseProcessProposal;
            fromProtoMsg(message: _132.ResponseProcessProposalProtoMsg): _132.ResponseProcessProposal;
            toProto(message: _132.ResponseProcessProposal): Uint8Array;
            toProtoMsg(message: _132.ResponseProcessProposal): _132.ResponseProcessProposalProtoMsg;
        };
        ResponseExtendVote: {
            typeUrl: string;
            encode(message: _132.ResponseExtendVote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.ResponseExtendVote;
            fromJSON(object: any): _132.ResponseExtendVote;
            toJSON(message: _132.ResponseExtendVote): unknown;
            fromPartial(object: Partial<_132.ResponseExtendVote>): _132.ResponseExtendVote;
            fromSDK(object: _132.ResponseExtendVoteSDKType): _132.ResponseExtendVote;
            toSDK(message: _132.ResponseExtendVote): _132.ResponseExtendVoteSDKType;
            fromAmino(object: _132.ResponseExtendVoteAmino): _132.ResponseExtendVote;
            toAmino(message: _132.ResponseExtendVote): _132.ResponseExtendVoteAmino;
            fromAminoMsg(object: _132.ResponseExtendVoteAminoMsg): _132.ResponseExtendVote;
            fromProtoMsg(message: _132.ResponseExtendVoteProtoMsg): _132.ResponseExtendVote;
            toProto(message: _132.ResponseExtendVote): Uint8Array;
            toProtoMsg(message: _132.ResponseExtendVote): _132.ResponseExtendVoteProtoMsg;
        };
        ResponseVerifyVoteExtension: {
            typeUrl: string;
            encode(message: _132.ResponseVerifyVoteExtension, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.ResponseVerifyVoteExtension;
            fromJSON(object: any): _132.ResponseVerifyVoteExtension;
            toJSON(message: _132.ResponseVerifyVoteExtension): unknown;
            fromPartial(object: Partial<_132.ResponseVerifyVoteExtension>): _132.ResponseVerifyVoteExtension;
            fromSDK(object: _132.ResponseVerifyVoteExtensionSDKType): _132.ResponseVerifyVoteExtension;
            toSDK(message: _132.ResponseVerifyVoteExtension): _132.ResponseVerifyVoteExtensionSDKType;
            fromAmino(object: _132.ResponseVerifyVoteExtensionAmino): _132.ResponseVerifyVoteExtension;
            toAmino(message: _132.ResponseVerifyVoteExtension): _132.ResponseVerifyVoteExtensionAmino;
            fromAminoMsg(object: _132.ResponseVerifyVoteExtensionAminoMsg): _132.ResponseVerifyVoteExtension;
            fromProtoMsg(message: _132.ResponseVerifyVoteExtensionProtoMsg): _132.ResponseVerifyVoteExtension;
            toProto(message: _132.ResponseVerifyVoteExtension): Uint8Array;
            toProtoMsg(message: _132.ResponseVerifyVoteExtension): _132.ResponseVerifyVoteExtensionProtoMsg;
        };
        ResponseFinalizeBlock: {
            typeUrl: string;
            encode(message: _132.ResponseFinalizeBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.ResponseFinalizeBlock;
            fromJSON(object: any): _132.ResponseFinalizeBlock;
            toJSON(message: _132.ResponseFinalizeBlock): unknown;
            fromPartial(object: Partial<_132.ResponseFinalizeBlock>): _132.ResponseFinalizeBlock;
            fromSDK(object: _132.ResponseFinalizeBlockSDKType): _132.ResponseFinalizeBlock;
            toSDK(message: _132.ResponseFinalizeBlock): _132.ResponseFinalizeBlockSDKType;
            fromAmino(object: _132.ResponseFinalizeBlockAmino): _132.ResponseFinalizeBlock;
            toAmino(message: _132.ResponseFinalizeBlock): _132.ResponseFinalizeBlockAmino;
            fromAminoMsg(object: _132.ResponseFinalizeBlockAminoMsg): _132.ResponseFinalizeBlock;
            fromProtoMsg(message: _132.ResponseFinalizeBlockProtoMsg): _132.ResponseFinalizeBlock;
            toProto(message: _132.ResponseFinalizeBlock): Uint8Array;
            toProtoMsg(message: _132.ResponseFinalizeBlock): _132.ResponseFinalizeBlockProtoMsg;
        };
        CommitInfo: {
            typeUrl: string;
            encode(message: _132.CommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.CommitInfo;
            fromJSON(object: any): _132.CommitInfo;
            toJSON(message: _132.CommitInfo): unknown;
            fromPartial(object: Partial<_132.CommitInfo>): _132.CommitInfo;
            fromSDK(object: _132.CommitInfoSDKType): _132.CommitInfo;
            toSDK(message: _132.CommitInfo): _132.CommitInfoSDKType;
            fromAmino(object: _132.CommitInfoAmino): _132.CommitInfo;
            toAmino(message: _132.CommitInfo): _132.CommitInfoAmino;
            fromAminoMsg(object: _132.CommitInfoAminoMsg): _132.CommitInfo;
            fromProtoMsg(message: _132.CommitInfoProtoMsg): _132.CommitInfo;
            toProto(message: _132.CommitInfo): Uint8Array;
            toProtoMsg(message: _132.CommitInfo): _132.CommitInfoProtoMsg;
        };
        ExtendedCommitInfo: {
            typeUrl: string;
            encode(message: _132.ExtendedCommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.ExtendedCommitInfo;
            fromJSON(object: any): _132.ExtendedCommitInfo;
            toJSON(message: _132.ExtendedCommitInfo): unknown;
            fromPartial(object: Partial<_132.ExtendedCommitInfo>): _132.ExtendedCommitInfo;
            fromSDK(object: _132.ExtendedCommitInfoSDKType): _132.ExtendedCommitInfo;
            toSDK(message: _132.ExtendedCommitInfo): _132.ExtendedCommitInfoSDKType;
            fromAmino(object: _132.ExtendedCommitInfoAmino): _132.ExtendedCommitInfo;
            toAmino(message: _132.ExtendedCommitInfo): _132.ExtendedCommitInfoAmino;
            fromAminoMsg(object: _132.ExtendedCommitInfoAminoMsg): _132.ExtendedCommitInfo;
            fromProtoMsg(message: _132.ExtendedCommitInfoProtoMsg): _132.ExtendedCommitInfo;
            toProto(message: _132.ExtendedCommitInfo): Uint8Array;
            toProtoMsg(message: _132.ExtendedCommitInfo): _132.ExtendedCommitInfoProtoMsg;
        };
        Event: {
            typeUrl: string;
            encode(message: _132.Event, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.Event;
            fromJSON(object: any): _132.Event;
            toJSON(message: _132.Event): unknown;
            fromPartial(object: Partial<_132.Event>): _132.Event;
            fromSDK(object: _132.EventSDKType): _132.Event;
            toSDK(message: _132.Event): _132.EventSDKType;
            fromAmino(object: _132.EventAmino): _132.Event;
            toAmino(message: _132.Event): _132.EventAmino;
            fromAminoMsg(object: _132.EventAminoMsg): _132.Event;
            fromProtoMsg(message: _132.EventProtoMsg): _132.Event;
            toProto(message: _132.Event): Uint8Array;
            toProtoMsg(message: _132.Event): _132.EventProtoMsg;
        };
        EventAttribute: {
            typeUrl: string;
            encode(message: _132.EventAttribute, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.EventAttribute;
            fromJSON(object: any): _132.EventAttribute;
            toJSON(message: _132.EventAttribute): unknown;
            fromPartial(object: Partial<_132.EventAttribute>): _132.EventAttribute;
            fromSDK(object: _132.EventAttributeSDKType): _132.EventAttribute;
            toSDK(message: _132.EventAttribute): _132.EventAttributeSDKType;
            fromAmino(object: _132.EventAttributeAmino): _132.EventAttribute;
            toAmino(message: _132.EventAttribute): _132.EventAttributeAmino;
            fromAminoMsg(object: _132.EventAttributeAminoMsg): _132.EventAttribute;
            fromProtoMsg(message: _132.EventAttributeProtoMsg): _132.EventAttribute;
            toProto(message: _132.EventAttribute): Uint8Array;
            toProtoMsg(message: _132.EventAttribute): _132.EventAttributeProtoMsg;
        };
        ExecTxResult: {
            typeUrl: string;
            encode(message: _132.ExecTxResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.ExecTxResult;
            fromJSON(object: any): _132.ExecTxResult;
            toJSON(message: _132.ExecTxResult): unknown;
            fromPartial(object: Partial<_132.ExecTxResult>): _132.ExecTxResult;
            fromSDK(object: _132.ExecTxResultSDKType): _132.ExecTxResult;
            toSDK(message: _132.ExecTxResult): _132.ExecTxResultSDKType;
            fromAmino(object: _132.ExecTxResultAmino): _132.ExecTxResult;
            toAmino(message: _132.ExecTxResult): _132.ExecTxResultAmino;
            fromAminoMsg(object: _132.ExecTxResultAminoMsg): _132.ExecTxResult;
            fromProtoMsg(message: _132.ExecTxResultProtoMsg): _132.ExecTxResult;
            toProto(message: _132.ExecTxResult): Uint8Array;
            toProtoMsg(message: _132.ExecTxResult): _132.ExecTxResultProtoMsg;
        };
        TxResult: {
            typeUrl: string;
            encode(message: _132.TxResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.TxResult;
            fromJSON(object: any): _132.TxResult;
            toJSON(message: _132.TxResult): unknown;
            fromPartial(object: Partial<_132.TxResult>): _132.TxResult;
            fromSDK(object: _132.TxResultSDKType): _132.TxResult;
            toSDK(message: _132.TxResult): _132.TxResultSDKType;
            fromAmino(object: _132.TxResultAmino): _132.TxResult;
            toAmino(message: _132.TxResult): _132.TxResultAmino;
            fromAminoMsg(object: _132.TxResultAminoMsg): _132.TxResult;
            fromProtoMsg(message: _132.TxResultProtoMsg): _132.TxResult;
            toProto(message: _132.TxResult): Uint8Array;
            toProtoMsg(message: _132.TxResult): _132.TxResultProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _132.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.Validator;
            fromJSON(object: any): _132.Validator;
            toJSON(message: _132.Validator): unknown;
            fromPartial(object: Partial<_132.Validator>): _132.Validator;
            fromSDK(object: _132.ValidatorSDKType): _132.Validator;
            toSDK(message: _132.Validator): _132.ValidatorSDKType;
            fromAmino(object: _132.ValidatorAmino): _132.Validator;
            toAmino(message: _132.Validator): _132.ValidatorAmino;
            fromAminoMsg(object: _132.ValidatorAminoMsg): _132.Validator;
            fromProtoMsg(message: _132.ValidatorProtoMsg): _132.Validator;
            toProto(message: _132.Validator): Uint8Array;
            toProtoMsg(message: _132.Validator): _132.ValidatorProtoMsg;
        };
        ValidatorUpdate: {
            typeUrl: string;
            encode(message: _132.ValidatorUpdate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.ValidatorUpdate;
            fromJSON(object: any): _132.ValidatorUpdate;
            toJSON(message: _132.ValidatorUpdate): unknown;
            fromPartial(object: Partial<_132.ValidatorUpdate>): _132.ValidatorUpdate;
            fromSDK(object: _132.ValidatorUpdateSDKType): _132.ValidatorUpdate;
            toSDK(message: _132.ValidatorUpdate): _132.ValidatorUpdateSDKType;
            fromAmino(object: _132.ValidatorUpdateAmino): _132.ValidatorUpdate;
            toAmino(message: _132.ValidatorUpdate): _132.ValidatorUpdateAmino;
            fromAminoMsg(object: _132.ValidatorUpdateAminoMsg): _132.ValidatorUpdate;
            fromProtoMsg(message: _132.ValidatorUpdateProtoMsg): _132.ValidatorUpdate;
            toProto(message: _132.ValidatorUpdate): Uint8Array;
            toProtoMsg(message: _132.ValidatorUpdate): _132.ValidatorUpdateProtoMsg;
        };
        VoteInfo: {
            typeUrl: string;
            encode(message: _132.VoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.VoteInfo;
            fromJSON(object: any): _132.VoteInfo;
            toJSON(message: _132.VoteInfo): unknown;
            fromPartial(object: Partial<_132.VoteInfo>): _132.VoteInfo;
            fromSDK(object: _132.VoteInfoSDKType): _132.VoteInfo;
            toSDK(message: _132.VoteInfo): _132.VoteInfoSDKType;
            fromAmino(object: _132.VoteInfoAmino): _132.VoteInfo;
            toAmino(message: _132.VoteInfo): _132.VoteInfoAmino;
            fromAminoMsg(object: _132.VoteInfoAminoMsg): _132.VoteInfo;
            fromProtoMsg(message: _132.VoteInfoProtoMsg): _132.VoteInfo;
            toProto(message: _132.VoteInfo): Uint8Array;
            toProtoMsg(message: _132.VoteInfo): _132.VoteInfoProtoMsg;
        };
        ExtendedVoteInfo: {
            typeUrl: string;
            encode(message: _132.ExtendedVoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.ExtendedVoteInfo;
            fromJSON(object: any): _132.ExtendedVoteInfo;
            toJSON(message: _132.ExtendedVoteInfo): unknown;
            fromPartial(object: Partial<_132.ExtendedVoteInfo>): _132.ExtendedVoteInfo;
            fromSDK(object: _132.ExtendedVoteInfoSDKType): _132.ExtendedVoteInfo;
            toSDK(message: _132.ExtendedVoteInfo): _132.ExtendedVoteInfoSDKType;
            fromAmino(object: _132.ExtendedVoteInfoAmino): _132.ExtendedVoteInfo;
            toAmino(message: _132.ExtendedVoteInfo): _132.ExtendedVoteInfoAmino;
            fromAminoMsg(object: _132.ExtendedVoteInfoAminoMsg): _132.ExtendedVoteInfo;
            fromProtoMsg(message: _132.ExtendedVoteInfoProtoMsg): _132.ExtendedVoteInfo;
            toProto(message: _132.ExtendedVoteInfo): Uint8Array;
            toProtoMsg(message: _132.ExtendedVoteInfo): _132.ExtendedVoteInfoProtoMsg;
        };
        Misbehavior: {
            typeUrl: string;
            encode(message: _132.Misbehavior, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.Misbehavior;
            fromJSON(object: any): _132.Misbehavior;
            toJSON(message: _132.Misbehavior): unknown;
            fromPartial(object: Partial<_132.Misbehavior>): _132.Misbehavior;
            fromSDK(object: _132.MisbehaviorSDKType): _132.Misbehavior;
            toSDK(message: _132.Misbehavior): _132.MisbehaviorSDKType;
            fromAmino(object: _132.MisbehaviorAmino): _132.Misbehavior;
            toAmino(message: _132.Misbehavior): _132.MisbehaviorAmino;
            fromAminoMsg(object: _132.MisbehaviorAminoMsg): _132.Misbehavior;
            fromProtoMsg(message: _132.MisbehaviorProtoMsg): _132.Misbehavior;
            toProto(message: _132.Misbehavior): Uint8Array;
            toProtoMsg(message: _132.Misbehavior): _132.MisbehaviorProtoMsg;
        };
        Snapshot: {
            typeUrl: string;
            encode(message: _132.Snapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _132.Snapshot;
            fromJSON(object: any): _132.Snapshot;
            toJSON(message: _132.Snapshot): unknown;
            fromPartial(object: Partial<_132.Snapshot>): _132.Snapshot;
            fromSDK(object: _132.SnapshotSDKType): _132.Snapshot;
            toSDK(message: _132.Snapshot): _132.SnapshotSDKType;
            fromAmino(object: _132.SnapshotAmino): _132.Snapshot;
            toAmino(message: _132.Snapshot): _132.SnapshotAmino;
            fromAminoMsg(object: _132.SnapshotAminoMsg): _132.Snapshot;
            fromProtoMsg(message: _132.SnapshotProtoMsg): _132.Snapshot;
            toProto(message: _132.Snapshot): Uint8Array;
            toProtoMsg(message: _132.Snapshot): _132.SnapshotProtoMsg;
        };
    };
    const crypto: {
        protobufPackage: "tendermint.crypto";
        Proof: {
            typeUrl: string;
            encode(message: _134.Proof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _134.Proof;
            fromJSON(object: any): _134.Proof;
            toJSON(message: _134.Proof): unknown;
            fromPartial(object: Partial<_134.Proof>): _134.Proof;
            fromSDK(object: _134.ProofSDKType): _134.Proof;
            toSDK(message: _134.Proof): _134.ProofSDKType;
            fromAmino(object: _134.ProofAmino): _134.Proof;
            toAmino(message: _134.Proof): _134.ProofAmino;
            fromAminoMsg(object: _134.ProofAminoMsg): _134.Proof;
            fromProtoMsg(message: _134.ProofProtoMsg): _134.Proof;
            toProto(message: _134.Proof): Uint8Array;
            toProtoMsg(message: _134.Proof): _134.ProofProtoMsg;
        };
        ValueOp: {
            typeUrl: string;
            encode(message: _134.ValueOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _134.ValueOp;
            fromJSON(object: any): _134.ValueOp;
            toJSON(message: _134.ValueOp): unknown;
            fromPartial(object: Partial<_134.ValueOp>): _134.ValueOp;
            fromSDK(object: _134.ValueOpSDKType): _134.ValueOp;
            toSDK(message: _134.ValueOp): _134.ValueOpSDKType;
            fromAmino(object: _134.ValueOpAmino): _134.ValueOp;
            toAmino(message: _134.ValueOp): _134.ValueOpAmino;
            fromAminoMsg(object: _134.ValueOpAminoMsg): _134.ValueOp;
            fromProtoMsg(message: _134.ValueOpProtoMsg): _134.ValueOp;
            toProto(message: _134.ValueOp): Uint8Array;
            toProtoMsg(message: _134.ValueOp): _134.ValueOpProtoMsg;
        };
        DominoOp: {
            typeUrl: string;
            encode(message: _134.DominoOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _134.DominoOp;
            fromJSON(object: any): _134.DominoOp;
            toJSON(message: _134.DominoOp): unknown;
            fromPartial(object: Partial<_134.DominoOp>): _134.DominoOp;
            fromSDK(object: _134.DominoOpSDKType): _134.DominoOp;
            toSDK(message: _134.DominoOp): _134.DominoOpSDKType;
            fromAmino(object: _134.DominoOpAmino): _134.DominoOp;
            toAmino(message: _134.DominoOp): _134.DominoOpAmino;
            fromAminoMsg(object: _134.DominoOpAminoMsg): _134.DominoOp;
            fromProtoMsg(message: _134.DominoOpProtoMsg): _134.DominoOp;
            toProto(message: _134.DominoOp): Uint8Array;
            toProtoMsg(message: _134.DominoOp): _134.DominoOpProtoMsg;
        };
        ProofOp: {
            typeUrl: string;
            encode(message: _134.ProofOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _134.ProofOp;
            fromJSON(object: any): _134.ProofOp;
            toJSON(message: _134.ProofOp): unknown;
            fromPartial(object: Partial<_134.ProofOp>): _134.ProofOp;
            fromSDK(object: _134.ProofOpSDKType): _134.ProofOp;
            toSDK(message: _134.ProofOp): _134.ProofOpSDKType;
            fromAmino(object: _134.ProofOpAmino): _134.ProofOp;
            toAmino(message: _134.ProofOp): _134.ProofOpAmino;
            fromAminoMsg(object: _134.ProofOpAminoMsg): _134.ProofOp;
            fromProtoMsg(message: _134.ProofOpProtoMsg): _134.ProofOp;
            toProto(message: _134.ProofOp): Uint8Array;
            toProtoMsg(message: _134.ProofOp): _134.ProofOpProtoMsg;
        };
        ProofOps: {
            typeUrl: string;
            encode(message: _134.ProofOps, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _134.ProofOps;
            fromJSON(object: any): _134.ProofOps;
            toJSON(message: _134.ProofOps): unknown;
            fromPartial(object: Partial<_134.ProofOps>): _134.ProofOps;
            fromSDK(object: _134.ProofOpsSDKType): _134.ProofOps;
            toSDK(message: _134.ProofOps): _134.ProofOpsSDKType;
            fromAmino(object: _134.ProofOpsAmino): _134.ProofOps;
            toAmino(message: _134.ProofOps): _134.ProofOpsAmino;
            fromAminoMsg(object: _134.ProofOpsAminoMsg): _134.ProofOps;
            fromProtoMsg(message: _134.ProofOpsProtoMsg): _134.ProofOps;
            toProto(message: _134.ProofOps): Uint8Array;
            toProtoMsg(message: _134.ProofOps): _134.ProofOpsProtoMsg;
        };
        PublicKey: {
            typeUrl: string;
            encode(message: _133.PublicKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _133.PublicKey;
            fromJSON(object: any): _133.PublicKey;
            toJSON(message: _133.PublicKey): unknown;
            fromPartial(object: Partial<_133.PublicKey>): _133.PublicKey;
            fromSDK(object: _133.PublicKeySDKType): _133.PublicKey;
            toSDK(message: _133.PublicKey): _133.PublicKeySDKType;
            fromAmino(object: _133.PublicKeyAmino): _133.PublicKey;
            toAmino(message: _133.PublicKey): _133.PublicKeyAmino;
            fromAminoMsg(object: _133.PublicKeyAminoMsg): _133.PublicKey;
            fromProtoMsg(message: _133.PublicKeyProtoMsg): _133.PublicKey;
            toProto(message: _133.PublicKey): Uint8Array;
            toProtoMsg(message: _133.PublicKey): _133.PublicKeyProtoMsg;
        };
    };
    namespace libs {
        const bits: {
            protobufPackage: "tendermint.libs.bits";
            BitArray: {
                typeUrl: string;
                encode(message: _135.BitArray, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: import("..").BinaryReader | Uint8Array, length?: number): _135.BitArray;
                fromJSON(object: any): _135.BitArray;
                toJSON(message: _135.BitArray): unknown;
                fromPartial(object: Partial<_135.BitArray>): _135.BitArray;
                fromSDK(object: _135.BitArraySDKType): _135.BitArray;
                toSDK(message: _135.BitArray): _135.BitArraySDKType;
                fromAmino(object: _135.BitArrayAmino): _135.BitArray;
                toAmino(message: _135.BitArray): _135.BitArrayAmino;
                fromAminoMsg(object: _135.BitArrayAminoMsg): _135.BitArray;
                fromProtoMsg(message: _135.BitArrayProtoMsg): _135.BitArray;
                toProto(message: _135.BitArray): Uint8Array;
                toProtoMsg(message: _135.BitArray): _135.BitArrayProtoMsg;
            };
        };
    }
    const p2p: {
        protobufPackage: "tendermint.p2p";
        NetAddress: {
            typeUrl: string;
            encode(message: _136.NetAddress, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _136.NetAddress;
            fromJSON(object: any): _136.NetAddress;
            toJSON(message: _136.NetAddress): unknown;
            fromPartial(object: Partial<_136.NetAddress>): _136.NetAddress;
            fromSDK(object: _136.NetAddressSDKType): _136.NetAddress;
            toSDK(message: _136.NetAddress): _136.NetAddressSDKType;
            fromAmino(object: _136.NetAddressAmino): _136.NetAddress;
            toAmino(message: _136.NetAddress): _136.NetAddressAmino;
            fromAminoMsg(object: _136.NetAddressAminoMsg): _136.NetAddress;
            fromProtoMsg(message: _136.NetAddressProtoMsg): _136.NetAddress;
            toProto(message: _136.NetAddress): Uint8Array;
            toProtoMsg(message: _136.NetAddress): _136.NetAddressProtoMsg;
        };
        ProtocolVersion: {
            typeUrl: string;
            encode(message: _136.ProtocolVersion, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _136.ProtocolVersion;
            fromJSON(object: any): _136.ProtocolVersion;
            toJSON(message: _136.ProtocolVersion): unknown;
            fromPartial(object: Partial<_136.ProtocolVersion>): _136.ProtocolVersion;
            fromSDK(object: _136.ProtocolVersionSDKType): _136.ProtocolVersion;
            toSDK(message: _136.ProtocolVersion): _136.ProtocolVersionSDKType;
            fromAmino(object: _136.ProtocolVersionAmino): _136.ProtocolVersion;
            toAmino(message: _136.ProtocolVersion): _136.ProtocolVersionAmino;
            fromAminoMsg(object: _136.ProtocolVersionAminoMsg): _136.ProtocolVersion;
            fromProtoMsg(message: _136.ProtocolVersionProtoMsg): _136.ProtocolVersion;
            toProto(message: _136.ProtocolVersion): Uint8Array;
            toProtoMsg(message: _136.ProtocolVersion): _136.ProtocolVersionProtoMsg;
        };
        DefaultNodeInfo: {
            typeUrl: string;
            encode(message: _136.DefaultNodeInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _136.DefaultNodeInfo;
            fromJSON(object: any): _136.DefaultNodeInfo;
            toJSON(message: _136.DefaultNodeInfo): unknown;
            fromPartial(object: Partial<_136.DefaultNodeInfo>): _136.DefaultNodeInfo;
            fromSDK(object: _136.DefaultNodeInfoSDKType): _136.DefaultNodeInfo;
            toSDK(message: _136.DefaultNodeInfo): _136.DefaultNodeInfoSDKType;
            fromAmino(object: _136.DefaultNodeInfoAmino): _136.DefaultNodeInfo;
            toAmino(message: _136.DefaultNodeInfo): _136.DefaultNodeInfoAmino;
            fromAminoMsg(object: _136.DefaultNodeInfoAminoMsg): _136.DefaultNodeInfo;
            fromProtoMsg(message: _136.DefaultNodeInfoProtoMsg): _136.DefaultNodeInfo;
            toProto(message: _136.DefaultNodeInfo): Uint8Array;
            toProtoMsg(message: _136.DefaultNodeInfo): _136.DefaultNodeInfoProtoMsg;
        };
        DefaultNodeInfoOther: {
            typeUrl: string;
            encode(message: _136.DefaultNodeInfoOther, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _136.DefaultNodeInfoOther;
            fromJSON(object: any): _136.DefaultNodeInfoOther;
            toJSON(message: _136.DefaultNodeInfoOther): unknown;
            fromPartial(object: Partial<_136.DefaultNodeInfoOther>): _136.DefaultNodeInfoOther;
            fromSDK(object: _136.DefaultNodeInfoOtherSDKType): _136.DefaultNodeInfoOther;
            toSDK(message: _136.DefaultNodeInfoOther): _136.DefaultNodeInfoOtherSDKType;
            fromAmino(object: _136.DefaultNodeInfoOtherAmino): _136.DefaultNodeInfoOther;
            toAmino(message: _136.DefaultNodeInfoOther): _136.DefaultNodeInfoOtherAmino;
            fromAminoMsg(object: _136.DefaultNodeInfoOtherAminoMsg): _136.DefaultNodeInfoOther;
            fromProtoMsg(message: _136.DefaultNodeInfoOtherProtoMsg): _136.DefaultNodeInfoOther;
            toProto(message: _136.DefaultNodeInfoOther): Uint8Array;
            toProtoMsg(message: _136.DefaultNodeInfoOther): _136.DefaultNodeInfoOtherProtoMsg;
        };
    };
    const types: {
        blockIDFlagFromJSON(object: any): _141.BlockIDFlag;
        blockIDFlagToJSON(object: _141.BlockIDFlag): string;
        protobufPackage: "tendermint.types";
        BlockIDFlag: typeof _141.BlockIDFlag;
        BlockIDFlagSDKType: typeof _141.BlockIDFlag;
        BlockIDFlagAmino: typeof _141.BlockIDFlag;
        ValidatorSet: {
            typeUrl: string;
            encode(message: _141.ValidatorSet, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _141.ValidatorSet;
            fromJSON(object: any): _141.ValidatorSet;
            toJSON(message: _141.ValidatorSet): unknown;
            fromPartial(object: Partial<_141.ValidatorSet>): _141.ValidatorSet;
            fromSDK(object: _141.ValidatorSetSDKType): _141.ValidatorSet;
            toSDK(message: _141.ValidatorSet): _141.ValidatorSetSDKType;
            fromAmino(object: _141.ValidatorSetAmino): _141.ValidatorSet;
            toAmino(message: _141.ValidatorSet): _141.ValidatorSetAmino;
            fromAminoMsg(object: _141.ValidatorSetAminoMsg): _141.ValidatorSet;
            fromProtoMsg(message: _141.ValidatorSetProtoMsg): _141.ValidatorSet;
            toProto(message: _141.ValidatorSet): Uint8Array;
            toProtoMsg(message: _141.ValidatorSet): _141.ValidatorSetProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _141.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _141.Validator;
            fromJSON(object: any): _141.Validator;
            toJSON(message: _141.Validator): unknown;
            fromPartial(object: Partial<_141.Validator>): _141.Validator;
            fromSDK(object: _141.ValidatorSDKType): _141.Validator;
            toSDK(message: _141.Validator): _141.ValidatorSDKType;
            fromAmino(object: _141.ValidatorAmino): _141.Validator;
            toAmino(message: _141.Validator): _141.ValidatorAmino;
            fromAminoMsg(object: _141.ValidatorAminoMsg): _141.Validator;
            fromProtoMsg(message: _141.ValidatorProtoMsg): _141.Validator;
            toProto(message: _141.Validator): Uint8Array;
            toProtoMsg(message: _141.Validator): _141.ValidatorProtoMsg;
        };
        SimpleValidator: {
            typeUrl: string;
            encode(message: _141.SimpleValidator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _141.SimpleValidator;
            fromJSON(object: any): _141.SimpleValidator;
            toJSON(message: _141.SimpleValidator): unknown;
            fromPartial(object: Partial<_141.SimpleValidator>): _141.SimpleValidator;
            fromSDK(object: _141.SimpleValidatorSDKType): _141.SimpleValidator;
            toSDK(message: _141.SimpleValidator): _141.SimpleValidatorSDKType;
            fromAmino(object: _141.SimpleValidatorAmino): _141.SimpleValidator;
            toAmino(message: _141.SimpleValidator): _141.SimpleValidatorAmino;
            fromAminoMsg(object: _141.SimpleValidatorAminoMsg): _141.SimpleValidator;
            fromProtoMsg(message: _141.SimpleValidatorProtoMsg): _141.SimpleValidator;
            toProto(message: _141.SimpleValidator): Uint8Array;
            toProtoMsg(message: _141.SimpleValidator): _141.SimpleValidatorProtoMsg;
        };
        signedMsgTypeFromJSON(object: any): _140.SignedMsgType;
        signedMsgTypeToJSON(object: _140.SignedMsgType): string;
        SignedMsgType: typeof _140.SignedMsgType;
        SignedMsgTypeSDKType: typeof _140.SignedMsgType;
        SignedMsgTypeAmino: typeof _140.SignedMsgType;
        PartSetHeader: {
            typeUrl: string;
            encode(message: _140.PartSetHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _140.PartSetHeader;
            fromJSON(object: any): _140.PartSetHeader;
            toJSON(message: _140.PartSetHeader): unknown;
            fromPartial(object: Partial<_140.PartSetHeader>): _140.PartSetHeader;
            fromSDK(object: _140.PartSetHeaderSDKType): _140.PartSetHeader;
            toSDK(message: _140.PartSetHeader): _140.PartSetHeaderSDKType;
            fromAmino(object: _140.PartSetHeaderAmino): _140.PartSetHeader;
            toAmino(message: _140.PartSetHeader): _140.PartSetHeaderAmino;
            fromAminoMsg(object: _140.PartSetHeaderAminoMsg): _140.PartSetHeader;
            fromProtoMsg(message: _140.PartSetHeaderProtoMsg): _140.PartSetHeader;
            toProto(message: _140.PartSetHeader): Uint8Array;
            toProtoMsg(message: _140.PartSetHeader): _140.PartSetHeaderProtoMsg;
        };
        Part: {
            typeUrl: string;
            encode(message: _140.Part, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _140.Part;
            fromJSON(object: any): _140.Part;
            toJSON(message: _140.Part): unknown;
            fromPartial(object: Partial<_140.Part>): _140.Part;
            fromSDK(object: _140.PartSDKType): _140.Part;
            toSDK(message: _140.Part): _140.PartSDKType;
            fromAmino(object: _140.PartAmino): _140.Part;
            toAmino(message: _140.Part): _140.PartAmino;
            fromAminoMsg(object: _140.PartAminoMsg): _140.Part;
            fromProtoMsg(message: _140.PartProtoMsg): _140.Part;
            toProto(message: _140.Part): Uint8Array;
            toProtoMsg(message: _140.Part): _140.PartProtoMsg;
        };
        BlockID: {
            typeUrl: string;
            encode(message: _140.BlockID, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _140.BlockID;
            fromJSON(object: any): _140.BlockID;
            toJSON(message: _140.BlockID): unknown;
            fromPartial(object: Partial<_140.BlockID>): _140.BlockID;
            fromSDK(object: _140.BlockIDSDKType): _140.BlockID;
            toSDK(message: _140.BlockID): _140.BlockIDSDKType;
            fromAmino(object: _140.BlockIDAmino): _140.BlockID;
            toAmino(message: _140.BlockID): _140.BlockIDAmino;
            fromAminoMsg(object: _140.BlockIDAminoMsg): _140.BlockID;
            fromProtoMsg(message: _140.BlockIDProtoMsg): _140.BlockID;
            toProto(message: _140.BlockID): Uint8Array;
            toProtoMsg(message: _140.BlockID): _140.BlockIDProtoMsg;
        };
        Header: {
            typeUrl: string;
            encode(message: _140.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _140.Header;
            fromJSON(object: any): _140.Header;
            toJSON(message: _140.Header): unknown;
            fromPartial(object: Partial<_140.Header>): _140.Header;
            fromSDK(object: _140.HeaderSDKType): _140.Header;
            toSDK(message: _140.Header): _140.HeaderSDKType;
            fromAmino(object: _140.HeaderAmino): _140.Header;
            toAmino(message: _140.Header): _140.HeaderAmino;
            fromAminoMsg(object: _140.HeaderAminoMsg): _140.Header;
            fromProtoMsg(message: _140.HeaderProtoMsg): _140.Header;
            toProto(message: _140.Header): Uint8Array;
            toProtoMsg(message: _140.Header): _140.HeaderProtoMsg;
        };
        Data: {
            typeUrl: string;
            encode(message: _140.Data, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _140.Data;
            fromJSON(object: any): _140.Data;
            toJSON(message: _140.Data): unknown;
            fromPartial(object: Partial<_140.Data>): _140.Data;
            fromSDK(object: _140.DataSDKType): _140.Data;
            toSDK(message: _140.Data): _140.DataSDKType;
            fromAmino(object: _140.DataAmino): _140.Data;
            toAmino(message: _140.Data): _140.DataAmino;
            fromAminoMsg(object: _140.DataAminoMsg): _140.Data;
            fromProtoMsg(message: _140.DataProtoMsg): _140.Data;
            toProto(message: _140.Data): Uint8Array;
            toProtoMsg(message: _140.Data): _140.DataProtoMsg;
        };
        Vote: {
            typeUrl: string;
            encode(message: _140.Vote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _140.Vote;
            fromJSON(object: any): _140.Vote;
            toJSON(message: _140.Vote): unknown;
            fromPartial(object: Partial<_140.Vote>): _140.Vote;
            fromSDK(object: _140.VoteSDKType): _140.Vote;
            toSDK(message: _140.Vote): _140.VoteSDKType;
            fromAmino(object: _140.VoteAmino): _140.Vote;
            toAmino(message: _140.Vote): _140.VoteAmino;
            fromAminoMsg(object: _140.VoteAminoMsg): _140.Vote;
            fromProtoMsg(message: _140.VoteProtoMsg): _140.Vote;
            toProto(message: _140.Vote): Uint8Array;
            toProtoMsg(message: _140.Vote): _140.VoteProtoMsg;
        };
        Commit: {
            typeUrl: string;
            encode(message: _140.Commit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _140.Commit;
            fromJSON(object: any): _140.Commit;
            toJSON(message: _140.Commit): unknown;
            fromPartial(object: Partial<_140.Commit>): _140.Commit;
            fromSDK(object: _140.CommitSDKType): _140.Commit;
            toSDK(message: _140.Commit): _140.CommitSDKType;
            fromAmino(object: _140.CommitAmino): _140.Commit;
            toAmino(message: _140.Commit): _140.CommitAmino;
            fromAminoMsg(object: _140.CommitAminoMsg): _140.Commit;
            fromProtoMsg(message: _140.CommitProtoMsg): _140.Commit;
            toProto(message: _140.Commit): Uint8Array;
            toProtoMsg(message: _140.Commit): _140.CommitProtoMsg;
        };
        CommitSig: {
            typeUrl: string;
            encode(message: _140.CommitSig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _140.CommitSig;
            fromJSON(object: any): _140.CommitSig;
            toJSON(message: _140.CommitSig): unknown;
            fromPartial(object: Partial<_140.CommitSig>): _140.CommitSig;
            fromSDK(object: _140.CommitSigSDKType): _140.CommitSig;
            toSDK(message: _140.CommitSig): _140.CommitSigSDKType;
            fromAmino(object: _140.CommitSigAmino): _140.CommitSig;
            toAmino(message: _140.CommitSig): _140.CommitSigAmino;
            fromAminoMsg(object: _140.CommitSigAminoMsg): _140.CommitSig;
            fromProtoMsg(message: _140.CommitSigProtoMsg): _140.CommitSig;
            toProto(message: _140.CommitSig): Uint8Array;
            toProtoMsg(message: _140.CommitSig): _140.CommitSigProtoMsg;
        };
        ExtendedCommit: {
            typeUrl: string;
            encode(message: _140.ExtendedCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _140.ExtendedCommit;
            fromJSON(object: any): _140.ExtendedCommit;
            toJSON(message: _140.ExtendedCommit): unknown;
            fromPartial(object: Partial<_140.ExtendedCommit>): _140.ExtendedCommit;
            fromSDK(object: _140.ExtendedCommitSDKType): _140.ExtendedCommit;
            toSDK(message: _140.ExtendedCommit): _140.ExtendedCommitSDKType;
            fromAmino(object: _140.ExtendedCommitAmino): _140.ExtendedCommit;
            toAmino(message: _140.ExtendedCommit): _140.ExtendedCommitAmino;
            fromAminoMsg(object: _140.ExtendedCommitAminoMsg): _140.ExtendedCommit;
            fromProtoMsg(message: _140.ExtendedCommitProtoMsg): _140.ExtendedCommit;
            toProto(message: _140.ExtendedCommit): Uint8Array;
            toProtoMsg(message: _140.ExtendedCommit): _140.ExtendedCommitProtoMsg;
        };
        ExtendedCommitSig: {
            typeUrl: string;
            encode(message: _140.ExtendedCommitSig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _140.ExtendedCommitSig;
            fromJSON(object: any): _140.ExtendedCommitSig;
            toJSON(message: _140.ExtendedCommitSig): unknown;
            fromPartial(object: Partial<_140.ExtendedCommitSig>): _140.ExtendedCommitSig;
            fromSDK(object: _140.ExtendedCommitSigSDKType): _140.ExtendedCommitSig;
            toSDK(message: _140.ExtendedCommitSig): _140.ExtendedCommitSigSDKType;
            fromAmino(object: _140.ExtendedCommitSigAmino): _140.ExtendedCommitSig;
            toAmino(message: _140.ExtendedCommitSig): _140.ExtendedCommitSigAmino;
            fromAminoMsg(object: _140.ExtendedCommitSigAminoMsg): _140.ExtendedCommitSig;
            fromProtoMsg(message: _140.ExtendedCommitSigProtoMsg): _140.ExtendedCommitSig;
            toProto(message: _140.ExtendedCommitSig): Uint8Array;
            toProtoMsg(message: _140.ExtendedCommitSig): _140.ExtendedCommitSigProtoMsg;
        };
        Proposal: {
            typeUrl: string;
            encode(message: _140.Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _140.Proposal;
            fromJSON(object: any): _140.Proposal;
            toJSON(message: _140.Proposal): unknown;
            fromPartial(object: Partial<_140.Proposal>): _140.Proposal;
            fromSDK(object: _140.ProposalSDKType): _140.Proposal;
            toSDK(message: _140.Proposal): _140.ProposalSDKType;
            fromAmino(object: _140.ProposalAmino): _140.Proposal;
            toAmino(message: _140.Proposal): _140.ProposalAmino;
            fromAminoMsg(object: _140.ProposalAminoMsg): _140.Proposal;
            fromProtoMsg(message: _140.ProposalProtoMsg): _140.Proposal;
            toProto(message: _140.Proposal): Uint8Array;
            toProtoMsg(message: _140.Proposal): _140.ProposalProtoMsg;
        };
        SignedHeader: {
            typeUrl: string;
            encode(message: _140.SignedHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _140.SignedHeader;
            fromJSON(object: any): _140.SignedHeader;
            toJSON(message: _140.SignedHeader): unknown;
            fromPartial(object: Partial<_140.SignedHeader>): _140.SignedHeader;
            fromSDK(object: _140.SignedHeaderSDKType): _140.SignedHeader;
            toSDK(message: _140.SignedHeader): _140.SignedHeaderSDKType;
            fromAmino(object: _140.SignedHeaderAmino): _140.SignedHeader;
            toAmino(message: _140.SignedHeader): _140.SignedHeaderAmino;
            fromAminoMsg(object: _140.SignedHeaderAminoMsg): _140.SignedHeader;
            fromProtoMsg(message: _140.SignedHeaderProtoMsg): _140.SignedHeader;
            toProto(message: _140.SignedHeader): Uint8Array;
            toProtoMsg(message: _140.SignedHeader): _140.SignedHeaderProtoMsg;
        };
        LightBlock: {
            typeUrl: string;
            encode(message: _140.LightBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _140.LightBlock;
            fromJSON(object: any): _140.LightBlock;
            toJSON(message: _140.LightBlock): unknown;
            fromPartial(object: Partial<_140.LightBlock>): _140.LightBlock;
            fromSDK(object: _140.LightBlockSDKType): _140.LightBlock;
            toSDK(message: _140.LightBlock): _140.LightBlockSDKType;
            fromAmino(object: _140.LightBlockAmino): _140.LightBlock;
            toAmino(message: _140.LightBlock): _140.LightBlockAmino;
            fromAminoMsg(object: _140.LightBlockAminoMsg): _140.LightBlock;
            fromProtoMsg(message: _140.LightBlockProtoMsg): _140.LightBlock;
            toProto(message: _140.LightBlock): Uint8Array;
            toProtoMsg(message: _140.LightBlock): _140.LightBlockProtoMsg;
        };
        BlockMeta: {
            typeUrl: string;
            encode(message: _140.BlockMeta, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _140.BlockMeta;
            fromJSON(object: any): _140.BlockMeta;
            toJSON(message: _140.BlockMeta): unknown;
            fromPartial(object: Partial<_140.BlockMeta>): _140.BlockMeta;
            fromSDK(object: _140.BlockMetaSDKType): _140.BlockMeta;
            toSDK(message: _140.BlockMeta): _140.BlockMetaSDKType;
            fromAmino(object: _140.BlockMetaAmino): _140.BlockMeta;
            toAmino(message: _140.BlockMeta): _140.BlockMetaAmino;
            fromAminoMsg(object: _140.BlockMetaAminoMsg): _140.BlockMeta;
            fromProtoMsg(message: _140.BlockMetaProtoMsg): _140.BlockMeta;
            toProto(message: _140.BlockMeta): Uint8Array;
            toProtoMsg(message: _140.BlockMeta): _140.BlockMetaProtoMsg;
        };
        TxProof: {
            typeUrl: string;
            encode(message: _140.TxProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _140.TxProof;
            fromJSON(object: any): _140.TxProof;
            toJSON(message: _140.TxProof): unknown;
            fromPartial(object: Partial<_140.TxProof>): _140.TxProof;
            fromSDK(object: _140.TxProofSDKType): _140.TxProof;
            toSDK(message: _140.TxProof): _140.TxProofSDKType;
            fromAmino(object: _140.TxProofAmino): _140.TxProof;
            toAmino(message: _140.TxProof): _140.TxProofAmino;
            fromAminoMsg(object: _140.TxProofAminoMsg): _140.TxProof;
            fromProtoMsg(message: _140.TxProofProtoMsg): _140.TxProof;
            toProto(message: _140.TxProof): Uint8Array;
            toProtoMsg(message: _140.TxProof): _140.TxProofProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            encode(message: _139.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _139.ConsensusParams;
            fromJSON(object: any): _139.ConsensusParams;
            toJSON(message: _139.ConsensusParams): unknown;
            fromPartial(object: Partial<_139.ConsensusParams>): _139.ConsensusParams;
            fromSDK(object: _139.ConsensusParamsSDKType): _139.ConsensusParams;
            toSDK(message: _139.ConsensusParams): _139.ConsensusParamsSDKType;
            fromAmino(object: _139.ConsensusParamsAmino): _139.ConsensusParams;
            toAmino(message: _139.ConsensusParams): _139.ConsensusParamsAmino;
            fromAminoMsg(object: _139.ConsensusParamsAminoMsg): _139.ConsensusParams;
            fromProtoMsg(message: _139.ConsensusParamsProtoMsg): _139.ConsensusParams;
            toProto(message: _139.ConsensusParams): Uint8Array;
            toProtoMsg(message: _139.ConsensusParams): _139.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            encode(message: _139.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _139.BlockParams;
            fromJSON(object: any): _139.BlockParams;
            toJSON(message: _139.BlockParams): unknown;
            fromPartial(object: Partial<_139.BlockParams>): _139.BlockParams;
            fromSDK(object: _139.BlockParamsSDKType): _139.BlockParams;
            toSDK(message: _139.BlockParams): _139.BlockParamsSDKType;
            fromAmino(object: _139.BlockParamsAmino): _139.BlockParams;
            toAmino(message: _139.BlockParams): _139.BlockParamsAmino;
            fromAminoMsg(object: _139.BlockParamsAminoMsg): _139.BlockParams;
            fromProtoMsg(message: _139.BlockParamsProtoMsg): _139.BlockParams;
            toProto(message: _139.BlockParams): Uint8Array;
            toProtoMsg(message: _139.BlockParams): _139.BlockParamsProtoMsg;
        };
        EvidenceParams: {
            typeUrl: string;
            encode(message: _139.EvidenceParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _139.EvidenceParams;
            fromJSON(object: any): _139.EvidenceParams;
            toJSON(message: _139.EvidenceParams): unknown;
            fromPartial(object: Partial<_139.EvidenceParams>): _139.EvidenceParams;
            fromSDK(object: _139.EvidenceParamsSDKType): _139.EvidenceParams;
            toSDK(message: _139.EvidenceParams): _139.EvidenceParamsSDKType;
            fromAmino(object: _139.EvidenceParamsAmino): _139.EvidenceParams;
            toAmino(message: _139.EvidenceParams): _139.EvidenceParamsAmino;
            fromAminoMsg(object: _139.EvidenceParamsAminoMsg): _139.EvidenceParams;
            fromProtoMsg(message: _139.EvidenceParamsProtoMsg): _139.EvidenceParams;
            toProto(message: _139.EvidenceParams): Uint8Array;
            toProtoMsg(message: _139.EvidenceParams): _139.EvidenceParamsProtoMsg;
        };
        ValidatorParams: {
            typeUrl: string;
            encode(message: _139.ValidatorParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _139.ValidatorParams;
            fromJSON(object: any): _139.ValidatorParams;
            toJSON(message: _139.ValidatorParams): unknown;
            fromPartial(object: Partial<_139.ValidatorParams>): _139.ValidatorParams;
            fromSDK(object: _139.ValidatorParamsSDKType): _139.ValidatorParams;
            toSDK(message: _139.ValidatorParams): _139.ValidatorParamsSDKType;
            fromAmino(object: _139.ValidatorParamsAmino): _139.ValidatorParams;
            toAmino(message: _139.ValidatorParams): _139.ValidatorParamsAmino;
            fromAminoMsg(object: _139.ValidatorParamsAminoMsg): _139.ValidatorParams;
            fromProtoMsg(message: _139.ValidatorParamsProtoMsg): _139.ValidatorParams;
            toProto(message: _139.ValidatorParams): Uint8Array;
            toProtoMsg(message: _139.ValidatorParams): _139.ValidatorParamsProtoMsg;
        };
        VersionParams: {
            typeUrl: string;
            encode(message: _139.VersionParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _139.VersionParams;
            fromJSON(object: any): _139.VersionParams;
            toJSON(message: _139.VersionParams): unknown;
            fromPartial(object: Partial<_139.VersionParams>): _139.VersionParams;
            fromSDK(object: _139.VersionParamsSDKType): _139.VersionParams;
            toSDK(message: _139.VersionParams): _139.VersionParamsSDKType;
            fromAmino(object: _139.VersionParamsAmino): _139.VersionParams;
            toAmino(message: _139.VersionParams): _139.VersionParamsAmino;
            fromAminoMsg(object: _139.VersionParamsAminoMsg): _139.VersionParams;
            fromProtoMsg(message: _139.VersionParamsProtoMsg): _139.VersionParams;
            toProto(message: _139.VersionParams): Uint8Array;
            toProtoMsg(message: _139.VersionParams): _139.VersionParamsProtoMsg;
        };
        HashedParams: {
            typeUrl: string;
            encode(message: _139.HashedParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _139.HashedParams;
            fromJSON(object: any): _139.HashedParams;
            toJSON(message: _139.HashedParams): unknown;
            fromPartial(object: Partial<_139.HashedParams>): _139.HashedParams;
            fromSDK(object: _139.HashedParamsSDKType): _139.HashedParams;
            toSDK(message: _139.HashedParams): _139.HashedParamsSDKType;
            fromAmino(object: _139.HashedParamsAmino): _139.HashedParams;
            toAmino(message: _139.HashedParams): _139.HashedParamsAmino;
            fromAminoMsg(object: _139.HashedParamsAminoMsg): _139.HashedParams;
            fromProtoMsg(message: _139.HashedParamsProtoMsg): _139.HashedParams;
            toProto(message: _139.HashedParams): Uint8Array;
            toProtoMsg(message: _139.HashedParams): _139.HashedParamsProtoMsg;
        };
        ABCIParams: {
            typeUrl: string;
            encode(message: _139.ABCIParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _139.ABCIParams;
            fromJSON(object: any): _139.ABCIParams;
            toJSON(message: _139.ABCIParams): unknown;
            fromPartial(object: Partial<_139.ABCIParams>): _139.ABCIParams;
            fromSDK(object: _139.ABCIParamsSDKType): _139.ABCIParams;
            toSDK(message: _139.ABCIParams): _139.ABCIParamsSDKType;
            fromAmino(object: _139.ABCIParamsAmino): _139.ABCIParams;
            toAmino(message: _139.ABCIParams): _139.ABCIParamsAmino;
            fromAminoMsg(object: _139.ABCIParamsAminoMsg): _139.ABCIParams;
            fromProtoMsg(message: _139.ABCIParamsProtoMsg): _139.ABCIParams;
            toProto(message: _139.ABCIParams): Uint8Array;
            toProtoMsg(message: _139.ABCIParams): _139.ABCIParamsProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            encode(message: _138.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _138.Evidence;
            fromJSON(object: any): _138.Evidence;
            toJSON(message: _138.Evidence): unknown;
            fromPartial(object: Partial<_138.Evidence>): _138.Evidence;
            fromSDK(object: _138.EvidenceSDKType): _138.Evidence;
            toSDK(message: _138.Evidence): _138.EvidenceSDKType;
            fromAmino(object: _138.EvidenceAmino): _138.Evidence;
            toAmino(message: _138.Evidence): _138.EvidenceAmino;
            fromAminoMsg(object: _138.EvidenceAminoMsg): _138.Evidence;
            fromProtoMsg(message: _138.EvidenceProtoMsg): _138.Evidence;
            toProto(message: _138.Evidence): Uint8Array;
            toProtoMsg(message: _138.Evidence): _138.EvidenceProtoMsg;
        };
        DuplicateVoteEvidence: {
            typeUrl: string;
            encode(message: _138.DuplicateVoteEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _138.DuplicateVoteEvidence;
            fromJSON(object: any): _138.DuplicateVoteEvidence;
            toJSON(message: _138.DuplicateVoteEvidence): unknown;
            fromPartial(object: Partial<_138.DuplicateVoteEvidence>): _138.DuplicateVoteEvidence;
            fromSDK(object: _138.DuplicateVoteEvidenceSDKType): _138.DuplicateVoteEvidence;
            toSDK(message: _138.DuplicateVoteEvidence): _138.DuplicateVoteEvidenceSDKType;
            fromAmino(object: _138.DuplicateVoteEvidenceAmino): _138.DuplicateVoteEvidence;
            toAmino(message: _138.DuplicateVoteEvidence): _138.DuplicateVoteEvidenceAmino;
            fromAminoMsg(object: _138.DuplicateVoteEvidenceAminoMsg): _138.DuplicateVoteEvidence;
            fromProtoMsg(message: _138.DuplicateVoteEvidenceProtoMsg): _138.DuplicateVoteEvidence;
            toProto(message: _138.DuplicateVoteEvidence): Uint8Array;
            toProtoMsg(message: _138.DuplicateVoteEvidence): _138.DuplicateVoteEvidenceProtoMsg;
        };
        LightClientAttackEvidence: {
            typeUrl: string;
            encode(message: _138.LightClientAttackEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _138.LightClientAttackEvidence;
            fromJSON(object: any): _138.LightClientAttackEvidence;
            toJSON(message: _138.LightClientAttackEvidence): unknown;
            fromPartial(object: Partial<_138.LightClientAttackEvidence>): _138.LightClientAttackEvidence;
            fromSDK(object: _138.LightClientAttackEvidenceSDKType): _138.LightClientAttackEvidence;
            toSDK(message: _138.LightClientAttackEvidence): _138.LightClientAttackEvidenceSDKType;
            fromAmino(object: _138.LightClientAttackEvidenceAmino): _138.LightClientAttackEvidence;
            toAmino(message: _138.LightClientAttackEvidence): _138.LightClientAttackEvidenceAmino;
            fromAminoMsg(object: _138.LightClientAttackEvidenceAminoMsg): _138.LightClientAttackEvidence;
            fromProtoMsg(message: _138.LightClientAttackEvidenceProtoMsg): _138.LightClientAttackEvidence;
            toProto(message: _138.LightClientAttackEvidence): Uint8Array;
            toProtoMsg(message: _138.LightClientAttackEvidence): _138.LightClientAttackEvidenceProtoMsg;
        };
        EvidenceList: {
            typeUrl: string;
            encode(message: _138.EvidenceList, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _138.EvidenceList;
            fromJSON(object: any): _138.EvidenceList;
            toJSON(message: _138.EvidenceList): unknown;
            fromPartial(object: Partial<_138.EvidenceList>): _138.EvidenceList;
            fromSDK(object: _138.EvidenceListSDKType): _138.EvidenceList;
            toSDK(message: _138.EvidenceList): _138.EvidenceListSDKType;
            fromAmino(object: _138.EvidenceListAmino): _138.EvidenceList;
            toAmino(message: _138.EvidenceList): _138.EvidenceListAmino;
            fromAminoMsg(object: _138.EvidenceListAminoMsg): _138.EvidenceList;
            fromProtoMsg(message: _138.EvidenceListProtoMsg): _138.EvidenceList;
            toProto(message: _138.EvidenceList): Uint8Array;
            toProtoMsg(message: _138.EvidenceList): _138.EvidenceListProtoMsg;
        };
        Block: {
            typeUrl: string;
            encode(message: _137.Block, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _137.Block;
            fromJSON(object: any): _137.Block;
            toJSON(message: _137.Block): unknown;
            fromPartial(object: Partial<_137.Block>): _137.Block;
            fromSDK(object: _137.BlockSDKType): _137.Block;
            toSDK(message: _137.Block): _137.BlockSDKType;
            fromAmino(object: _137.BlockAmino): _137.Block;
            toAmino(message: _137.Block): _137.BlockAmino;
            fromAminoMsg(object: _137.BlockAminoMsg): _137.Block;
            fromProtoMsg(message: _137.BlockProtoMsg): _137.Block;
            toProto(message: _137.Block): Uint8Array;
            toProtoMsg(message: _137.Block): _137.BlockProtoMsg;
        };
    };
    const version: {
        protobufPackage: "tendermint.version";
        App: {
            typeUrl: string;
            encode(message: _142.App, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _142.App;
            fromJSON(object: any): _142.App;
            toJSON(message: _142.App): unknown;
            fromPartial(object: Partial<_142.App>): _142.App;
            fromSDK(object: _142.AppSDKType): _142.App;
            toSDK(message: _142.App): _142.AppSDKType;
            fromAmino(object: _142.AppAmino): _142.App;
            toAmino(message: _142.App): _142.AppAmino;
            fromAminoMsg(object: _142.AppAminoMsg): _142.App;
            fromProtoMsg(message: _142.AppProtoMsg): _142.App;
            toProto(message: _142.App): Uint8Array;
            toProtoMsg(message: _142.App): _142.AppProtoMsg;
        };
        Consensus: {
            typeUrl: string;
            encode(message: _142.Consensus, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: import("..").BinaryReader | Uint8Array, length?: number): _142.Consensus;
            fromJSON(object: any): _142.Consensus;
            toJSON(message: _142.Consensus): unknown;
            fromPartial(object: Partial<_142.Consensus>): _142.Consensus;
            fromSDK(object: _142.ConsensusSDKType): _142.Consensus;
            toSDK(message: _142.Consensus): _142.ConsensusSDKType;
            fromAmino(object: _142.ConsensusAmino): _142.Consensus;
            toAmino(message: _142.Consensus): _142.ConsensusAmino;
            fromAminoMsg(object: _142.ConsensusAminoMsg): _142.Consensus;
            fromProtoMsg(message: _142.ConsensusProtoMsg): _142.Consensus;
            toProto(message: _142.Consensus): Uint8Array;
            toProtoMsg(message: _142.Consensus): _142.ConsensusProtoMsg;
        };
    };
}
