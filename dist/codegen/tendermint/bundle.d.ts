import * as _150 from "./abci/types";
import * as _151 from "./crypto/keys";
import * as _152 from "./crypto/proof";
import * as _153 from "./libs/bits/types";
import * as _154 from "./p2p/types";
import * as _155 from "./types/block";
import * as _156 from "./types/evidence";
import * as _157 from "./types/params";
import * as _158 from "./types/types";
import * as _159 from "./types/validator";
import * as _160 from "./version/types";
export declare namespace tendermint {
    const abci: {
        checkTxTypeFromJSON(object: any): _150.CheckTxType;
        checkTxTypeToJSON(object: _150.CheckTxType): string;
        responseOfferSnapshot_ResultFromJSON(object: any): _150.ResponseOfferSnapshot_Result;
        responseOfferSnapshot_ResultToJSON(object: _150.ResponseOfferSnapshot_Result): string;
        responseApplySnapshotChunk_ResultFromJSON(object: any): _150.ResponseApplySnapshotChunk_Result;
        responseApplySnapshotChunk_ResultToJSON(object: _150.ResponseApplySnapshotChunk_Result): string;
        evidenceTypeFromJSON(object: any): _150.EvidenceType;
        evidenceTypeToJSON(object: _150.EvidenceType): string;
        CheckTxType: typeof _150.CheckTxType;
        CheckTxTypeSDKType: typeof _150.CheckTxType;
        CheckTxTypeAmino: typeof _150.CheckTxType;
        ResponseOfferSnapshot_Result: typeof _150.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultSDKType: typeof _150.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultAmino: typeof _150.ResponseOfferSnapshot_Result;
        ResponseApplySnapshotChunk_Result: typeof _150.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultSDKType: typeof _150.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultAmino: typeof _150.ResponseApplySnapshotChunk_Result;
        EvidenceType: typeof _150.EvidenceType;
        EvidenceTypeSDKType: typeof _150.EvidenceType;
        EvidenceTypeAmino: typeof _150.EvidenceType;
        Request: {
            typeUrl: string;
            encode(message: _150.Request, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.Request;
            fromJSON(object: any): _150.Request;
            toJSON(message: _150.Request): unknown;
            fromPartial(object: Partial<_150.Request>): _150.Request;
            fromSDK(object: _150.RequestSDKType): _150.Request;
            toSDK(message: _150.Request): _150.RequestSDKType;
            fromAmino(object: _150.RequestAmino): _150.Request;
            toAmino(message: _150.Request): _150.RequestAmino;
            fromAminoMsg(object: _150.RequestAminoMsg): _150.Request;
            fromProtoMsg(message: _150.RequestProtoMsg): _150.Request;
            toProto(message: _150.Request): Uint8Array;
            toProtoMsg(message: _150.Request): _150.RequestProtoMsg;
        };
        RequestEcho: {
            typeUrl: string;
            encode(message: _150.RequestEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.RequestEcho;
            fromJSON(object: any): _150.RequestEcho;
            toJSON(message: _150.RequestEcho): unknown;
            fromPartial(object: Partial<_150.RequestEcho>): _150.RequestEcho;
            fromSDK(object: _150.RequestEchoSDKType): _150.RequestEcho;
            toSDK(message: _150.RequestEcho): _150.RequestEchoSDKType;
            fromAmino(object: _150.RequestEchoAmino): _150.RequestEcho;
            toAmino(message: _150.RequestEcho): _150.RequestEchoAmino;
            fromAminoMsg(object: _150.RequestEchoAminoMsg): _150.RequestEcho;
            fromProtoMsg(message: _150.RequestEchoProtoMsg): _150.RequestEcho;
            toProto(message: _150.RequestEcho): Uint8Array;
            toProtoMsg(message: _150.RequestEcho): _150.RequestEchoProtoMsg;
        };
        RequestFlush: {
            typeUrl: string;
            encode(_: _150.RequestFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.RequestFlush;
            fromJSON(_: any): _150.RequestFlush;
            toJSON(_: _150.RequestFlush): unknown;
            fromPartial(_: Partial<_150.RequestFlush>): _150.RequestFlush;
            fromSDK(_: _150.RequestFlushSDKType): _150.RequestFlush;
            toSDK(_: _150.RequestFlush): _150.RequestFlushSDKType;
            fromAmino(_: _150.RequestFlushAmino): _150.RequestFlush;
            toAmino(_: _150.RequestFlush): _150.RequestFlushAmino;
            fromAminoMsg(object: _150.RequestFlushAminoMsg): _150.RequestFlush;
            fromProtoMsg(message: _150.RequestFlushProtoMsg): _150.RequestFlush;
            toProto(message: _150.RequestFlush): Uint8Array;
            toProtoMsg(message: _150.RequestFlush): _150.RequestFlushProtoMsg;
        };
        RequestInfo: {
            typeUrl: string;
            encode(message: _150.RequestInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.RequestInfo;
            fromJSON(object: any): _150.RequestInfo;
            toJSON(message: _150.RequestInfo): unknown;
            fromPartial(object: Partial<_150.RequestInfo>): _150.RequestInfo;
            fromSDK(object: _150.RequestInfoSDKType): _150.RequestInfo;
            toSDK(message: _150.RequestInfo): _150.RequestInfoSDKType;
            fromAmino(object: _150.RequestInfoAmino): _150.RequestInfo;
            toAmino(message: _150.RequestInfo): _150.RequestInfoAmino;
            fromAminoMsg(object: _150.RequestInfoAminoMsg): _150.RequestInfo;
            fromProtoMsg(message: _150.RequestInfoProtoMsg): _150.RequestInfo;
            toProto(message: _150.RequestInfo): Uint8Array;
            toProtoMsg(message: _150.RequestInfo): _150.RequestInfoProtoMsg;
        };
        RequestSetOption: {
            typeUrl: string;
            encode(message: _150.RequestSetOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.RequestSetOption;
            fromJSON(object: any): _150.RequestSetOption;
            toJSON(message: _150.RequestSetOption): unknown;
            fromPartial(object: Partial<_150.RequestSetOption>): _150.RequestSetOption;
            fromSDK(object: _150.RequestSetOptionSDKType): _150.RequestSetOption;
            toSDK(message: _150.RequestSetOption): _150.RequestSetOptionSDKType;
            fromAmino(object: _150.RequestSetOptionAmino): _150.RequestSetOption;
            toAmino(message: _150.RequestSetOption): _150.RequestSetOptionAmino;
            fromAminoMsg(object: _150.RequestSetOptionAminoMsg): _150.RequestSetOption;
            fromProtoMsg(message: _150.RequestSetOptionProtoMsg): _150.RequestSetOption;
            toProto(message: _150.RequestSetOption): Uint8Array;
            toProtoMsg(message: _150.RequestSetOption): _150.RequestSetOptionProtoMsg;
        };
        RequestInitChain: {
            typeUrl: string;
            encode(message: _150.RequestInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.RequestInitChain;
            fromJSON(object: any): _150.RequestInitChain;
            toJSON(message: _150.RequestInitChain): unknown;
            fromPartial(object: Partial<_150.RequestInitChain>): _150.RequestInitChain;
            fromSDK(object: _150.RequestInitChainSDKType): _150.RequestInitChain;
            toSDK(message: _150.RequestInitChain): _150.RequestInitChainSDKType;
            fromAmino(object: _150.RequestInitChainAmino): _150.RequestInitChain;
            toAmino(message: _150.RequestInitChain): _150.RequestInitChainAmino;
            fromAminoMsg(object: _150.RequestInitChainAminoMsg): _150.RequestInitChain;
            fromProtoMsg(message: _150.RequestInitChainProtoMsg): _150.RequestInitChain;
            toProto(message: _150.RequestInitChain): Uint8Array;
            toProtoMsg(message: _150.RequestInitChain): _150.RequestInitChainProtoMsg;
        };
        RequestQuery: {
            typeUrl: string;
            encode(message: _150.RequestQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.RequestQuery;
            fromJSON(object: any): _150.RequestQuery;
            toJSON(message: _150.RequestQuery): unknown;
            fromPartial(object: Partial<_150.RequestQuery>): _150.RequestQuery;
            fromSDK(object: _150.RequestQuerySDKType): _150.RequestQuery;
            toSDK(message: _150.RequestQuery): _150.RequestQuerySDKType;
            fromAmino(object: _150.RequestQueryAmino): _150.RequestQuery;
            toAmino(message: _150.RequestQuery): _150.RequestQueryAmino;
            fromAminoMsg(object: _150.RequestQueryAminoMsg): _150.RequestQuery;
            fromProtoMsg(message: _150.RequestQueryProtoMsg): _150.RequestQuery;
            toProto(message: _150.RequestQuery): Uint8Array;
            toProtoMsg(message: _150.RequestQuery): _150.RequestQueryProtoMsg;
        };
        RequestBeginBlock: {
            typeUrl: string;
            encode(message: _150.RequestBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.RequestBeginBlock;
            fromJSON(object: any): _150.RequestBeginBlock;
            toJSON(message: _150.RequestBeginBlock): unknown;
            fromPartial(object: Partial<_150.RequestBeginBlock>): _150.RequestBeginBlock;
            fromSDK(object: _150.RequestBeginBlockSDKType): _150.RequestBeginBlock;
            toSDK(message: _150.RequestBeginBlock): _150.RequestBeginBlockSDKType;
            fromAmino(object: _150.RequestBeginBlockAmino): _150.RequestBeginBlock;
            toAmino(message: _150.RequestBeginBlock): _150.RequestBeginBlockAmino;
            fromAminoMsg(object: _150.RequestBeginBlockAminoMsg): _150.RequestBeginBlock;
            fromProtoMsg(message: _150.RequestBeginBlockProtoMsg): _150.RequestBeginBlock;
            toProto(message: _150.RequestBeginBlock): Uint8Array;
            toProtoMsg(message: _150.RequestBeginBlock): _150.RequestBeginBlockProtoMsg;
        };
        RequestCheckTx: {
            typeUrl: string;
            encode(message: _150.RequestCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.RequestCheckTx;
            fromJSON(object: any): _150.RequestCheckTx;
            toJSON(message: _150.RequestCheckTx): unknown;
            fromPartial(object: Partial<_150.RequestCheckTx>): _150.RequestCheckTx;
            fromSDK(object: _150.RequestCheckTxSDKType): _150.RequestCheckTx;
            toSDK(message: _150.RequestCheckTx): _150.RequestCheckTxSDKType;
            fromAmino(object: _150.RequestCheckTxAmino): _150.RequestCheckTx;
            toAmino(message: _150.RequestCheckTx): _150.RequestCheckTxAmino;
            fromAminoMsg(object: _150.RequestCheckTxAminoMsg): _150.RequestCheckTx;
            fromProtoMsg(message: _150.RequestCheckTxProtoMsg): _150.RequestCheckTx;
            toProto(message: _150.RequestCheckTx): Uint8Array;
            toProtoMsg(message: _150.RequestCheckTx): _150.RequestCheckTxProtoMsg;
        };
        RequestDeliverTx: {
            typeUrl: string;
            encode(message: _150.RequestDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.RequestDeliverTx;
            fromJSON(object: any): _150.RequestDeliverTx;
            toJSON(message: _150.RequestDeliverTx): unknown;
            fromPartial(object: Partial<_150.RequestDeliverTx>): _150.RequestDeliverTx;
            fromSDK(object: _150.RequestDeliverTxSDKType): _150.RequestDeliverTx;
            toSDK(message: _150.RequestDeliverTx): _150.RequestDeliverTxSDKType;
            fromAmino(object: _150.RequestDeliverTxAmino): _150.RequestDeliverTx;
            toAmino(message: _150.RequestDeliverTx): _150.RequestDeliverTxAmino;
            fromAminoMsg(object: _150.RequestDeliverTxAminoMsg): _150.RequestDeliverTx;
            fromProtoMsg(message: _150.RequestDeliverTxProtoMsg): _150.RequestDeliverTx;
            toProto(message: _150.RequestDeliverTx): Uint8Array;
            toProtoMsg(message: _150.RequestDeliverTx): _150.RequestDeliverTxProtoMsg;
        };
        RequestEndBlock: {
            typeUrl: string;
            encode(message: _150.RequestEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.RequestEndBlock;
            fromJSON(object: any): _150.RequestEndBlock;
            toJSON(message: _150.RequestEndBlock): unknown;
            fromPartial(object: Partial<_150.RequestEndBlock>): _150.RequestEndBlock;
            fromSDK(object: _150.RequestEndBlockSDKType): _150.RequestEndBlock;
            toSDK(message: _150.RequestEndBlock): _150.RequestEndBlockSDKType;
            fromAmino(object: _150.RequestEndBlockAmino): _150.RequestEndBlock;
            toAmino(message: _150.RequestEndBlock): _150.RequestEndBlockAmino;
            fromAminoMsg(object: _150.RequestEndBlockAminoMsg): _150.RequestEndBlock;
            fromProtoMsg(message: _150.RequestEndBlockProtoMsg): _150.RequestEndBlock;
            toProto(message: _150.RequestEndBlock): Uint8Array;
            toProtoMsg(message: _150.RequestEndBlock): _150.RequestEndBlockProtoMsg;
        };
        RequestCommit: {
            typeUrl: string;
            encode(_: _150.RequestCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.RequestCommit;
            fromJSON(_: any): _150.RequestCommit;
            toJSON(_: _150.RequestCommit): unknown;
            fromPartial(_: Partial<_150.RequestCommit>): _150.RequestCommit;
            fromSDK(_: _150.RequestCommitSDKType): _150.RequestCommit;
            toSDK(_: _150.RequestCommit): _150.RequestCommitSDKType;
            fromAmino(_: _150.RequestCommitAmino): _150.RequestCommit;
            toAmino(_: _150.RequestCommit): _150.RequestCommitAmino;
            fromAminoMsg(object: _150.RequestCommitAminoMsg): _150.RequestCommit;
            fromProtoMsg(message: _150.RequestCommitProtoMsg): _150.RequestCommit;
            toProto(message: _150.RequestCommit): Uint8Array;
            toProtoMsg(message: _150.RequestCommit): _150.RequestCommitProtoMsg;
        };
        RequestListSnapshots: {
            typeUrl: string;
            encode(_: _150.RequestListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.RequestListSnapshots;
            fromJSON(_: any): _150.RequestListSnapshots;
            toJSON(_: _150.RequestListSnapshots): unknown;
            fromPartial(_: Partial<_150.RequestListSnapshots>): _150.RequestListSnapshots;
            fromSDK(_: _150.RequestListSnapshotsSDKType): _150.RequestListSnapshots;
            toSDK(_: _150.RequestListSnapshots): _150.RequestListSnapshotsSDKType;
            fromAmino(_: _150.RequestListSnapshotsAmino): _150.RequestListSnapshots;
            toAmino(_: _150.RequestListSnapshots): _150.RequestListSnapshotsAmino;
            fromAminoMsg(object: _150.RequestListSnapshotsAminoMsg): _150.RequestListSnapshots;
            fromProtoMsg(message: _150.RequestListSnapshotsProtoMsg): _150.RequestListSnapshots;
            toProto(message: _150.RequestListSnapshots): Uint8Array;
            toProtoMsg(message: _150.RequestListSnapshots): _150.RequestListSnapshotsProtoMsg;
        };
        RequestOfferSnapshot: {
            typeUrl: string;
            encode(message: _150.RequestOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.RequestOfferSnapshot;
            fromJSON(object: any): _150.RequestOfferSnapshot;
            toJSON(message: _150.RequestOfferSnapshot): unknown;
            fromPartial(object: Partial<_150.RequestOfferSnapshot>): _150.RequestOfferSnapshot;
            fromSDK(object: _150.RequestOfferSnapshotSDKType): _150.RequestOfferSnapshot;
            toSDK(message: _150.RequestOfferSnapshot): _150.RequestOfferSnapshotSDKType;
            fromAmino(object: _150.RequestOfferSnapshotAmino): _150.RequestOfferSnapshot;
            toAmino(message: _150.RequestOfferSnapshot): _150.RequestOfferSnapshotAmino;
            fromAminoMsg(object: _150.RequestOfferSnapshotAminoMsg): _150.RequestOfferSnapshot;
            fromProtoMsg(message: _150.RequestOfferSnapshotProtoMsg): _150.RequestOfferSnapshot;
            toProto(message: _150.RequestOfferSnapshot): Uint8Array;
            toProtoMsg(message: _150.RequestOfferSnapshot): _150.RequestOfferSnapshotProtoMsg;
        };
        RequestLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _150.RequestLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.RequestLoadSnapshotChunk;
            fromJSON(object: any): _150.RequestLoadSnapshotChunk;
            toJSON(message: _150.RequestLoadSnapshotChunk): unknown;
            fromPartial(object: Partial<_150.RequestLoadSnapshotChunk>): _150.RequestLoadSnapshotChunk;
            fromSDK(object: _150.RequestLoadSnapshotChunkSDKType): _150.RequestLoadSnapshotChunk;
            toSDK(message: _150.RequestLoadSnapshotChunk): _150.RequestLoadSnapshotChunkSDKType;
            fromAmino(object: _150.RequestLoadSnapshotChunkAmino): _150.RequestLoadSnapshotChunk;
            toAmino(message: _150.RequestLoadSnapshotChunk): _150.RequestLoadSnapshotChunkAmino;
            fromAminoMsg(object: _150.RequestLoadSnapshotChunkAminoMsg): _150.RequestLoadSnapshotChunk;
            fromProtoMsg(message: _150.RequestLoadSnapshotChunkProtoMsg): _150.RequestLoadSnapshotChunk;
            toProto(message: _150.RequestLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _150.RequestLoadSnapshotChunk): _150.RequestLoadSnapshotChunkProtoMsg;
        };
        RequestApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _150.RequestApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.RequestApplySnapshotChunk;
            fromJSON(object: any): _150.RequestApplySnapshotChunk;
            toJSON(message: _150.RequestApplySnapshotChunk): unknown;
            fromPartial(object: Partial<_150.RequestApplySnapshotChunk>): _150.RequestApplySnapshotChunk;
            fromSDK(object: _150.RequestApplySnapshotChunkSDKType): _150.RequestApplySnapshotChunk;
            toSDK(message: _150.RequestApplySnapshotChunk): _150.RequestApplySnapshotChunkSDKType;
            fromAmino(object: _150.RequestApplySnapshotChunkAmino): _150.RequestApplySnapshotChunk;
            toAmino(message: _150.RequestApplySnapshotChunk): _150.RequestApplySnapshotChunkAmino;
            fromAminoMsg(object: _150.RequestApplySnapshotChunkAminoMsg): _150.RequestApplySnapshotChunk;
            fromProtoMsg(message: _150.RequestApplySnapshotChunkProtoMsg): _150.RequestApplySnapshotChunk;
            toProto(message: _150.RequestApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _150.RequestApplySnapshotChunk): _150.RequestApplySnapshotChunkProtoMsg;
        };
        Response: {
            typeUrl: string;
            encode(message: _150.Response, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.Response;
            fromJSON(object: any): _150.Response;
            toJSON(message: _150.Response): unknown;
            fromPartial(object: Partial<_150.Response>): _150.Response;
            fromSDK(object: _150.ResponseSDKType): _150.Response;
            toSDK(message: _150.Response): _150.ResponseSDKType;
            fromAmino(object: _150.ResponseAmino): _150.Response;
            toAmino(message: _150.Response): _150.ResponseAmino;
            fromAminoMsg(object: _150.ResponseAminoMsg): _150.Response;
            fromProtoMsg(message: _150.ResponseProtoMsg): _150.Response;
            toProto(message: _150.Response): Uint8Array;
            toProtoMsg(message: _150.Response): _150.ResponseProtoMsg;
        };
        ResponseException: {
            typeUrl: string;
            encode(message: _150.ResponseException, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.ResponseException;
            fromJSON(object: any): _150.ResponseException;
            toJSON(message: _150.ResponseException): unknown;
            fromPartial(object: Partial<_150.ResponseException>): _150.ResponseException;
            fromSDK(object: _150.ResponseExceptionSDKType): _150.ResponseException;
            toSDK(message: _150.ResponseException): _150.ResponseExceptionSDKType;
            fromAmino(object: _150.ResponseExceptionAmino): _150.ResponseException;
            toAmino(message: _150.ResponseException): _150.ResponseExceptionAmino;
            fromAminoMsg(object: _150.ResponseExceptionAminoMsg): _150.ResponseException;
            fromProtoMsg(message: _150.ResponseExceptionProtoMsg): _150.ResponseException;
            toProto(message: _150.ResponseException): Uint8Array;
            toProtoMsg(message: _150.ResponseException): _150.ResponseExceptionProtoMsg;
        };
        ResponseEcho: {
            typeUrl: string;
            encode(message: _150.ResponseEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.ResponseEcho;
            fromJSON(object: any): _150.ResponseEcho;
            toJSON(message: _150.ResponseEcho): unknown;
            fromPartial(object: Partial<_150.ResponseEcho>): _150.ResponseEcho;
            fromSDK(object: _150.ResponseEchoSDKType): _150.ResponseEcho;
            toSDK(message: _150.ResponseEcho): _150.ResponseEchoSDKType;
            fromAmino(object: _150.ResponseEchoAmino): _150.ResponseEcho;
            toAmino(message: _150.ResponseEcho): _150.ResponseEchoAmino;
            fromAminoMsg(object: _150.ResponseEchoAminoMsg): _150.ResponseEcho;
            fromProtoMsg(message: _150.ResponseEchoProtoMsg): _150.ResponseEcho;
            toProto(message: _150.ResponseEcho): Uint8Array;
            toProtoMsg(message: _150.ResponseEcho): _150.ResponseEchoProtoMsg;
        };
        ResponseFlush: {
            typeUrl: string;
            encode(_: _150.ResponseFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.ResponseFlush;
            fromJSON(_: any): _150.ResponseFlush;
            toJSON(_: _150.ResponseFlush): unknown;
            fromPartial(_: Partial<_150.ResponseFlush>): _150.ResponseFlush;
            fromSDK(_: _150.ResponseFlushSDKType): _150.ResponseFlush;
            toSDK(_: _150.ResponseFlush): _150.ResponseFlushSDKType;
            fromAmino(_: _150.ResponseFlushAmino): _150.ResponseFlush;
            toAmino(_: _150.ResponseFlush): _150.ResponseFlushAmino;
            fromAminoMsg(object: _150.ResponseFlushAminoMsg): _150.ResponseFlush;
            fromProtoMsg(message: _150.ResponseFlushProtoMsg): _150.ResponseFlush;
            toProto(message: _150.ResponseFlush): Uint8Array;
            toProtoMsg(message: _150.ResponseFlush): _150.ResponseFlushProtoMsg;
        };
        ResponseInfo: {
            typeUrl: string;
            encode(message: _150.ResponseInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.ResponseInfo;
            fromJSON(object: any): _150.ResponseInfo;
            toJSON(message: _150.ResponseInfo): unknown;
            fromPartial(object: Partial<_150.ResponseInfo>): _150.ResponseInfo;
            fromSDK(object: _150.ResponseInfoSDKType): _150.ResponseInfo;
            toSDK(message: _150.ResponseInfo): _150.ResponseInfoSDKType;
            fromAmino(object: _150.ResponseInfoAmino): _150.ResponseInfo;
            toAmino(message: _150.ResponseInfo): _150.ResponseInfoAmino;
            fromAminoMsg(object: _150.ResponseInfoAminoMsg): _150.ResponseInfo;
            fromProtoMsg(message: _150.ResponseInfoProtoMsg): _150.ResponseInfo;
            toProto(message: _150.ResponseInfo): Uint8Array;
            toProtoMsg(message: _150.ResponseInfo): _150.ResponseInfoProtoMsg;
        };
        ResponseSetOption: {
            typeUrl: string;
            encode(message: _150.ResponseSetOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.ResponseSetOption;
            fromJSON(object: any): _150.ResponseSetOption;
            toJSON(message: _150.ResponseSetOption): unknown;
            fromPartial(object: Partial<_150.ResponseSetOption>): _150.ResponseSetOption;
            fromSDK(object: _150.ResponseSetOptionSDKType): _150.ResponseSetOption;
            toSDK(message: _150.ResponseSetOption): _150.ResponseSetOptionSDKType;
            fromAmino(object: _150.ResponseSetOptionAmino): _150.ResponseSetOption;
            toAmino(message: _150.ResponseSetOption): _150.ResponseSetOptionAmino;
            fromAminoMsg(object: _150.ResponseSetOptionAminoMsg): _150.ResponseSetOption;
            fromProtoMsg(message: _150.ResponseSetOptionProtoMsg): _150.ResponseSetOption;
            toProto(message: _150.ResponseSetOption): Uint8Array;
            toProtoMsg(message: _150.ResponseSetOption): _150.ResponseSetOptionProtoMsg;
        };
        ResponseInitChain: {
            typeUrl: string;
            encode(message: _150.ResponseInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.ResponseInitChain;
            fromJSON(object: any): _150.ResponseInitChain;
            toJSON(message: _150.ResponseInitChain): unknown;
            fromPartial(object: Partial<_150.ResponseInitChain>): _150.ResponseInitChain;
            fromSDK(object: _150.ResponseInitChainSDKType): _150.ResponseInitChain;
            toSDK(message: _150.ResponseInitChain): _150.ResponseInitChainSDKType;
            fromAmino(object: _150.ResponseInitChainAmino): _150.ResponseInitChain;
            toAmino(message: _150.ResponseInitChain): _150.ResponseInitChainAmino;
            fromAminoMsg(object: _150.ResponseInitChainAminoMsg): _150.ResponseInitChain;
            fromProtoMsg(message: _150.ResponseInitChainProtoMsg): _150.ResponseInitChain;
            toProto(message: _150.ResponseInitChain): Uint8Array;
            toProtoMsg(message: _150.ResponseInitChain): _150.ResponseInitChainProtoMsg;
        };
        ResponseQuery: {
            typeUrl: string;
            encode(message: _150.ResponseQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.ResponseQuery;
            fromJSON(object: any): _150.ResponseQuery;
            toJSON(message: _150.ResponseQuery): unknown;
            fromPartial(object: Partial<_150.ResponseQuery>): _150.ResponseQuery;
            fromSDK(object: _150.ResponseQuerySDKType): _150.ResponseQuery;
            toSDK(message: _150.ResponseQuery): _150.ResponseQuerySDKType;
            fromAmino(object: _150.ResponseQueryAmino): _150.ResponseQuery;
            toAmino(message: _150.ResponseQuery): _150.ResponseQueryAmino;
            fromAminoMsg(object: _150.ResponseQueryAminoMsg): _150.ResponseQuery;
            fromProtoMsg(message: _150.ResponseQueryProtoMsg): _150.ResponseQuery;
            toProto(message: _150.ResponseQuery): Uint8Array;
            toProtoMsg(message: _150.ResponseQuery): _150.ResponseQueryProtoMsg;
        };
        ResponseBeginBlock: {
            typeUrl: string;
            encode(message: _150.ResponseBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.ResponseBeginBlock;
            fromJSON(object: any): _150.ResponseBeginBlock;
            toJSON(message: _150.ResponseBeginBlock): unknown;
            fromPartial(object: Partial<_150.ResponseBeginBlock>): _150.ResponseBeginBlock;
            fromSDK(object: _150.ResponseBeginBlockSDKType): _150.ResponseBeginBlock;
            toSDK(message: _150.ResponseBeginBlock): _150.ResponseBeginBlockSDKType;
            fromAmino(object: _150.ResponseBeginBlockAmino): _150.ResponseBeginBlock;
            toAmino(message: _150.ResponseBeginBlock): _150.ResponseBeginBlockAmino;
            fromAminoMsg(object: _150.ResponseBeginBlockAminoMsg): _150.ResponseBeginBlock;
            fromProtoMsg(message: _150.ResponseBeginBlockProtoMsg): _150.ResponseBeginBlock;
            toProto(message: _150.ResponseBeginBlock): Uint8Array;
            toProtoMsg(message: _150.ResponseBeginBlock): _150.ResponseBeginBlockProtoMsg;
        };
        ResponseCheckTx: {
            typeUrl: string;
            encode(message: _150.ResponseCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.ResponseCheckTx;
            fromJSON(object: any): _150.ResponseCheckTx;
            toJSON(message: _150.ResponseCheckTx): unknown;
            fromPartial(object: Partial<_150.ResponseCheckTx>): _150.ResponseCheckTx;
            fromSDK(object: _150.ResponseCheckTxSDKType): _150.ResponseCheckTx;
            toSDK(message: _150.ResponseCheckTx): _150.ResponseCheckTxSDKType;
            fromAmino(object: _150.ResponseCheckTxAmino): _150.ResponseCheckTx;
            toAmino(message: _150.ResponseCheckTx): _150.ResponseCheckTxAmino;
            fromAminoMsg(object: _150.ResponseCheckTxAminoMsg): _150.ResponseCheckTx;
            fromProtoMsg(message: _150.ResponseCheckTxProtoMsg): _150.ResponseCheckTx;
            toProto(message: _150.ResponseCheckTx): Uint8Array;
            toProtoMsg(message: _150.ResponseCheckTx): _150.ResponseCheckTxProtoMsg;
        };
        ResponseDeliverTx: {
            typeUrl: string;
            encode(message: _150.ResponseDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.ResponseDeliverTx;
            fromJSON(object: any): _150.ResponseDeliverTx;
            toJSON(message: _150.ResponseDeliverTx): unknown;
            fromPartial(object: Partial<_150.ResponseDeliverTx>): _150.ResponseDeliverTx;
            fromSDK(object: _150.ResponseDeliverTxSDKType): _150.ResponseDeliverTx;
            toSDK(message: _150.ResponseDeliverTx): _150.ResponseDeliverTxSDKType;
            fromAmino(object: _150.ResponseDeliverTxAmino): _150.ResponseDeliverTx;
            toAmino(message: _150.ResponseDeliverTx): _150.ResponseDeliverTxAmino;
            fromAminoMsg(object: _150.ResponseDeliverTxAminoMsg): _150.ResponseDeliverTx;
            fromProtoMsg(message: _150.ResponseDeliverTxProtoMsg): _150.ResponseDeliverTx;
            toProto(message: _150.ResponseDeliverTx): Uint8Array;
            toProtoMsg(message: _150.ResponseDeliverTx): _150.ResponseDeliverTxProtoMsg;
        };
        ResponseEndBlock: {
            typeUrl: string;
            encode(message: _150.ResponseEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.ResponseEndBlock;
            fromJSON(object: any): _150.ResponseEndBlock;
            toJSON(message: _150.ResponseEndBlock): unknown;
            fromPartial(object: Partial<_150.ResponseEndBlock>): _150.ResponseEndBlock;
            fromSDK(object: _150.ResponseEndBlockSDKType): _150.ResponseEndBlock;
            toSDK(message: _150.ResponseEndBlock): _150.ResponseEndBlockSDKType;
            fromAmino(object: _150.ResponseEndBlockAmino): _150.ResponseEndBlock;
            toAmino(message: _150.ResponseEndBlock): _150.ResponseEndBlockAmino;
            fromAminoMsg(object: _150.ResponseEndBlockAminoMsg): _150.ResponseEndBlock;
            fromProtoMsg(message: _150.ResponseEndBlockProtoMsg): _150.ResponseEndBlock;
            toProto(message: _150.ResponseEndBlock): Uint8Array;
            toProtoMsg(message: _150.ResponseEndBlock): _150.ResponseEndBlockProtoMsg;
        };
        ResponseCommit: {
            typeUrl: string;
            encode(message: _150.ResponseCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.ResponseCommit;
            fromJSON(object: any): _150.ResponseCommit;
            toJSON(message: _150.ResponseCommit): unknown;
            fromPartial(object: Partial<_150.ResponseCommit>): _150.ResponseCommit;
            fromSDK(object: _150.ResponseCommitSDKType): _150.ResponseCommit;
            toSDK(message: _150.ResponseCommit): _150.ResponseCommitSDKType;
            fromAmino(object: _150.ResponseCommitAmino): _150.ResponseCommit;
            toAmino(message: _150.ResponseCommit): _150.ResponseCommitAmino;
            fromAminoMsg(object: _150.ResponseCommitAminoMsg): _150.ResponseCommit;
            fromProtoMsg(message: _150.ResponseCommitProtoMsg): _150.ResponseCommit;
            toProto(message: _150.ResponseCommit): Uint8Array;
            toProtoMsg(message: _150.ResponseCommit): _150.ResponseCommitProtoMsg;
        };
        ResponseListSnapshots: {
            typeUrl: string;
            encode(message: _150.ResponseListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.ResponseListSnapshots;
            fromJSON(object: any): _150.ResponseListSnapshots;
            toJSON(message: _150.ResponseListSnapshots): unknown;
            fromPartial(object: Partial<_150.ResponseListSnapshots>): _150.ResponseListSnapshots;
            fromSDK(object: _150.ResponseListSnapshotsSDKType): _150.ResponseListSnapshots;
            toSDK(message: _150.ResponseListSnapshots): _150.ResponseListSnapshotsSDKType;
            fromAmino(object: _150.ResponseListSnapshotsAmino): _150.ResponseListSnapshots;
            toAmino(message: _150.ResponseListSnapshots): _150.ResponseListSnapshotsAmino;
            fromAminoMsg(object: _150.ResponseListSnapshotsAminoMsg): _150.ResponseListSnapshots;
            fromProtoMsg(message: _150.ResponseListSnapshotsProtoMsg): _150.ResponseListSnapshots;
            toProto(message: _150.ResponseListSnapshots): Uint8Array;
            toProtoMsg(message: _150.ResponseListSnapshots): _150.ResponseListSnapshotsProtoMsg;
        };
        ResponseOfferSnapshot: {
            typeUrl: string;
            encode(message: _150.ResponseOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.ResponseOfferSnapshot;
            fromJSON(object: any): _150.ResponseOfferSnapshot;
            toJSON(message: _150.ResponseOfferSnapshot): unknown;
            fromPartial(object: Partial<_150.ResponseOfferSnapshot>): _150.ResponseOfferSnapshot;
            fromSDK(object: _150.ResponseOfferSnapshotSDKType): _150.ResponseOfferSnapshot;
            toSDK(message: _150.ResponseOfferSnapshot): _150.ResponseOfferSnapshotSDKType;
            fromAmino(object: _150.ResponseOfferSnapshotAmino): _150.ResponseOfferSnapshot;
            toAmino(message: _150.ResponseOfferSnapshot): _150.ResponseOfferSnapshotAmino;
            fromAminoMsg(object: _150.ResponseOfferSnapshotAminoMsg): _150.ResponseOfferSnapshot;
            fromProtoMsg(message: _150.ResponseOfferSnapshotProtoMsg): _150.ResponseOfferSnapshot;
            toProto(message: _150.ResponseOfferSnapshot): Uint8Array;
            toProtoMsg(message: _150.ResponseOfferSnapshot): _150.ResponseOfferSnapshotProtoMsg;
        };
        ResponseLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _150.ResponseLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.ResponseLoadSnapshotChunk;
            fromJSON(object: any): _150.ResponseLoadSnapshotChunk;
            toJSON(message: _150.ResponseLoadSnapshotChunk): unknown;
            fromPartial(object: Partial<_150.ResponseLoadSnapshotChunk>): _150.ResponseLoadSnapshotChunk;
            fromSDK(object: _150.ResponseLoadSnapshotChunkSDKType): _150.ResponseLoadSnapshotChunk;
            toSDK(message: _150.ResponseLoadSnapshotChunk): _150.ResponseLoadSnapshotChunkSDKType;
            fromAmino(object: _150.ResponseLoadSnapshotChunkAmino): _150.ResponseLoadSnapshotChunk;
            toAmino(message: _150.ResponseLoadSnapshotChunk): _150.ResponseLoadSnapshotChunkAmino;
            fromAminoMsg(object: _150.ResponseLoadSnapshotChunkAminoMsg): _150.ResponseLoadSnapshotChunk;
            fromProtoMsg(message: _150.ResponseLoadSnapshotChunkProtoMsg): _150.ResponseLoadSnapshotChunk;
            toProto(message: _150.ResponseLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _150.ResponseLoadSnapshotChunk): _150.ResponseLoadSnapshotChunkProtoMsg;
        };
        ResponseApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _150.ResponseApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.ResponseApplySnapshotChunk;
            fromJSON(object: any): _150.ResponseApplySnapshotChunk;
            toJSON(message: _150.ResponseApplySnapshotChunk): unknown;
            fromPartial(object: Partial<_150.ResponseApplySnapshotChunk>): _150.ResponseApplySnapshotChunk;
            fromSDK(object: _150.ResponseApplySnapshotChunkSDKType): _150.ResponseApplySnapshotChunk;
            toSDK(message: _150.ResponseApplySnapshotChunk): _150.ResponseApplySnapshotChunkSDKType;
            fromAmino(object: _150.ResponseApplySnapshotChunkAmino): _150.ResponseApplySnapshotChunk;
            toAmino(message: _150.ResponseApplySnapshotChunk): _150.ResponseApplySnapshotChunkAmino;
            fromAminoMsg(object: _150.ResponseApplySnapshotChunkAminoMsg): _150.ResponseApplySnapshotChunk;
            fromProtoMsg(message: _150.ResponseApplySnapshotChunkProtoMsg): _150.ResponseApplySnapshotChunk;
            toProto(message: _150.ResponseApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _150.ResponseApplySnapshotChunk): _150.ResponseApplySnapshotChunkProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            encode(message: _150.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.ConsensusParams;
            fromJSON(object: any): _150.ConsensusParams;
            toJSON(message: _150.ConsensusParams): unknown;
            fromPartial(object: Partial<_150.ConsensusParams>): _150.ConsensusParams;
            fromSDK(object: _150.ConsensusParamsSDKType): _150.ConsensusParams;
            toSDK(message: _150.ConsensusParams): _150.ConsensusParamsSDKType;
            fromAmino(object: _150.ConsensusParamsAmino): _150.ConsensusParams;
            toAmino(message: _150.ConsensusParams): _150.ConsensusParamsAmino;
            fromAminoMsg(object: _150.ConsensusParamsAminoMsg): _150.ConsensusParams;
            fromProtoMsg(message: _150.ConsensusParamsProtoMsg): _150.ConsensusParams;
            toProto(message: _150.ConsensusParams): Uint8Array;
            toProtoMsg(message: _150.ConsensusParams): _150.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            encode(message: _150.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.BlockParams;
            fromJSON(object: any): _150.BlockParams;
            toJSON(message: _150.BlockParams): unknown;
            fromPartial(object: Partial<_150.BlockParams>): _150.BlockParams;
            fromSDK(object: _150.BlockParamsSDKType): _150.BlockParams;
            toSDK(message: _150.BlockParams): _150.BlockParamsSDKType;
            fromAmino(object: _150.BlockParamsAmino): _150.BlockParams;
            toAmino(message: _150.BlockParams): _150.BlockParamsAmino;
            fromAminoMsg(object: _150.BlockParamsAminoMsg): _150.BlockParams;
            fromProtoMsg(message: _150.BlockParamsProtoMsg): _150.BlockParams;
            toProto(message: _150.BlockParams): Uint8Array;
            toProtoMsg(message: _150.BlockParams): _150.BlockParamsProtoMsg;
        };
        LastCommitInfo: {
            typeUrl: string;
            encode(message: _150.LastCommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.LastCommitInfo;
            fromJSON(object: any): _150.LastCommitInfo;
            toJSON(message: _150.LastCommitInfo): unknown;
            fromPartial(object: Partial<_150.LastCommitInfo>): _150.LastCommitInfo;
            fromSDK(object: _150.LastCommitInfoSDKType): _150.LastCommitInfo;
            toSDK(message: _150.LastCommitInfo): _150.LastCommitInfoSDKType;
            fromAmino(object: _150.LastCommitInfoAmino): _150.LastCommitInfo;
            toAmino(message: _150.LastCommitInfo): _150.LastCommitInfoAmino;
            fromAminoMsg(object: _150.LastCommitInfoAminoMsg): _150.LastCommitInfo;
            fromProtoMsg(message: _150.LastCommitInfoProtoMsg): _150.LastCommitInfo;
            toProto(message: _150.LastCommitInfo): Uint8Array;
            toProtoMsg(message: _150.LastCommitInfo): _150.LastCommitInfoProtoMsg;
        };
        Event: {
            typeUrl: string;
            encode(message: _150.Event, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.Event;
            fromJSON(object: any): _150.Event;
            toJSON(message: _150.Event): unknown;
            fromPartial(object: Partial<_150.Event>): _150.Event;
            fromSDK(object: _150.EventSDKType): _150.Event;
            toSDK(message: _150.Event): _150.EventSDKType;
            fromAmino(object: _150.EventAmino): _150.Event;
            toAmino(message: _150.Event): _150.EventAmino;
            fromAminoMsg(object: _150.EventAminoMsg): _150.Event;
            fromProtoMsg(message: _150.EventProtoMsg): _150.Event;
            toProto(message: _150.Event): Uint8Array;
            toProtoMsg(message: _150.Event): _150.EventProtoMsg;
        };
        EventAttribute: {
            typeUrl: string;
            encode(message: _150.EventAttribute, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.EventAttribute;
            fromJSON(object: any): _150.EventAttribute;
            toJSON(message: _150.EventAttribute): unknown;
            fromPartial(object: Partial<_150.EventAttribute>): _150.EventAttribute;
            fromSDK(object: _150.EventAttributeSDKType): _150.EventAttribute;
            toSDK(message: _150.EventAttribute): _150.EventAttributeSDKType;
            fromAmino(object: _150.EventAttributeAmino): _150.EventAttribute;
            toAmino(message: _150.EventAttribute): _150.EventAttributeAmino;
            fromAminoMsg(object: _150.EventAttributeAminoMsg): _150.EventAttribute;
            fromProtoMsg(message: _150.EventAttributeProtoMsg): _150.EventAttribute;
            toProto(message: _150.EventAttribute): Uint8Array;
            toProtoMsg(message: _150.EventAttribute): _150.EventAttributeProtoMsg;
        };
        TxResult: {
            typeUrl: string;
            encode(message: _150.TxResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.TxResult;
            fromJSON(object: any): _150.TxResult;
            toJSON(message: _150.TxResult): unknown;
            fromPartial(object: Partial<_150.TxResult>): _150.TxResult;
            fromSDK(object: _150.TxResultSDKType): _150.TxResult;
            toSDK(message: _150.TxResult): _150.TxResultSDKType;
            fromAmino(object: _150.TxResultAmino): _150.TxResult;
            toAmino(message: _150.TxResult): _150.TxResultAmino;
            fromAminoMsg(object: _150.TxResultAminoMsg): _150.TxResult;
            fromProtoMsg(message: _150.TxResultProtoMsg): _150.TxResult;
            toProto(message: _150.TxResult): Uint8Array;
            toProtoMsg(message: _150.TxResult): _150.TxResultProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _150.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.Validator;
            fromJSON(object: any): _150.Validator;
            toJSON(message: _150.Validator): unknown;
            fromPartial(object: Partial<_150.Validator>): _150.Validator;
            fromSDK(object: _150.ValidatorSDKType): _150.Validator;
            toSDK(message: _150.Validator): _150.ValidatorSDKType;
            fromAmino(object: _150.ValidatorAmino): _150.Validator;
            toAmino(message: _150.Validator): _150.ValidatorAmino;
            fromAminoMsg(object: _150.ValidatorAminoMsg): _150.Validator;
            fromProtoMsg(message: _150.ValidatorProtoMsg): _150.Validator;
            toProto(message: _150.Validator): Uint8Array;
            toProtoMsg(message: _150.Validator): _150.ValidatorProtoMsg;
        };
        ValidatorUpdate: {
            typeUrl: string;
            encode(message: _150.ValidatorUpdate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.ValidatorUpdate;
            fromJSON(object: any): _150.ValidatorUpdate;
            toJSON(message: _150.ValidatorUpdate): unknown;
            fromPartial(object: Partial<_150.ValidatorUpdate>): _150.ValidatorUpdate;
            fromSDK(object: _150.ValidatorUpdateSDKType): _150.ValidatorUpdate;
            toSDK(message: _150.ValidatorUpdate): _150.ValidatorUpdateSDKType;
            fromAmino(object: _150.ValidatorUpdateAmino): _150.ValidatorUpdate;
            toAmino(message: _150.ValidatorUpdate): _150.ValidatorUpdateAmino;
            fromAminoMsg(object: _150.ValidatorUpdateAminoMsg): _150.ValidatorUpdate;
            fromProtoMsg(message: _150.ValidatorUpdateProtoMsg): _150.ValidatorUpdate;
            toProto(message: _150.ValidatorUpdate): Uint8Array;
            toProtoMsg(message: _150.ValidatorUpdate): _150.ValidatorUpdateProtoMsg;
        };
        VoteInfo: {
            typeUrl: string;
            encode(message: _150.VoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.VoteInfo;
            fromJSON(object: any): _150.VoteInfo;
            toJSON(message: _150.VoteInfo): unknown;
            fromPartial(object: Partial<_150.VoteInfo>): _150.VoteInfo;
            fromSDK(object: _150.VoteInfoSDKType): _150.VoteInfo;
            toSDK(message: _150.VoteInfo): _150.VoteInfoSDKType;
            fromAmino(object: _150.VoteInfoAmino): _150.VoteInfo;
            toAmino(message: _150.VoteInfo): _150.VoteInfoAmino;
            fromAminoMsg(object: _150.VoteInfoAminoMsg): _150.VoteInfo;
            fromProtoMsg(message: _150.VoteInfoProtoMsg): _150.VoteInfo;
            toProto(message: _150.VoteInfo): Uint8Array;
            toProtoMsg(message: _150.VoteInfo): _150.VoteInfoProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            encode(message: _150.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.Evidence;
            fromJSON(object: any): _150.Evidence;
            toJSON(message: _150.Evidence): unknown;
            fromPartial(object: Partial<_150.Evidence>): _150.Evidence;
            fromSDK(object: _150.EvidenceSDKType): _150.Evidence;
            toSDK(message: _150.Evidence): _150.EvidenceSDKType;
            fromAmino(object: _150.EvidenceAmino): _150.Evidence;
            toAmino(message: _150.Evidence): _150.EvidenceAmino;
            fromAminoMsg(object: _150.EvidenceAminoMsg): _150.Evidence;
            fromProtoMsg(message: _150.EvidenceProtoMsg): _150.Evidence;
            toProto(message: _150.Evidence): Uint8Array;
            toProtoMsg(message: _150.Evidence): _150.EvidenceProtoMsg;
        };
        Snapshot: {
            typeUrl: string;
            encode(message: _150.Snapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _150.Snapshot;
            fromJSON(object: any): _150.Snapshot;
            toJSON(message: _150.Snapshot): unknown;
            fromPartial(object: Partial<_150.Snapshot>): _150.Snapshot;
            fromSDK(object: _150.SnapshotSDKType): _150.Snapshot;
            toSDK(message: _150.Snapshot): _150.SnapshotSDKType;
            fromAmino(object: _150.SnapshotAmino): _150.Snapshot;
            toAmino(message: _150.Snapshot): _150.SnapshotAmino;
            fromAminoMsg(object: _150.SnapshotAminoMsg): _150.Snapshot;
            fromProtoMsg(message: _150.SnapshotProtoMsg): _150.Snapshot;
            toProto(message: _150.Snapshot): Uint8Array;
            toProtoMsg(message: _150.Snapshot): _150.SnapshotProtoMsg;
        };
    };
    const crypto: {
        Proof: {
            typeUrl: string;
            encode(message: _152.Proof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _152.Proof;
            fromJSON(object: any): _152.Proof;
            toJSON(message: _152.Proof): unknown;
            fromPartial(object: Partial<_152.Proof>): _152.Proof;
            fromSDK(object: _152.ProofSDKType): _152.Proof;
            toSDK(message: _152.Proof): _152.ProofSDKType;
            fromAmino(object: _152.ProofAmino): _152.Proof;
            toAmino(message: _152.Proof): _152.ProofAmino;
            fromAminoMsg(object: _152.ProofAminoMsg): _152.Proof;
            fromProtoMsg(message: _152.ProofProtoMsg): _152.Proof;
            toProto(message: _152.Proof): Uint8Array;
            toProtoMsg(message: _152.Proof): _152.ProofProtoMsg;
        };
        ValueOp: {
            typeUrl: string;
            encode(message: _152.ValueOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _152.ValueOp;
            fromJSON(object: any): _152.ValueOp;
            toJSON(message: _152.ValueOp): unknown;
            fromPartial(object: Partial<_152.ValueOp>): _152.ValueOp;
            fromSDK(object: _152.ValueOpSDKType): _152.ValueOp;
            toSDK(message: _152.ValueOp): _152.ValueOpSDKType;
            fromAmino(object: _152.ValueOpAmino): _152.ValueOp;
            toAmino(message: _152.ValueOp): _152.ValueOpAmino;
            fromAminoMsg(object: _152.ValueOpAminoMsg): _152.ValueOp;
            fromProtoMsg(message: _152.ValueOpProtoMsg): _152.ValueOp;
            toProto(message: _152.ValueOp): Uint8Array;
            toProtoMsg(message: _152.ValueOp): _152.ValueOpProtoMsg;
        };
        DominoOp: {
            typeUrl: string;
            encode(message: _152.DominoOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _152.DominoOp;
            fromJSON(object: any): _152.DominoOp;
            toJSON(message: _152.DominoOp): unknown;
            fromPartial(object: Partial<_152.DominoOp>): _152.DominoOp;
            fromSDK(object: _152.DominoOpSDKType): _152.DominoOp;
            toSDK(message: _152.DominoOp): _152.DominoOpSDKType;
            fromAmino(object: _152.DominoOpAmino): _152.DominoOp;
            toAmino(message: _152.DominoOp): _152.DominoOpAmino;
            fromAminoMsg(object: _152.DominoOpAminoMsg): _152.DominoOp;
            fromProtoMsg(message: _152.DominoOpProtoMsg): _152.DominoOp;
            toProto(message: _152.DominoOp): Uint8Array;
            toProtoMsg(message: _152.DominoOp): _152.DominoOpProtoMsg;
        };
        ProofOp: {
            typeUrl: string;
            encode(message: _152.ProofOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _152.ProofOp;
            fromJSON(object: any): _152.ProofOp;
            toJSON(message: _152.ProofOp): unknown;
            fromPartial(object: Partial<_152.ProofOp>): _152.ProofOp;
            fromSDK(object: _152.ProofOpSDKType): _152.ProofOp;
            toSDK(message: _152.ProofOp): _152.ProofOpSDKType;
            fromAmino(object: _152.ProofOpAmino): _152.ProofOp;
            toAmino(message: _152.ProofOp): _152.ProofOpAmino;
            fromAminoMsg(object: _152.ProofOpAminoMsg): _152.ProofOp;
            fromProtoMsg(message: _152.ProofOpProtoMsg): _152.ProofOp;
            toProto(message: _152.ProofOp): Uint8Array;
            toProtoMsg(message: _152.ProofOp): _152.ProofOpProtoMsg;
        };
        ProofOps: {
            typeUrl: string;
            encode(message: _152.ProofOps, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _152.ProofOps;
            fromJSON(object: any): _152.ProofOps;
            toJSON(message: _152.ProofOps): unknown;
            fromPartial(object: Partial<_152.ProofOps>): _152.ProofOps;
            fromSDK(object: _152.ProofOpsSDKType): _152.ProofOps;
            toSDK(message: _152.ProofOps): _152.ProofOpsSDKType;
            fromAmino(object: _152.ProofOpsAmino): _152.ProofOps;
            toAmino(message: _152.ProofOps): _152.ProofOpsAmino;
            fromAminoMsg(object: _152.ProofOpsAminoMsg): _152.ProofOps;
            fromProtoMsg(message: _152.ProofOpsProtoMsg): _152.ProofOps;
            toProto(message: _152.ProofOps): Uint8Array;
            toProtoMsg(message: _152.ProofOps): _152.ProofOpsProtoMsg;
        };
        PublicKey: {
            typeUrl: string;
            encode(message: _151.PublicKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _151.PublicKey;
            fromJSON(object: any): _151.PublicKey;
            toJSON(message: _151.PublicKey): unknown;
            fromPartial(object: Partial<_151.PublicKey>): _151.PublicKey;
            fromSDK(object: _151.PublicKeySDKType): _151.PublicKey;
            toSDK(message: _151.PublicKey): _151.PublicKeySDKType;
            fromAmino(object: _151.PublicKeyAmino): _151.PublicKey;
            toAmino(message: _151.PublicKey): _151.PublicKeyAmino;
            fromAminoMsg(object: _151.PublicKeyAminoMsg): _151.PublicKey;
            fromProtoMsg(message: _151.PublicKeyProtoMsg): _151.PublicKey;
            toProto(message: _151.PublicKey): Uint8Array;
            toProtoMsg(message: _151.PublicKey): _151.PublicKeyProtoMsg;
        };
    };
    namespace libs {
        const bits: {
            BitArray: {
                typeUrl: string;
                encode(message: _153.BitArray, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _153.BitArray;
                fromJSON(object: any): _153.BitArray;
                toJSON(message: _153.BitArray): unknown;
                fromPartial(object: Partial<_153.BitArray>): _153.BitArray;
                fromSDK(object: _153.BitArraySDKType): _153.BitArray;
                toSDK(message: _153.BitArray): _153.BitArraySDKType;
                fromAmino(object: _153.BitArrayAmino): _153.BitArray;
                toAmino(message: _153.BitArray): _153.BitArrayAmino;
                fromAminoMsg(object: _153.BitArrayAminoMsg): _153.BitArray;
                fromProtoMsg(message: _153.BitArrayProtoMsg): _153.BitArray;
                toProto(message: _153.BitArray): Uint8Array;
                toProtoMsg(message: _153.BitArray): _153.BitArrayProtoMsg;
            };
        };
    }
    const p2p: {
        ProtocolVersion: {
            typeUrl: string;
            encode(message: _154.ProtocolVersion, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _154.ProtocolVersion;
            fromJSON(object: any): _154.ProtocolVersion;
            toJSON(message: _154.ProtocolVersion): unknown;
            fromPartial(object: Partial<_154.ProtocolVersion>): _154.ProtocolVersion;
            fromSDK(object: _154.ProtocolVersionSDKType): _154.ProtocolVersion;
            toSDK(message: _154.ProtocolVersion): _154.ProtocolVersionSDKType;
            fromAmino(object: _154.ProtocolVersionAmino): _154.ProtocolVersion;
            toAmino(message: _154.ProtocolVersion): _154.ProtocolVersionAmino;
            fromAminoMsg(object: _154.ProtocolVersionAminoMsg): _154.ProtocolVersion;
            fromProtoMsg(message: _154.ProtocolVersionProtoMsg): _154.ProtocolVersion;
            toProto(message: _154.ProtocolVersion): Uint8Array;
            toProtoMsg(message: _154.ProtocolVersion): _154.ProtocolVersionProtoMsg;
        };
        NodeInfo: {
            typeUrl: string;
            encode(message: _154.NodeInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _154.NodeInfo;
            fromJSON(object: any): _154.NodeInfo;
            toJSON(message: _154.NodeInfo): unknown;
            fromPartial(object: Partial<_154.NodeInfo>): _154.NodeInfo;
            fromSDK(object: _154.NodeInfoSDKType): _154.NodeInfo;
            toSDK(message: _154.NodeInfo): _154.NodeInfoSDKType;
            fromAmino(object: _154.NodeInfoAmino): _154.NodeInfo;
            toAmino(message: _154.NodeInfo): _154.NodeInfoAmino;
            fromAminoMsg(object: _154.NodeInfoAminoMsg): _154.NodeInfo;
            fromProtoMsg(message: _154.NodeInfoProtoMsg): _154.NodeInfo;
            toProto(message: _154.NodeInfo): Uint8Array;
            toProtoMsg(message: _154.NodeInfo): _154.NodeInfoProtoMsg;
        };
        NodeInfoOther: {
            typeUrl: string;
            encode(message: _154.NodeInfoOther, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _154.NodeInfoOther;
            fromJSON(object: any): _154.NodeInfoOther;
            toJSON(message: _154.NodeInfoOther): unknown;
            fromPartial(object: Partial<_154.NodeInfoOther>): _154.NodeInfoOther;
            fromSDK(object: _154.NodeInfoOtherSDKType): _154.NodeInfoOther;
            toSDK(message: _154.NodeInfoOther): _154.NodeInfoOtherSDKType;
            fromAmino(object: _154.NodeInfoOtherAmino): _154.NodeInfoOther;
            toAmino(message: _154.NodeInfoOther): _154.NodeInfoOtherAmino;
            fromAminoMsg(object: _154.NodeInfoOtherAminoMsg): _154.NodeInfoOther;
            fromProtoMsg(message: _154.NodeInfoOtherProtoMsg): _154.NodeInfoOther;
            toProto(message: _154.NodeInfoOther): Uint8Array;
            toProtoMsg(message: _154.NodeInfoOther): _154.NodeInfoOtherProtoMsg;
        };
        PeerInfo: {
            typeUrl: string;
            encode(message: _154.PeerInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _154.PeerInfo;
            fromJSON(object: any): _154.PeerInfo;
            toJSON(message: _154.PeerInfo): unknown;
            fromPartial(object: Partial<_154.PeerInfo>): _154.PeerInfo;
            fromSDK(object: _154.PeerInfoSDKType): _154.PeerInfo;
            toSDK(message: _154.PeerInfo): _154.PeerInfoSDKType;
            fromAmino(object: _154.PeerInfoAmino): _154.PeerInfo;
            toAmino(message: _154.PeerInfo): _154.PeerInfoAmino;
            fromAminoMsg(object: _154.PeerInfoAminoMsg): _154.PeerInfo;
            fromProtoMsg(message: _154.PeerInfoProtoMsg): _154.PeerInfo;
            toProto(message: _154.PeerInfo): Uint8Array;
            toProtoMsg(message: _154.PeerInfo): _154.PeerInfoProtoMsg;
        };
        PeerAddressInfo: {
            typeUrl: string;
            encode(message: _154.PeerAddressInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _154.PeerAddressInfo;
            fromJSON(object: any): _154.PeerAddressInfo;
            toJSON(message: _154.PeerAddressInfo): unknown;
            fromPartial(object: Partial<_154.PeerAddressInfo>): _154.PeerAddressInfo;
            fromSDK(object: _154.PeerAddressInfoSDKType): _154.PeerAddressInfo;
            toSDK(message: _154.PeerAddressInfo): _154.PeerAddressInfoSDKType;
            fromAmino(object: _154.PeerAddressInfoAmino): _154.PeerAddressInfo;
            toAmino(message: _154.PeerAddressInfo): _154.PeerAddressInfoAmino;
            fromAminoMsg(object: _154.PeerAddressInfoAminoMsg): _154.PeerAddressInfo;
            fromProtoMsg(message: _154.PeerAddressInfoProtoMsg): _154.PeerAddressInfo;
            toProto(message: _154.PeerAddressInfo): Uint8Array;
            toProtoMsg(message: _154.PeerAddressInfo): _154.PeerAddressInfoProtoMsg;
        };
    };
    const types: {
        ValidatorSet: {
            typeUrl: string;
            encode(message: _159.ValidatorSet, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _159.ValidatorSet;
            fromJSON(object: any): _159.ValidatorSet;
            toJSON(message: _159.ValidatorSet): unknown;
            fromPartial(object: Partial<_159.ValidatorSet>): _159.ValidatorSet;
            fromSDK(object: _159.ValidatorSetSDKType): _159.ValidatorSet;
            toSDK(message: _159.ValidatorSet): _159.ValidatorSetSDKType;
            fromAmino(object: _159.ValidatorSetAmino): _159.ValidatorSet;
            toAmino(message: _159.ValidatorSet): _159.ValidatorSetAmino;
            fromAminoMsg(object: _159.ValidatorSetAminoMsg): _159.ValidatorSet;
            fromProtoMsg(message: _159.ValidatorSetProtoMsg): _159.ValidatorSet;
            toProto(message: _159.ValidatorSet): Uint8Array;
            toProtoMsg(message: _159.ValidatorSet): _159.ValidatorSetProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _159.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _159.Validator;
            fromJSON(object: any): _159.Validator;
            toJSON(message: _159.Validator): unknown;
            fromPartial(object: Partial<_159.Validator>): _159.Validator;
            fromSDK(object: _159.ValidatorSDKType): _159.Validator;
            toSDK(message: _159.Validator): _159.ValidatorSDKType;
            fromAmino(object: _159.ValidatorAmino): _159.Validator;
            toAmino(message: _159.Validator): _159.ValidatorAmino;
            fromAminoMsg(object: _159.ValidatorAminoMsg): _159.Validator;
            fromProtoMsg(message: _159.ValidatorProtoMsg): _159.Validator;
            toProto(message: _159.Validator): Uint8Array;
            toProtoMsg(message: _159.Validator): _159.ValidatorProtoMsg;
        };
        SimpleValidator: {
            typeUrl: string;
            encode(message: _159.SimpleValidator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _159.SimpleValidator;
            fromJSON(object: any): _159.SimpleValidator;
            toJSON(message: _159.SimpleValidator): unknown;
            fromPartial(object: Partial<_159.SimpleValidator>): _159.SimpleValidator;
            fromSDK(object: _159.SimpleValidatorSDKType): _159.SimpleValidator;
            toSDK(message: _159.SimpleValidator): _159.SimpleValidatorSDKType;
            fromAmino(object: _159.SimpleValidatorAmino): _159.SimpleValidator;
            toAmino(message: _159.SimpleValidator): _159.SimpleValidatorAmino;
            fromAminoMsg(object: _159.SimpleValidatorAminoMsg): _159.SimpleValidator;
            fromProtoMsg(message: _159.SimpleValidatorProtoMsg): _159.SimpleValidator;
            toProto(message: _159.SimpleValidator): Uint8Array;
            toProtoMsg(message: _159.SimpleValidator): _159.SimpleValidatorProtoMsg;
        };
        blockIDFlagFromJSON(object: any): _158.BlockIDFlag;
        blockIDFlagToJSON(object: _158.BlockIDFlag): string;
        signedMsgTypeFromJSON(object: any): _158.SignedMsgType;
        signedMsgTypeToJSON(object: _158.SignedMsgType): string;
        BlockIDFlag: typeof _158.BlockIDFlag;
        BlockIDFlagSDKType: typeof _158.BlockIDFlag;
        BlockIDFlagAmino: typeof _158.BlockIDFlag;
        SignedMsgType: typeof _158.SignedMsgType;
        SignedMsgTypeSDKType: typeof _158.SignedMsgType;
        SignedMsgTypeAmino: typeof _158.SignedMsgType;
        PartSetHeader: {
            typeUrl: string;
            encode(message: _158.PartSetHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _158.PartSetHeader;
            fromJSON(object: any): _158.PartSetHeader;
            toJSON(message: _158.PartSetHeader): unknown;
            fromPartial(object: Partial<_158.PartSetHeader>): _158.PartSetHeader;
            fromSDK(object: _158.PartSetHeaderSDKType): _158.PartSetHeader;
            toSDK(message: _158.PartSetHeader): _158.PartSetHeaderSDKType;
            fromAmino(object: _158.PartSetHeaderAmino): _158.PartSetHeader;
            toAmino(message: _158.PartSetHeader): _158.PartSetHeaderAmino;
            fromAminoMsg(object: _158.PartSetHeaderAminoMsg): _158.PartSetHeader;
            fromProtoMsg(message: _158.PartSetHeaderProtoMsg): _158.PartSetHeader;
            toProto(message: _158.PartSetHeader): Uint8Array;
            toProtoMsg(message: _158.PartSetHeader): _158.PartSetHeaderProtoMsg;
        };
        Part: {
            typeUrl: string;
            encode(message: _158.Part, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _158.Part;
            fromJSON(object: any): _158.Part;
            toJSON(message: _158.Part): unknown;
            fromPartial(object: Partial<_158.Part>): _158.Part;
            fromSDK(object: _158.PartSDKType): _158.Part;
            toSDK(message: _158.Part): _158.PartSDKType;
            fromAmino(object: _158.PartAmino): _158.Part;
            toAmino(message: _158.Part): _158.PartAmino;
            fromAminoMsg(object: _158.PartAminoMsg): _158.Part;
            fromProtoMsg(message: _158.PartProtoMsg): _158.Part;
            toProto(message: _158.Part): Uint8Array;
            toProtoMsg(message: _158.Part): _158.PartProtoMsg;
        };
        BlockID: {
            typeUrl: string;
            encode(message: _158.BlockID, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _158.BlockID;
            fromJSON(object: any): _158.BlockID;
            toJSON(message: _158.BlockID): unknown;
            fromPartial(object: Partial<_158.BlockID>): _158.BlockID;
            fromSDK(object: _158.BlockIDSDKType): _158.BlockID;
            toSDK(message: _158.BlockID): _158.BlockIDSDKType;
            fromAmino(object: _158.BlockIDAmino): _158.BlockID;
            toAmino(message: _158.BlockID): _158.BlockIDAmino;
            fromAminoMsg(object: _158.BlockIDAminoMsg): _158.BlockID;
            fromProtoMsg(message: _158.BlockIDProtoMsg): _158.BlockID;
            toProto(message: _158.BlockID): Uint8Array;
            toProtoMsg(message: _158.BlockID): _158.BlockIDProtoMsg;
        };
        Header: {
            typeUrl: string;
            encode(message: _158.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _158.Header;
            fromJSON(object: any): _158.Header;
            toJSON(message: _158.Header): unknown;
            fromPartial(object: Partial<_158.Header>): _158.Header;
            fromSDK(object: _158.HeaderSDKType): _158.Header;
            toSDK(message: _158.Header): _158.HeaderSDKType;
            fromAmino(object: _158.HeaderAmino): _158.Header;
            toAmino(message: _158.Header): _158.HeaderAmino;
            fromAminoMsg(object: _158.HeaderAminoMsg): _158.Header;
            fromProtoMsg(message: _158.HeaderProtoMsg): _158.Header;
            toProto(message: _158.Header): Uint8Array;
            toProtoMsg(message: _158.Header): _158.HeaderProtoMsg;
        };
        Data: {
            typeUrl: string;
            encode(message: _158.Data, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _158.Data;
            fromJSON(object: any): _158.Data;
            toJSON(message: _158.Data): unknown;
            fromPartial(object: Partial<_158.Data>): _158.Data;
            fromSDK(object: _158.DataSDKType): _158.Data;
            toSDK(message: _158.Data): _158.DataSDKType;
            fromAmino(object: _158.DataAmino): _158.Data;
            toAmino(message: _158.Data): _158.DataAmino;
            fromAminoMsg(object: _158.DataAminoMsg): _158.Data;
            fromProtoMsg(message: _158.DataProtoMsg): _158.Data;
            toProto(message: _158.Data): Uint8Array;
            toProtoMsg(message: _158.Data): _158.DataProtoMsg;
        };
        Vote: {
            typeUrl: string;
            encode(message: _158.Vote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _158.Vote;
            fromJSON(object: any): _158.Vote;
            toJSON(message: _158.Vote): unknown;
            fromPartial(object: Partial<_158.Vote>): _158.Vote;
            fromSDK(object: _158.VoteSDKType): _158.Vote;
            toSDK(message: _158.Vote): _158.VoteSDKType;
            fromAmino(object: _158.VoteAmino): _158.Vote;
            toAmino(message: _158.Vote): _158.VoteAmino;
            fromAminoMsg(object: _158.VoteAminoMsg): _158.Vote;
            fromProtoMsg(message: _158.VoteProtoMsg): _158.Vote;
            toProto(message: _158.Vote): Uint8Array;
            toProtoMsg(message: _158.Vote): _158.VoteProtoMsg;
        };
        Commit: {
            typeUrl: string;
            encode(message: _158.Commit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _158.Commit;
            fromJSON(object: any): _158.Commit;
            toJSON(message: _158.Commit): unknown;
            fromPartial(object: Partial<_158.Commit>): _158.Commit;
            fromSDK(object: _158.CommitSDKType): _158.Commit;
            toSDK(message: _158.Commit): _158.CommitSDKType;
            fromAmino(object: _158.CommitAmino): _158.Commit;
            toAmino(message: _158.Commit): _158.CommitAmino;
            fromAminoMsg(object: _158.CommitAminoMsg): _158.Commit;
            fromProtoMsg(message: _158.CommitProtoMsg): _158.Commit;
            toProto(message: _158.Commit): Uint8Array;
            toProtoMsg(message: _158.Commit): _158.CommitProtoMsg;
        };
        CommitSig: {
            typeUrl: string;
            encode(message: _158.CommitSig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _158.CommitSig;
            fromJSON(object: any): _158.CommitSig;
            toJSON(message: _158.CommitSig): unknown;
            fromPartial(object: Partial<_158.CommitSig>): _158.CommitSig;
            fromSDK(object: _158.CommitSigSDKType): _158.CommitSig;
            toSDK(message: _158.CommitSig): _158.CommitSigSDKType;
            fromAmino(object: _158.CommitSigAmino): _158.CommitSig;
            toAmino(message: _158.CommitSig): _158.CommitSigAmino;
            fromAminoMsg(object: _158.CommitSigAminoMsg): _158.CommitSig;
            fromProtoMsg(message: _158.CommitSigProtoMsg): _158.CommitSig;
            toProto(message: _158.CommitSig): Uint8Array;
            toProtoMsg(message: _158.CommitSig): _158.CommitSigProtoMsg;
        };
        Proposal: {
            typeUrl: string;
            encode(message: _158.Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _158.Proposal;
            fromJSON(object: any): _158.Proposal;
            toJSON(message: _158.Proposal): unknown;
            fromPartial(object: Partial<_158.Proposal>): _158.Proposal;
            fromSDK(object: _158.ProposalSDKType): _158.Proposal;
            toSDK(message: _158.Proposal): _158.ProposalSDKType;
            fromAmino(object: _158.ProposalAmino): _158.Proposal;
            toAmino(message: _158.Proposal): _158.ProposalAmino;
            fromAminoMsg(object: _158.ProposalAminoMsg): _158.Proposal;
            fromProtoMsg(message: _158.ProposalProtoMsg): _158.Proposal;
            toProto(message: _158.Proposal): Uint8Array;
            toProtoMsg(message: _158.Proposal): _158.ProposalProtoMsg;
        };
        SignedHeader: {
            typeUrl: string;
            encode(message: _158.SignedHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _158.SignedHeader;
            fromJSON(object: any): _158.SignedHeader;
            toJSON(message: _158.SignedHeader): unknown;
            fromPartial(object: Partial<_158.SignedHeader>): _158.SignedHeader;
            fromSDK(object: _158.SignedHeaderSDKType): _158.SignedHeader;
            toSDK(message: _158.SignedHeader): _158.SignedHeaderSDKType;
            fromAmino(object: _158.SignedHeaderAmino): _158.SignedHeader;
            toAmino(message: _158.SignedHeader): _158.SignedHeaderAmino;
            fromAminoMsg(object: _158.SignedHeaderAminoMsg): _158.SignedHeader;
            fromProtoMsg(message: _158.SignedHeaderProtoMsg): _158.SignedHeader;
            toProto(message: _158.SignedHeader): Uint8Array;
            toProtoMsg(message: _158.SignedHeader): _158.SignedHeaderProtoMsg;
        };
        LightBlock: {
            typeUrl: string;
            encode(message: _158.LightBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _158.LightBlock;
            fromJSON(object: any): _158.LightBlock;
            toJSON(message: _158.LightBlock): unknown;
            fromPartial(object: Partial<_158.LightBlock>): _158.LightBlock;
            fromSDK(object: _158.LightBlockSDKType): _158.LightBlock;
            toSDK(message: _158.LightBlock): _158.LightBlockSDKType;
            fromAmino(object: _158.LightBlockAmino): _158.LightBlock;
            toAmino(message: _158.LightBlock): _158.LightBlockAmino;
            fromAminoMsg(object: _158.LightBlockAminoMsg): _158.LightBlock;
            fromProtoMsg(message: _158.LightBlockProtoMsg): _158.LightBlock;
            toProto(message: _158.LightBlock): Uint8Array;
            toProtoMsg(message: _158.LightBlock): _158.LightBlockProtoMsg;
        };
        BlockMeta: {
            typeUrl: string;
            encode(message: _158.BlockMeta, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _158.BlockMeta;
            fromJSON(object: any): _158.BlockMeta;
            toJSON(message: _158.BlockMeta): unknown;
            fromPartial(object: Partial<_158.BlockMeta>): _158.BlockMeta;
            fromSDK(object: _158.BlockMetaSDKType): _158.BlockMeta;
            toSDK(message: _158.BlockMeta): _158.BlockMetaSDKType;
            fromAmino(object: _158.BlockMetaAmino): _158.BlockMeta;
            toAmino(message: _158.BlockMeta): _158.BlockMetaAmino;
            fromAminoMsg(object: _158.BlockMetaAminoMsg): _158.BlockMeta;
            fromProtoMsg(message: _158.BlockMetaProtoMsg): _158.BlockMeta;
            toProto(message: _158.BlockMeta): Uint8Array;
            toProtoMsg(message: _158.BlockMeta): _158.BlockMetaProtoMsg;
        };
        TxProof: {
            typeUrl: string;
            encode(message: _158.TxProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _158.TxProof;
            fromJSON(object: any): _158.TxProof;
            toJSON(message: _158.TxProof): unknown;
            fromPartial(object: Partial<_158.TxProof>): _158.TxProof;
            fromSDK(object: _158.TxProofSDKType): _158.TxProof;
            toSDK(message: _158.TxProof): _158.TxProofSDKType;
            fromAmino(object: _158.TxProofAmino): _158.TxProof;
            toAmino(message: _158.TxProof): _158.TxProofAmino;
            fromAminoMsg(object: _158.TxProofAminoMsg): _158.TxProof;
            fromProtoMsg(message: _158.TxProofProtoMsg): _158.TxProof;
            toProto(message: _158.TxProof): Uint8Array;
            toProtoMsg(message: _158.TxProof): _158.TxProofProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            encode(message: _157.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _157.ConsensusParams;
            fromJSON(object: any): _157.ConsensusParams;
            toJSON(message: _157.ConsensusParams): unknown;
            fromPartial(object: Partial<_157.ConsensusParams>): _157.ConsensusParams;
            fromSDK(object: _157.ConsensusParamsSDKType): _157.ConsensusParams;
            toSDK(message: _157.ConsensusParams): _157.ConsensusParamsSDKType;
            fromAmino(object: _157.ConsensusParamsAmino): _157.ConsensusParams;
            toAmino(message: _157.ConsensusParams): _157.ConsensusParamsAmino;
            fromAminoMsg(object: _157.ConsensusParamsAminoMsg): _157.ConsensusParams;
            fromProtoMsg(message: _157.ConsensusParamsProtoMsg): _157.ConsensusParams;
            toProto(message: _157.ConsensusParams): Uint8Array;
            toProtoMsg(message: _157.ConsensusParams): _157.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            encode(message: _157.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _157.BlockParams;
            fromJSON(object: any): _157.BlockParams;
            toJSON(message: _157.BlockParams): unknown;
            fromPartial(object: Partial<_157.BlockParams>): _157.BlockParams;
            fromSDK(object: _157.BlockParamsSDKType): _157.BlockParams;
            toSDK(message: _157.BlockParams): _157.BlockParamsSDKType;
            fromAmino(object: _157.BlockParamsAmino): _157.BlockParams;
            toAmino(message: _157.BlockParams): _157.BlockParamsAmino;
            fromAminoMsg(object: _157.BlockParamsAminoMsg): _157.BlockParams;
            fromProtoMsg(message: _157.BlockParamsProtoMsg): _157.BlockParams;
            toProto(message: _157.BlockParams): Uint8Array;
            toProtoMsg(message: _157.BlockParams): _157.BlockParamsProtoMsg;
        };
        EvidenceParams: {
            typeUrl: string;
            encode(message: _157.EvidenceParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _157.EvidenceParams;
            fromJSON(object: any): _157.EvidenceParams;
            toJSON(message: _157.EvidenceParams): unknown;
            fromPartial(object: Partial<_157.EvidenceParams>): _157.EvidenceParams;
            fromSDK(object: _157.EvidenceParamsSDKType): _157.EvidenceParams;
            toSDK(message: _157.EvidenceParams): _157.EvidenceParamsSDKType;
            fromAmino(object: _157.EvidenceParamsAmino): _157.EvidenceParams;
            toAmino(message: _157.EvidenceParams): _157.EvidenceParamsAmino;
            fromAminoMsg(object: _157.EvidenceParamsAminoMsg): _157.EvidenceParams;
            fromProtoMsg(message: _157.EvidenceParamsProtoMsg): _157.EvidenceParams;
            toProto(message: _157.EvidenceParams): Uint8Array;
            toProtoMsg(message: _157.EvidenceParams): _157.EvidenceParamsProtoMsg;
        };
        ValidatorParams: {
            typeUrl: string;
            encode(message: _157.ValidatorParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _157.ValidatorParams;
            fromJSON(object: any): _157.ValidatorParams;
            toJSON(message: _157.ValidatorParams): unknown;
            fromPartial(object: Partial<_157.ValidatorParams>): _157.ValidatorParams;
            fromSDK(object: _157.ValidatorParamsSDKType): _157.ValidatorParams;
            toSDK(message: _157.ValidatorParams): _157.ValidatorParamsSDKType;
            fromAmino(object: _157.ValidatorParamsAmino): _157.ValidatorParams;
            toAmino(message: _157.ValidatorParams): _157.ValidatorParamsAmino;
            fromAminoMsg(object: _157.ValidatorParamsAminoMsg): _157.ValidatorParams;
            fromProtoMsg(message: _157.ValidatorParamsProtoMsg): _157.ValidatorParams;
            toProto(message: _157.ValidatorParams): Uint8Array;
            toProtoMsg(message: _157.ValidatorParams): _157.ValidatorParamsProtoMsg;
        };
        VersionParams: {
            typeUrl: string;
            encode(message: _157.VersionParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _157.VersionParams;
            fromJSON(object: any): _157.VersionParams;
            toJSON(message: _157.VersionParams): unknown;
            fromPartial(object: Partial<_157.VersionParams>): _157.VersionParams;
            fromSDK(object: _157.VersionParamsSDKType): _157.VersionParams;
            toSDK(message: _157.VersionParams): _157.VersionParamsSDKType;
            fromAmino(object: _157.VersionParamsAmino): _157.VersionParams;
            toAmino(message: _157.VersionParams): _157.VersionParamsAmino;
            fromAminoMsg(object: _157.VersionParamsAminoMsg): _157.VersionParams;
            fromProtoMsg(message: _157.VersionParamsProtoMsg): _157.VersionParams;
            toProto(message: _157.VersionParams): Uint8Array;
            toProtoMsg(message: _157.VersionParams): _157.VersionParamsProtoMsg;
        };
        HashedParams: {
            typeUrl: string;
            encode(message: _157.HashedParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _157.HashedParams;
            fromJSON(object: any): _157.HashedParams;
            toJSON(message: _157.HashedParams): unknown;
            fromPartial(object: Partial<_157.HashedParams>): _157.HashedParams;
            fromSDK(object: _157.HashedParamsSDKType): _157.HashedParams;
            toSDK(message: _157.HashedParams): _157.HashedParamsSDKType;
            fromAmino(object: _157.HashedParamsAmino): _157.HashedParams;
            toAmino(message: _157.HashedParams): _157.HashedParamsAmino;
            fromAminoMsg(object: _157.HashedParamsAminoMsg): _157.HashedParams;
            fromProtoMsg(message: _157.HashedParamsProtoMsg): _157.HashedParams;
            toProto(message: _157.HashedParams): Uint8Array;
            toProtoMsg(message: _157.HashedParams): _157.HashedParamsProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            encode(message: _156.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _156.Evidence;
            fromJSON(object: any): _156.Evidence;
            toJSON(message: _156.Evidence): unknown;
            fromPartial(object: Partial<_156.Evidence>): _156.Evidence;
            fromSDK(object: _156.EvidenceSDKType): _156.Evidence;
            toSDK(message: _156.Evidence): _156.EvidenceSDKType;
            fromAmino(object: _156.EvidenceAmino): _156.Evidence;
            toAmino(message: _156.Evidence): _156.EvidenceAmino;
            fromAminoMsg(object: _156.EvidenceAminoMsg): _156.Evidence;
            fromProtoMsg(message: _156.EvidenceProtoMsg): _156.Evidence;
            toProto(message: _156.Evidence): Uint8Array;
            toProtoMsg(message: _156.Evidence): _156.EvidenceProtoMsg;
        };
        DuplicateVoteEvidence: {
            typeUrl: string;
            encode(message: _156.DuplicateVoteEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _156.DuplicateVoteEvidence;
            fromJSON(object: any): _156.DuplicateVoteEvidence;
            toJSON(message: _156.DuplicateVoteEvidence): unknown;
            fromPartial(object: Partial<_156.DuplicateVoteEvidence>): _156.DuplicateVoteEvidence;
            fromSDK(object: _156.DuplicateVoteEvidenceSDKType): _156.DuplicateVoteEvidence;
            toSDK(message: _156.DuplicateVoteEvidence): _156.DuplicateVoteEvidenceSDKType;
            fromAmino(object: _156.DuplicateVoteEvidenceAmino): _156.DuplicateVoteEvidence;
            toAmino(message: _156.DuplicateVoteEvidence): _156.DuplicateVoteEvidenceAmino;
            fromAminoMsg(object: _156.DuplicateVoteEvidenceAminoMsg): _156.DuplicateVoteEvidence;
            fromProtoMsg(message: _156.DuplicateVoteEvidenceProtoMsg): _156.DuplicateVoteEvidence;
            toProto(message: _156.DuplicateVoteEvidence): Uint8Array;
            toProtoMsg(message: _156.DuplicateVoteEvidence): _156.DuplicateVoteEvidenceProtoMsg;
        };
        LightClientAttackEvidence: {
            typeUrl: string;
            encode(message: _156.LightClientAttackEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _156.LightClientAttackEvidence;
            fromJSON(object: any): _156.LightClientAttackEvidence;
            toJSON(message: _156.LightClientAttackEvidence): unknown;
            fromPartial(object: Partial<_156.LightClientAttackEvidence>): _156.LightClientAttackEvidence;
            fromSDK(object: _156.LightClientAttackEvidenceSDKType): _156.LightClientAttackEvidence;
            toSDK(message: _156.LightClientAttackEvidence): _156.LightClientAttackEvidenceSDKType;
            fromAmino(object: _156.LightClientAttackEvidenceAmino): _156.LightClientAttackEvidence;
            toAmino(message: _156.LightClientAttackEvidence): _156.LightClientAttackEvidenceAmino;
            fromAminoMsg(object: _156.LightClientAttackEvidenceAminoMsg): _156.LightClientAttackEvidence;
            fromProtoMsg(message: _156.LightClientAttackEvidenceProtoMsg): _156.LightClientAttackEvidence;
            toProto(message: _156.LightClientAttackEvidence): Uint8Array;
            toProtoMsg(message: _156.LightClientAttackEvidence): _156.LightClientAttackEvidenceProtoMsg;
        };
        EvidenceList: {
            typeUrl: string;
            encode(message: _156.EvidenceList, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _156.EvidenceList;
            fromJSON(object: any): _156.EvidenceList;
            toJSON(message: _156.EvidenceList): unknown;
            fromPartial(object: Partial<_156.EvidenceList>): _156.EvidenceList;
            fromSDK(object: _156.EvidenceListSDKType): _156.EvidenceList;
            toSDK(message: _156.EvidenceList): _156.EvidenceListSDKType;
            fromAmino(object: _156.EvidenceListAmino): _156.EvidenceList;
            toAmino(message: _156.EvidenceList): _156.EvidenceListAmino;
            fromAminoMsg(object: _156.EvidenceListAminoMsg): _156.EvidenceList;
            fromProtoMsg(message: _156.EvidenceListProtoMsg): _156.EvidenceList;
            toProto(message: _156.EvidenceList): Uint8Array;
            toProtoMsg(message: _156.EvidenceList): _156.EvidenceListProtoMsg;
        };
        Block: {
            typeUrl: string;
            encode(message: _155.Block, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _155.Block;
            fromJSON(object: any): _155.Block;
            toJSON(message: _155.Block): unknown;
            fromPartial(object: Partial<_155.Block>): _155.Block;
            fromSDK(object: _155.BlockSDKType): _155.Block;
            toSDK(message: _155.Block): _155.BlockSDKType;
            fromAmino(object: _155.BlockAmino): _155.Block;
            toAmino(message: _155.Block): _155.BlockAmino;
            fromAminoMsg(object: _155.BlockAminoMsg): _155.Block;
            fromProtoMsg(message: _155.BlockProtoMsg): _155.Block;
            toProto(message: _155.Block): Uint8Array;
            toProtoMsg(message: _155.Block): _155.BlockProtoMsg;
        };
    };
    const version: {
        App: {
            typeUrl: string;
            encode(message: _160.App, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _160.App;
            fromJSON(object: any): _160.App;
            toJSON(message: _160.App): unknown;
            fromPartial(object: Partial<_160.App>): _160.App;
            fromSDK(object: _160.AppSDKType): _160.App;
            toSDK(message: _160.App): _160.AppSDKType;
            fromAmino(object: _160.AppAmino): _160.App;
            toAmino(message: _160.App): _160.AppAmino;
            fromAminoMsg(object: _160.AppAminoMsg): _160.App;
            fromProtoMsg(message: _160.AppProtoMsg): _160.App;
            toProto(message: _160.App): Uint8Array;
            toProtoMsg(message: _160.App): _160.AppProtoMsg;
        };
        Consensus: {
            typeUrl: string;
            encode(message: _160.Consensus, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _160.Consensus;
            fromJSON(object: any): _160.Consensus;
            toJSON(message: _160.Consensus): unknown;
            fromPartial(object: Partial<_160.Consensus>): _160.Consensus;
            fromSDK(object: _160.ConsensusSDKType): _160.Consensus;
            toSDK(message: _160.Consensus): _160.ConsensusSDKType;
            fromAmino(object: _160.ConsensusAmino): _160.Consensus;
            toAmino(message: _160.Consensus): _160.ConsensusAmino;
            fromAminoMsg(object: _160.ConsensusAminoMsg): _160.Consensus;
            fromProtoMsg(message: _160.ConsensusProtoMsg): _160.Consensus;
            toProto(message: _160.Consensus): Uint8Array;
            toProtoMsg(message: _160.Consensus): _160.ConsensusProtoMsg;
        };
    };
}
