import * as _138 from "./applications/interchain_accounts/controller/v1/controller";
import * as _139 from "./applications/interchain_accounts/controller/v1/query";
import * as _140 from "./applications/interchain_accounts/controller/v1/tx";
import * as _141 from "./applications/interchain_accounts/genesis/v1/genesis";
import * as _142 from "./applications/interchain_accounts/host/v1/host";
import * as _143 from "./applications/interchain_accounts/host/v1/query";
import * as _144 from "./applications/interchain_accounts/host/v1/tx";
import * as _145 from "./applications/interchain_accounts/v1/account";
import * as _146 from "./applications/interchain_accounts/v1/metadata";
import * as _147 from "./applications/interchain_accounts/v1/packet";
import * as _148 from "./applications/transfer/v1/authz";
import * as _149 from "./applications/transfer/v1/genesis";
import * as _150 from "./applications/transfer/v1/query";
import * as _151 from "./applications/transfer/v1/transfer";
import * as _152 from "./applications/transfer/v1/tx";
import * as _153 from "./applications/transfer/v2/packet";
import * as _154 from "./core/channel/v1/channel";
import * as _155 from "./core/channel/v1/genesis";
import * as _156 from "./core/channel/v1/query";
import * as _157 from "./core/channel/v1/tx";
import * as _158 from "./core/client/v1/client";
import * as _159 from "./core/client/v1/genesis";
import * as _160 from "./core/client/v1/query";
import * as _161 from "./core/client/v1/tx";
import * as _162 from "./core/commitment/v1/commitment";
import * as _163 from "./core/connection/v1/connection";
import * as _164 from "./core/connection/v1/genesis";
import * as _165 from "./core/connection/v1/query";
import * as _166 from "./core/connection/v1/tx";
import * as _167 from "./lightclients/localhost/v2/localhost";
import * as _168 from "./lightclients/solomachine/v2/solomachine";
import * as _169 from "./lightclients/solomachine/v3/solomachine";
import * as _170 from "./lightclients/tendermint/v1/tendermint";
import * as _252 from "./applications/interchain_accounts/controller/v1/query.lcd";
import * as _253 from "./applications/interchain_accounts/host/v1/query.lcd";
import * as _254 from "./applications/transfer/v1/query.lcd";
import * as _255 from "./core/channel/v1/query.lcd";
import * as _256 from "./core/client/v1/query.lcd";
import * as _257 from "./core/connection/v1/query.lcd";
export declare namespace ibc {
    namespace applications {
        namespace interchain_accounts {
            namespace controller {
                const v1: {
                    LCDQueryClient: typeof _252.LCDQueryClient;
                    registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
                    load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
                    MessageComposer: {
                        encoded: {
                            registerInterchainAccount(value: _140.MsgRegisterInterchainAccount): {
                                typeUrl: string;
                                value: Uint8Array;
                            };
                            sendTx(value: _140.MsgSendTx): {
                                typeUrl: string;
                                value: Uint8Array;
                            };
                            updateParams(value: _140.MsgUpdateParams): {
                                typeUrl: string;
                                value: Uint8Array;
                            };
                        };
                        withTypeUrl: {
                            registerInterchainAccount(value: _140.MsgRegisterInterchainAccount): {
                                typeUrl: string;
                                value: _140.MsgRegisterInterchainAccount;
                            };
                            sendTx(value: _140.MsgSendTx): {
                                typeUrl: string;
                                value: _140.MsgSendTx;
                            };
                            updateParams(value: _140.MsgUpdateParams): {
                                typeUrl: string;
                                value: _140.MsgUpdateParams;
                            };
                        };
                        toJSON: {
                            registerInterchainAccount(value: _140.MsgRegisterInterchainAccount): {
                                typeUrl: string;
                                value: unknown;
                            };
                            sendTx(value: _140.MsgSendTx): {
                                typeUrl: string;
                                value: unknown;
                            };
                            updateParams(value: _140.MsgUpdateParams): {
                                typeUrl: string;
                                value: unknown;
                            };
                        };
                        fromJSON: {
                            registerInterchainAccount(value: any): {
                                typeUrl: string;
                                value: _140.MsgRegisterInterchainAccount;
                            };
                            sendTx(value: any): {
                                typeUrl: string;
                                value: _140.MsgSendTx;
                            };
                            updateParams(value: any): {
                                typeUrl: string;
                                value: _140.MsgUpdateParams;
                            };
                        };
                        fromPartial: {
                            registerInterchainAccount(value: _140.MsgRegisterInterchainAccount): {
                                typeUrl: string;
                                value: _140.MsgRegisterInterchainAccount;
                            };
                            sendTx(value: _140.MsgSendTx): {
                                typeUrl: string;
                                value: _140.MsgSendTx;
                            };
                            updateParams(value: _140.MsgUpdateParams): {
                                typeUrl: string;
                                value: _140.MsgUpdateParams;
                            };
                        };
                    };
                    AminoConverter: {
                        "/ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount": {
                            aminoType: string;
                            toAmino: (message: _140.MsgRegisterInterchainAccount) => _140.MsgRegisterInterchainAccountAmino;
                            fromAmino: (object: _140.MsgRegisterInterchainAccountAmino) => _140.MsgRegisterInterchainAccount;
                        };
                        "/ibc.applications.interchain_accounts.controller.v1.MsgSendTx": {
                            aminoType: string;
                            toAmino: (message: _140.MsgSendTx) => _140.MsgSendTxAmino;
                            fromAmino: (object: _140.MsgSendTxAmino) => _140.MsgSendTx;
                        };
                        "/ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams": {
                            aminoType: string;
                            toAmino: (message: _140.MsgUpdateParams) => _140.MsgUpdateParamsAmino;
                            fromAmino: (object: _140.MsgUpdateParamsAmino) => _140.MsgUpdateParams;
                        };
                    };
                    protobufPackage: "ibc.applications.interchain_accounts.controller.v1";
                    MsgRegisterInterchainAccount: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _140.MsgRegisterInterchainAccount;
                        isSDK(o: any): o is _140.MsgRegisterInterchainAccountSDKType;
                        isAmino(o: any): o is _140.MsgRegisterInterchainAccountAmino;
                        encode(message: _140.MsgRegisterInterchainAccount, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _140.MsgRegisterInterchainAccount;
                        fromJSON(object: any): _140.MsgRegisterInterchainAccount;
                        toJSON(message: _140.MsgRegisterInterchainAccount): unknown;
                        fromPartial(object: Partial<_140.MsgRegisterInterchainAccount>): _140.MsgRegisterInterchainAccount;
                        fromAmino(object: _140.MsgRegisterInterchainAccountAmino): _140.MsgRegisterInterchainAccount;
                        toAmino(message: _140.MsgRegisterInterchainAccount): _140.MsgRegisterInterchainAccountAmino;
                        fromAminoMsg(object: _140.MsgRegisterInterchainAccountAminoMsg): _140.MsgRegisterInterchainAccount;
                        toAminoMsg(message: _140.MsgRegisterInterchainAccount): _140.MsgRegisterInterchainAccountAminoMsg;
                        fromProtoMsg(message: _140.MsgRegisterInterchainAccountProtoMsg): _140.MsgRegisterInterchainAccount;
                        toProto(message: _140.MsgRegisterInterchainAccount): Uint8Array;
                        toProtoMsg(message: _140.MsgRegisterInterchainAccount): _140.MsgRegisterInterchainAccountProtoMsg;
                    };
                    MsgRegisterInterchainAccountResponse: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _140.MsgRegisterInterchainAccountResponse;
                        isSDK(o: any): o is _140.MsgRegisterInterchainAccountResponseSDKType;
                        isAmino(o: any): o is _140.MsgRegisterInterchainAccountResponseAmino;
                        encode(message: _140.MsgRegisterInterchainAccountResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _140.MsgRegisterInterchainAccountResponse;
                        fromJSON(object: any): _140.MsgRegisterInterchainAccountResponse;
                        toJSON(message: _140.MsgRegisterInterchainAccountResponse): unknown;
                        fromPartial(object: Partial<_140.MsgRegisterInterchainAccountResponse>): _140.MsgRegisterInterchainAccountResponse;
                        fromAmino(object: _140.MsgRegisterInterchainAccountResponseAmino): _140.MsgRegisterInterchainAccountResponse;
                        toAmino(message: _140.MsgRegisterInterchainAccountResponse): _140.MsgRegisterInterchainAccountResponseAmino;
                        fromAminoMsg(object: _140.MsgRegisterInterchainAccountResponseAminoMsg): _140.MsgRegisterInterchainAccountResponse;
                        toAminoMsg(message: _140.MsgRegisterInterchainAccountResponse): _140.MsgRegisterInterchainAccountResponseAminoMsg;
                        fromProtoMsg(message: _140.MsgRegisterInterchainAccountResponseProtoMsg): _140.MsgRegisterInterchainAccountResponse;
                        toProto(message: _140.MsgRegisterInterchainAccountResponse): Uint8Array;
                        toProtoMsg(message: _140.MsgRegisterInterchainAccountResponse): _140.MsgRegisterInterchainAccountResponseProtoMsg;
                    };
                    MsgSendTx: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _140.MsgSendTx;
                        isSDK(o: any): o is _140.MsgSendTxSDKType;
                        isAmino(o: any): o is _140.MsgSendTxAmino;
                        encode(message: _140.MsgSendTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _140.MsgSendTx;
                        fromJSON(object: any): _140.MsgSendTx;
                        toJSON(message: _140.MsgSendTx): unknown;
                        fromPartial(object: Partial<_140.MsgSendTx>): _140.MsgSendTx;
                        fromAmino(object: _140.MsgSendTxAmino): _140.MsgSendTx;
                        toAmino(message: _140.MsgSendTx): _140.MsgSendTxAmino;
                        fromAminoMsg(object: _140.MsgSendTxAminoMsg): _140.MsgSendTx;
                        toAminoMsg(message: _140.MsgSendTx): _140.MsgSendTxAminoMsg;
                        fromProtoMsg(message: _140.MsgSendTxProtoMsg): _140.MsgSendTx;
                        toProto(message: _140.MsgSendTx): Uint8Array;
                        toProtoMsg(message: _140.MsgSendTx): _140.MsgSendTxProtoMsg;
                    };
                    MsgSendTxResponse: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _140.MsgSendTxResponse;
                        isSDK(o: any): o is _140.MsgSendTxResponseSDKType;
                        isAmino(o: any): o is _140.MsgSendTxResponseAmino;
                        encode(message: _140.MsgSendTxResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _140.MsgSendTxResponse;
                        fromJSON(object: any): _140.MsgSendTxResponse;
                        toJSON(message: _140.MsgSendTxResponse): unknown;
                        fromPartial(object: Partial<_140.MsgSendTxResponse>): _140.MsgSendTxResponse;
                        fromAmino(object: _140.MsgSendTxResponseAmino): _140.MsgSendTxResponse;
                        toAmino(message: _140.MsgSendTxResponse): _140.MsgSendTxResponseAmino;
                        fromAminoMsg(object: _140.MsgSendTxResponseAminoMsg): _140.MsgSendTxResponse;
                        toAminoMsg(message: _140.MsgSendTxResponse): _140.MsgSendTxResponseAminoMsg;
                        fromProtoMsg(message: _140.MsgSendTxResponseProtoMsg): _140.MsgSendTxResponse;
                        toProto(message: _140.MsgSendTxResponse): Uint8Array;
                        toProtoMsg(message: _140.MsgSendTxResponse): _140.MsgSendTxResponseProtoMsg;
                    };
                    MsgUpdateParams: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _140.MsgUpdateParams;
                        isSDK(o: any): o is _140.MsgUpdateParamsSDKType;
                        isAmino(o: any): o is _140.MsgUpdateParamsAmino;
                        encode(message: _140.MsgUpdateParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _140.MsgUpdateParams;
                        fromJSON(object: any): _140.MsgUpdateParams;
                        toJSON(message: _140.MsgUpdateParams): unknown;
                        fromPartial(object: Partial<_140.MsgUpdateParams>): _140.MsgUpdateParams;
                        fromAmino(object: _140.MsgUpdateParamsAmino): _140.MsgUpdateParams;
                        toAmino(message: _140.MsgUpdateParams): _140.MsgUpdateParamsAmino;
                        fromAminoMsg(object: _140.MsgUpdateParamsAminoMsg): _140.MsgUpdateParams;
                        toAminoMsg(message: _140.MsgUpdateParams): _140.MsgUpdateParamsAminoMsg;
                        fromProtoMsg(message: _140.MsgUpdateParamsProtoMsg): _140.MsgUpdateParams;
                        toProto(message: _140.MsgUpdateParams): Uint8Array;
                        toProtoMsg(message: _140.MsgUpdateParams): _140.MsgUpdateParamsProtoMsg;
                    };
                    MsgUpdateParamsResponse: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _140.MsgUpdateParamsResponse;
                        isSDK(o: any): o is _140.MsgUpdateParamsResponseSDKType;
                        isAmino(o: any): o is _140.MsgUpdateParamsResponseAmino;
                        encode(_: _140.MsgUpdateParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _140.MsgUpdateParamsResponse;
                        fromJSON(_: any): _140.MsgUpdateParamsResponse;
                        toJSON(_: _140.MsgUpdateParamsResponse): unknown;
                        fromPartial(_: Partial<_140.MsgUpdateParamsResponse>): _140.MsgUpdateParamsResponse;
                        fromAmino(_: _140.MsgUpdateParamsResponseAmino): _140.MsgUpdateParamsResponse;
                        toAmino(_: _140.MsgUpdateParamsResponse): _140.MsgUpdateParamsResponseAmino;
                        fromAminoMsg(object: _140.MsgUpdateParamsResponseAminoMsg): _140.MsgUpdateParamsResponse;
                        toAminoMsg(message: _140.MsgUpdateParamsResponse): _140.MsgUpdateParamsResponseAminoMsg;
                        fromProtoMsg(message: _140.MsgUpdateParamsResponseProtoMsg): _140.MsgUpdateParamsResponse;
                        toProto(message: _140.MsgUpdateParamsResponse): Uint8Array;
                        toProtoMsg(message: _140.MsgUpdateParamsResponse): _140.MsgUpdateParamsResponseProtoMsg;
                    };
                    QueryInterchainAccountRequest: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _139.QueryInterchainAccountRequest;
                        isSDK(o: any): o is _139.QueryInterchainAccountRequestSDKType;
                        isAmino(o: any): o is _139.QueryInterchainAccountRequestAmino;
                        encode(message: _139.QueryInterchainAccountRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _139.QueryInterchainAccountRequest;
                        fromJSON(object: any): _139.QueryInterchainAccountRequest;
                        toJSON(message: _139.QueryInterchainAccountRequest): unknown;
                        fromPartial(object: Partial<_139.QueryInterchainAccountRequest>): _139.QueryInterchainAccountRequest;
                        fromAmino(object: _139.QueryInterchainAccountRequestAmino): _139.QueryInterchainAccountRequest;
                        toAmino(message: _139.QueryInterchainAccountRequest): _139.QueryInterchainAccountRequestAmino;
                        fromAminoMsg(object: _139.QueryInterchainAccountRequestAminoMsg): _139.QueryInterchainAccountRequest;
                        toAminoMsg(message: _139.QueryInterchainAccountRequest): _139.QueryInterchainAccountRequestAminoMsg;
                        fromProtoMsg(message: _139.QueryInterchainAccountRequestProtoMsg): _139.QueryInterchainAccountRequest;
                        toProto(message: _139.QueryInterchainAccountRequest): Uint8Array;
                        toProtoMsg(message: _139.QueryInterchainAccountRequest): _139.QueryInterchainAccountRequestProtoMsg;
                    };
                    QueryInterchainAccountResponse: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _139.QueryInterchainAccountResponse;
                        isSDK(o: any): o is _139.QueryInterchainAccountResponseSDKType;
                        isAmino(o: any): o is _139.QueryInterchainAccountResponseAmino;
                        encode(message: _139.QueryInterchainAccountResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _139.QueryInterchainAccountResponse;
                        fromJSON(object: any): _139.QueryInterchainAccountResponse;
                        toJSON(message: _139.QueryInterchainAccountResponse): unknown;
                        fromPartial(object: Partial<_139.QueryInterchainAccountResponse>): _139.QueryInterchainAccountResponse;
                        fromAmino(object: _139.QueryInterchainAccountResponseAmino): _139.QueryInterchainAccountResponse;
                        toAmino(message: _139.QueryInterchainAccountResponse): _139.QueryInterchainAccountResponseAmino;
                        fromAminoMsg(object: _139.QueryInterchainAccountResponseAminoMsg): _139.QueryInterchainAccountResponse;
                        toAminoMsg(message: _139.QueryInterchainAccountResponse): _139.QueryInterchainAccountResponseAminoMsg;
                        fromProtoMsg(message: _139.QueryInterchainAccountResponseProtoMsg): _139.QueryInterchainAccountResponse;
                        toProto(message: _139.QueryInterchainAccountResponse): Uint8Array;
                        toProtoMsg(message: _139.QueryInterchainAccountResponse): _139.QueryInterchainAccountResponseProtoMsg;
                    };
                    QueryParamsRequest: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _139.QueryParamsRequest;
                        isSDK(o: any): o is _139.QueryParamsRequestSDKType;
                        isAmino(o: any): o is _139.QueryParamsRequestAmino;
                        encode(_: _139.QueryParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _139.QueryParamsRequest;
                        fromJSON(_: any): _139.QueryParamsRequest;
                        toJSON(_: _139.QueryParamsRequest): unknown;
                        fromPartial(_: Partial<_139.QueryParamsRequest>): _139.QueryParamsRequest;
                        fromAmino(_: _139.QueryParamsRequestAmino): _139.QueryParamsRequest;
                        toAmino(_: _139.QueryParamsRequest): _139.QueryParamsRequestAmino;
                        fromAminoMsg(object: _139.QueryParamsRequestAminoMsg): _139.QueryParamsRequest;
                        toAminoMsg(message: _139.QueryParamsRequest): _139.QueryParamsRequestAminoMsg;
                        fromProtoMsg(message: _139.QueryParamsRequestProtoMsg): _139.QueryParamsRequest;
                        toProto(message: _139.QueryParamsRequest): Uint8Array;
                        toProtoMsg(message: _139.QueryParamsRequest): _139.QueryParamsRequestProtoMsg;
                    };
                    QueryParamsResponse: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _139.QueryParamsResponse;
                        isSDK(o: any): o is _139.QueryParamsResponseSDKType;
                        isAmino(o: any): o is _139.QueryParamsResponseAmino;
                        encode(message: _139.QueryParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _139.QueryParamsResponse;
                        fromJSON(object: any): _139.QueryParamsResponse;
                        toJSON(message: _139.QueryParamsResponse): unknown;
                        fromPartial(object: Partial<_139.QueryParamsResponse>): _139.QueryParamsResponse;
                        fromAmino(object: _139.QueryParamsResponseAmino): _139.QueryParamsResponse;
                        toAmino(message: _139.QueryParamsResponse): _139.QueryParamsResponseAmino;
                        fromAminoMsg(object: _139.QueryParamsResponseAminoMsg): _139.QueryParamsResponse;
                        toAminoMsg(message: _139.QueryParamsResponse): _139.QueryParamsResponseAminoMsg;
                        fromProtoMsg(message: _139.QueryParamsResponseProtoMsg): _139.QueryParamsResponse;
                        toProto(message: _139.QueryParamsResponse): Uint8Array;
                        toProtoMsg(message: _139.QueryParamsResponse): _139.QueryParamsResponseProtoMsg;
                    };
                    Params: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _138.Params;
                        isSDK(o: any): o is _138.ParamsSDKType;
                        isAmino(o: any): o is _138.ParamsAmino;
                        encode(message: _138.Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _138.Params;
                        fromJSON(object: any): _138.Params;
                        toJSON(message: _138.Params): unknown;
                        fromPartial(object: Partial<_138.Params>): _138.Params;
                        fromAmino(object: _138.ParamsAmino): _138.Params;
                        toAmino(message: _138.Params): _138.ParamsAmino;
                        fromAminoMsg(object: _138.ParamsAminoMsg): _138.Params;
                        toAminoMsg(message: _138.Params): _138.ParamsAminoMsg;
                        fromProtoMsg(message: _138.ParamsProtoMsg): _138.Params;
                        toProto(message: _138.Params): Uint8Array;
                        toProtoMsg(message: _138.Params): _138.ParamsProtoMsg;
                    };
                };
            }
            namespace genesis {
                const v1: {
                    protobufPackage: "ibc.applications.interchain_accounts.genesis.v1";
                    GenesisState: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _141.GenesisState;
                        isSDK(o: any): o is _141.GenesisStateSDKType;
                        isAmino(o: any): o is _141.GenesisStateAmino;
                        encode(message: _141.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _141.GenesisState;
                        fromJSON(object: any): _141.GenesisState;
                        toJSON(message: _141.GenesisState): unknown;
                        fromPartial(object: Partial<_141.GenesisState>): _141.GenesisState;
                        fromAmino(object: _141.GenesisStateAmino): _141.GenesisState;
                        toAmino(message: _141.GenesisState): _141.GenesisStateAmino;
                        fromAminoMsg(object: _141.GenesisStateAminoMsg): _141.GenesisState;
                        toAminoMsg(message: _141.GenesisState): _141.GenesisStateAminoMsg;
                        fromProtoMsg(message: _141.GenesisStateProtoMsg): _141.GenesisState;
                        toProto(message: _141.GenesisState): Uint8Array;
                        toProtoMsg(message: _141.GenesisState): _141.GenesisStateProtoMsg;
                    };
                    ControllerGenesisState: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _141.ControllerGenesisState;
                        isSDK(o: any): o is _141.ControllerGenesisStateSDKType;
                        isAmino(o: any): o is _141.ControllerGenesisStateAmino;
                        encode(message: _141.ControllerGenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _141.ControllerGenesisState;
                        fromJSON(object: any): _141.ControllerGenesisState;
                        toJSON(message: _141.ControllerGenesisState): unknown;
                        fromPartial(object: Partial<_141.ControllerGenesisState>): _141.ControllerGenesisState;
                        fromAmino(object: _141.ControllerGenesisStateAmino): _141.ControllerGenesisState;
                        toAmino(message: _141.ControllerGenesisState): _141.ControllerGenesisStateAmino;
                        fromAminoMsg(object: _141.ControllerGenesisStateAminoMsg): _141.ControllerGenesisState;
                        toAminoMsg(message: _141.ControllerGenesisState): _141.ControllerGenesisStateAminoMsg;
                        fromProtoMsg(message: _141.ControllerGenesisStateProtoMsg): _141.ControllerGenesisState;
                        toProto(message: _141.ControllerGenesisState): Uint8Array;
                        toProtoMsg(message: _141.ControllerGenesisState): _141.ControllerGenesisStateProtoMsg;
                    };
                    HostGenesisState: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _141.HostGenesisState;
                        isSDK(o: any): o is _141.HostGenesisStateSDKType;
                        isAmino(o: any): o is _141.HostGenesisStateAmino;
                        encode(message: _141.HostGenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _141.HostGenesisState;
                        fromJSON(object: any): _141.HostGenesisState;
                        toJSON(message: _141.HostGenesisState): unknown;
                        fromPartial(object: Partial<_141.HostGenesisState>): _141.HostGenesisState;
                        fromAmino(object: _141.HostGenesisStateAmino): _141.HostGenesisState;
                        toAmino(message: _141.HostGenesisState): _141.HostGenesisStateAmino;
                        fromAminoMsg(object: _141.HostGenesisStateAminoMsg): _141.HostGenesisState;
                        toAminoMsg(message: _141.HostGenesisState): _141.HostGenesisStateAminoMsg;
                        fromProtoMsg(message: _141.HostGenesisStateProtoMsg): _141.HostGenesisState;
                        toProto(message: _141.HostGenesisState): Uint8Array;
                        toProtoMsg(message: _141.HostGenesisState): _141.HostGenesisStateProtoMsg;
                    };
                    ActiveChannel: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _141.ActiveChannel;
                        isSDK(o: any): o is _141.ActiveChannelSDKType;
                        isAmino(o: any): o is _141.ActiveChannelAmino;
                        encode(message: _141.ActiveChannel, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _141.ActiveChannel;
                        fromJSON(object: any): _141.ActiveChannel;
                        toJSON(message: _141.ActiveChannel): unknown;
                        fromPartial(object: Partial<_141.ActiveChannel>): _141.ActiveChannel;
                        fromAmino(object: _141.ActiveChannelAmino): _141.ActiveChannel;
                        toAmino(message: _141.ActiveChannel): _141.ActiveChannelAmino;
                        fromAminoMsg(object: _141.ActiveChannelAminoMsg): _141.ActiveChannel;
                        toAminoMsg(message: _141.ActiveChannel): _141.ActiveChannelAminoMsg;
                        fromProtoMsg(message: _141.ActiveChannelProtoMsg): _141.ActiveChannel;
                        toProto(message: _141.ActiveChannel): Uint8Array;
                        toProtoMsg(message: _141.ActiveChannel): _141.ActiveChannelProtoMsg;
                    };
                    RegisteredInterchainAccount: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _141.RegisteredInterchainAccount;
                        isSDK(o: any): o is _141.RegisteredInterchainAccountSDKType;
                        isAmino(o: any): o is _141.RegisteredInterchainAccountAmino;
                        encode(message: _141.RegisteredInterchainAccount, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _141.RegisteredInterchainAccount;
                        fromJSON(object: any): _141.RegisteredInterchainAccount;
                        toJSON(message: _141.RegisteredInterchainAccount): unknown;
                        fromPartial(object: Partial<_141.RegisteredInterchainAccount>): _141.RegisteredInterchainAccount;
                        fromAmino(object: _141.RegisteredInterchainAccountAmino): _141.RegisteredInterchainAccount;
                        toAmino(message: _141.RegisteredInterchainAccount): _141.RegisteredInterchainAccountAmino;
                        fromAminoMsg(object: _141.RegisteredInterchainAccountAminoMsg): _141.RegisteredInterchainAccount;
                        toAminoMsg(message: _141.RegisteredInterchainAccount): _141.RegisteredInterchainAccountAminoMsg;
                        fromProtoMsg(message: _141.RegisteredInterchainAccountProtoMsg): _141.RegisteredInterchainAccount;
                        toProto(message: _141.RegisteredInterchainAccount): Uint8Array;
                        toProtoMsg(message: _141.RegisteredInterchainAccount): _141.RegisteredInterchainAccountProtoMsg;
                    };
                };
            }
            namespace host {
                const v1: {
                    LCDQueryClient: typeof _253.LCDQueryClient;
                    registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
                    load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
                    MessageComposer: {
                        encoded: {
                            updateParams(value: _144.MsgUpdateParams): {
                                typeUrl: string;
                                value: Uint8Array;
                            };
                        };
                        withTypeUrl: {
                            updateParams(value: _144.MsgUpdateParams): {
                                typeUrl: string;
                                value: _144.MsgUpdateParams;
                            };
                        };
                        toJSON: {
                            updateParams(value: _144.MsgUpdateParams): {
                                typeUrl: string;
                                value: unknown;
                            };
                        };
                        fromJSON: {
                            updateParams(value: any): {
                                typeUrl: string;
                                value: _144.MsgUpdateParams;
                            };
                        };
                        fromPartial: {
                            updateParams(value: _144.MsgUpdateParams): {
                                typeUrl: string;
                                value: _144.MsgUpdateParams;
                            };
                        };
                    };
                    AminoConverter: {
                        "/ibc.applications.interchain_accounts.host.v1.MsgUpdateParams": {
                            aminoType: string;
                            toAmino: (message: _144.MsgUpdateParams) => _144.MsgUpdateParamsAmino;
                            fromAmino: (object: _144.MsgUpdateParamsAmino) => _144.MsgUpdateParams;
                        };
                    };
                    protobufPackage: "ibc.applications.interchain_accounts.host.v1";
                    MsgUpdateParams: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _144.MsgUpdateParams;
                        isSDK(o: any): o is _144.MsgUpdateParamsSDKType;
                        isAmino(o: any): o is _144.MsgUpdateParamsAmino;
                        encode(message: _144.MsgUpdateParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _144.MsgUpdateParams;
                        fromJSON(object: any): _144.MsgUpdateParams;
                        toJSON(message: _144.MsgUpdateParams): unknown;
                        fromPartial(object: Partial<_144.MsgUpdateParams>): _144.MsgUpdateParams;
                        fromAmino(object: _144.MsgUpdateParamsAmino): _144.MsgUpdateParams;
                        toAmino(message: _144.MsgUpdateParams): _144.MsgUpdateParamsAmino;
                        fromAminoMsg(object: _144.MsgUpdateParamsAminoMsg): _144.MsgUpdateParams;
                        toAminoMsg(message: _144.MsgUpdateParams): _144.MsgUpdateParamsAminoMsg;
                        fromProtoMsg(message: _144.MsgUpdateParamsProtoMsg): _144.MsgUpdateParams;
                        toProto(message: _144.MsgUpdateParams): Uint8Array;
                        toProtoMsg(message: _144.MsgUpdateParams): _144.MsgUpdateParamsProtoMsg;
                    };
                    MsgUpdateParamsResponse: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _144.MsgUpdateParamsResponse;
                        isSDK(o: any): o is _144.MsgUpdateParamsResponseSDKType;
                        isAmino(o: any): o is _144.MsgUpdateParamsResponseAmino;
                        encode(_: _144.MsgUpdateParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _144.MsgUpdateParamsResponse;
                        fromJSON(_: any): _144.MsgUpdateParamsResponse;
                        toJSON(_: _144.MsgUpdateParamsResponse): unknown;
                        fromPartial(_: Partial<_144.MsgUpdateParamsResponse>): _144.MsgUpdateParamsResponse;
                        fromAmino(_: _144.MsgUpdateParamsResponseAmino): _144.MsgUpdateParamsResponse;
                        toAmino(_: _144.MsgUpdateParamsResponse): _144.MsgUpdateParamsResponseAmino;
                        fromAminoMsg(object: _144.MsgUpdateParamsResponseAminoMsg): _144.MsgUpdateParamsResponse;
                        toAminoMsg(message: _144.MsgUpdateParamsResponse): _144.MsgUpdateParamsResponseAminoMsg;
                        fromProtoMsg(message: _144.MsgUpdateParamsResponseProtoMsg): _144.MsgUpdateParamsResponse;
                        toProto(message: _144.MsgUpdateParamsResponse): Uint8Array;
                        toProtoMsg(message: _144.MsgUpdateParamsResponse): _144.MsgUpdateParamsResponseProtoMsg;
                    };
                    QueryParamsRequest: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _143.QueryParamsRequest;
                        isSDK(o: any): o is _143.QueryParamsRequestSDKType;
                        isAmino(o: any): o is _143.QueryParamsRequestAmino;
                        encode(_: _143.QueryParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _143.QueryParamsRequest;
                        fromJSON(_: any): _143.QueryParamsRequest;
                        toJSON(_: _143.QueryParamsRequest): unknown;
                        fromPartial(_: Partial<_143.QueryParamsRequest>): _143.QueryParamsRequest;
                        fromAmino(_: _143.QueryParamsRequestAmino): _143.QueryParamsRequest;
                        toAmino(_: _143.QueryParamsRequest): _143.QueryParamsRequestAmino;
                        fromAminoMsg(object: _143.QueryParamsRequestAminoMsg): _143.QueryParamsRequest;
                        toAminoMsg(message: _143.QueryParamsRequest): _143.QueryParamsRequestAminoMsg;
                        fromProtoMsg(message: _143.QueryParamsRequestProtoMsg): _143.QueryParamsRequest;
                        toProto(message: _143.QueryParamsRequest): Uint8Array;
                        toProtoMsg(message: _143.QueryParamsRequest): _143.QueryParamsRequestProtoMsg;
                    };
                    QueryParamsResponse: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _143.QueryParamsResponse;
                        isSDK(o: any): o is _143.QueryParamsResponseSDKType;
                        isAmino(o: any): o is _143.QueryParamsResponseAmino;
                        encode(message: _143.QueryParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _143.QueryParamsResponse;
                        fromJSON(object: any): _143.QueryParamsResponse;
                        toJSON(message: _143.QueryParamsResponse): unknown;
                        fromPartial(object: Partial<_143.QueryParamsResponse>): _143.QueryParamsResponse;
                        fromAmino(object: _143.QueryParamsResponseAmino): _143.QueryParamsResponse;
                        toAmino(message: _143.QueryParamsResponse): _143.QueryParamsResponseAmino;
                        fromAminoMsg(object: _143.QueryParamsResponseAminoMsg): _143.QueryParamsResponse;
                        toAminoMsg(message: _143.QueryParamsResponse): _143.QueryParamsResponseAminoMsg;
                        fromProtoMsg(message: _143.QueryParamsResponseProtoMsg): _143.QueryParamsResponse;
                        toProto(message: _143.QueryParamsResponse): Uint8Array;
                        toProtoMsg(message: _143.QueryParamsResponse): _143.QueryParamsResponseProtoMsg;
                    };
                    Params: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _142.Params;
                        isSDK(o: any): o is _142.ParamsSDKType;
                        isAmino(o: any): o is _142.ParamsAmino;
                        encode(message: _142.Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _142.Params;
                        fromJSON(object: any): _142.Params;
                        toJSON(message: _142.Params): unknown;
                        fromPartial(object: Partial<_142.Params>): _142.Params;
                        fromAmino(object: _142.ParamsAmino): _142.Params;
                        toAmino(message: _142.Params): _142.ParamsAmino;
                        fromAminoMsg(object: _142.ParamsAminoMsg): _142.Params;
                        toAminoMsg(message: _142.Params): _142.ParamsAminoMsg;
                        fromProtoMsg(message: _142.ParamsProtoMsg): _142.Params;
                        toProto(message: _142.Params): Uint8Array;
                        toProtoMsg(message: _142.Params): _142.ParamsProtoMsg;
                    };
                };
            }
            const v1: {
                typeFromJSON(object: any): _147.Type;
                typeToJSON(object: _147.Type): string;
                protobufPackage: "ibc.applications.interchain_accounts.v1";
                Type: typeof _147.Type;
                TypeSDKType: typeof _147.Type;
                TypeAmino: typeof _147.Type;
                InterchainAccountPacketData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _147.InterchainAccountPacketData;
                    isSDK(o: any): o is _147.InterchainAccountPacketDataSDKType;
                    isAmino(o: any): o is _147.InterchainAccountPacketDataAmino;
                    encode(message: _147.InterchainAccountPacketData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _147.InterchainAccountPacketData;
                    fromJSON(object: any): _147.InterchainAccountPacketData;
                    toJSON(message: _147.InterchainAccountPacketData): unknown;
                    fromPartial(object: Partial<_147.InterchainAccountPacketData>): _147.InterchainAccountPacketData;
                    fromAmino(object: _147.InterchainAccountPacketDataAmino): _147.InterchainAccountPacketData;
                    toAmino(message: _147.InterchainAccountPacketData): _147.InterchainAccountPacketDataAmino;
                    fromAminoMsg(object: _147.InterchainAccountPacketDataAminoMsg): _147.InterchainAccountPacketData;
                    toAminoMsg(message: _147.InterchainAccountPacketData): _147.InterchainAccountPacketDataAminoMsg;
                    fromProtoMsg(message: _147.InterchainAccountPacketDataProtoMsg): _147.InterchainAccountPacketData;
                    toProto(message: _147.InterchainAccountPacketData): Uint8Array;
                    toProtoMsg(message: _147.InterchainAccountPacketData): _147.InterchainAccountPacketDataProtoMsg;
                };
                CosmosTx: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _147.CosmosTx;
                    isSDK(o: any): o is _147.CosmosTxSDKType;
                    isAmino(o: any): o is _147.CosmosTxAmino;
                    encode(message: _147.CosmosTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _147.CosmosTx;
                    fromJSON(object: any): _147.CosmosTx;
                    toJSON(message: _147.CosmosTx): unknown;
                    fromPartial(object: Partial<_147.CosmosTx>): _147.CosmosTx;
                    fromAmino(object: _147.CosmosTxAmino): _147.CosmosTx;
                    toAmino(message: _147.CosmosTx): _147.CosmosTxAmino;
                    fromAminoMsg(object: _147.CosmosTxAminoMsg): _147.CosmosTx;
                    toAminoMsg(message: _147.CosmosTx): _147.CosmosTxAminoMsg;
                    fromProtoMsg(message: _147.CosmosTxProtoMsg): _147.CosmosTx;
                    toProto(message: _147.CosmosTx): Uint8Array;
                    toProtoMsg(message: _147.CosmosTx): _147.CosmosTxProtoMsg;
                };
                Metadata: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _146.Metadata;
                    isSDK(o: any): o is _146.MetadataSDKType;
                    isAmino(o: any): o is _146.MetadataAmino;
                    encode(message: _146.Metadata, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _146.Metadata;
                    fromJSON(object: any): _146.Metadata;
                    toJSON(message: _146.Metadata): unknown;
                    fromPartial(object: Partial<_146.Metadata>): _146.Metadata;
                    fromAmino(object: _146.MetadataAmino): _146.Metadata;
                    toAmino(message: _146.Metadata): _146.MetadataAmino;
                    fromAminoMsg(object: _146.MetadataAminoMsg): _146.Metadata;
                    toAminoMsg(message: _146.Metadata): _146.MetadataAminoMsg;
                    fromProtoMsg(message: _146.MetadataProtoMsg): _146.Metadata;
                    toProto(message: _146.Metadata): Uint8Array;
                    toProtoMsg(message: _146.Metadata): _146.MetadataProtoMsg;
                };
                InterchainAccount: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _145.InterchainAccount;
                    isSDK(o: any): o is _145.InterchainAccountSDKType;
                    isAmino(o: any): o is _145.InterchainAccountAmino;
                    encode(message: _145.InterchainAccount, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _145.InterchainAccount;
                    fromJSON(object: any): _145.InterchainAccount;
                    toJSON(message: _145.InterchainAccount): unknown;
                    fromPartial(object: Partial<_145.InterchainAccount>): _145.InterchainAccount;
                    fromAmino(object: _145.InterchainAccountAmino): _145.InterchainAccount;
                    toAmino(message: _145.InterchainAccount): _145.InterchainAccountAmino;
                    fromAminoMsg(object: _145.InterchainAccountAminoMsg): _145.InterchainAccount;
                    toAminoMsg(message: _145.InterchainAccount): _145.InterchainAccountAminoMsg;
                    fromProtoMsg(message: _145.InterchainAccountProtoMsg): _145.InterchainAccount;
                    toProto(message: _145.InterchainAccount): Uint8Array;
                    toProtoMsg(message: _145.InterchainAccount): _145.InterchainAccountProtoMsg;
                };
            };
        }
        namespace transfer {
            const v1: {
                LCDQueryClient: typeof _254.LCDQueryClient;
                registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
                load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
                MessageComposer: {
                    encoded: {
                        transfer(value: _152.MsgTransfer): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        updateParams(value: _152.MsgUpdateParams): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                    };
                    withTypeUrl: {
                        transfer(value: _152.MsgTransfer): {
                            typeUrl: string;
                            value: _152.MsgTransfer;
                        };
                        updateParams(value: _152.MsgUpdateParams): {
                            typeUrl: string;
                            value: _152.MsgUpdateParams;
                        };
                    };
                    toJSON: {
                        transfer(value: _152.MsgTransfer): {
                            typeUrl: string;
                            value: unknown;
                        };
                        updateParams(value: _152.MsgUpdateParams): {
                            typeUrl: string;
                            value: unknown;
                        };
                    };
                    fromJSON: {
                        transfer(value: any): {
                            typeUrl: string;
                            value: _152.MsgTransfer;
                        };
                        updateParams(value: any): {
                            typeUrl: string;
                            value: _152.MsgUpdateParams;
                        };
                    };
                    fromPartial: {
                        transfer(value: _152.MsgTransfer): {
                            typeUrl: string;
                            value: _152.MsgTransfer;
                        };
                        updateParams(value: _152.MsgUpdateParams): {
                            typeUrl: string;
                            value: _152.MsgUpdateParams;
                        };
                    };
                };
                AminoConverter: {
                    "/ibc.applications.transfer.v1.MsgTransfer": {
                        aminoType: string;
                        toAmino: (message: _152.MsgTransfer) => _152.MsgTransferAmino;
                        fromAmino: (object: _152.MsgTransferAmino) => _152.MsgTransfer;
                    };
                    "/ibc.applications.transfer.v1.MsgUpdateParams": {
                        aminoType: string;
                        toAmino: (message: _152.MsgUpdateParams) => _152.MsgUpdateParamsAmino;
                        fromAmino: (object: _152.MsgUpdateParamsAmino) => _152.MsgUpdateParams;
                    };
                };
                protobufPackage: "ibc.applications.transfer.v1";
                MsgTransfer: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _152.MsgTransfer;
                    isSDK(o: any): o is _152.MsgTransferSDKType;
                    isAmino(o: any): o is _152.MsgTransferAmino;
                    encode(message: _152.MsgTransfer, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _152.MsgTransfer;
                    fromJSON(object: any): _152.MsgTransfer;
                    toJSON(message: _152.MsgTransfer): unknown;
                    fromPartial(object: Partial<_152.MsgTransfer>): _152.MsgTransfer;
                    fromAmino(object: _152.MsgTransferAmino): _152.MsgTransfer;
                    toAmino(message: _152.MsgTransfer): _152.MsgTransferAmino;
                    fromAminoMsg(object: _152.MsgTransferAminoMsg): _152.MsgTransfer;
                    toAminoMsg(message: _152.MsgTransfer): _152.MsgTransferAminoMsg;
                    fromProtoMsg(message: _152.MsgTransferProtoMsg): _152.MsgTransfer;
                    toProto(message: _152.MsgTransfer): Uint8Array;
                    toProtoMsg(message: _152.MsgTransfer): _152.MsgTransferProtoMsg;
                };
                MsgTransferResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _152.MsgTransferResponse;
                    isSDK(o: any): o is _152.MsgTransferResponseSDKType;
                    isAmino(o: any): o is _152.MsgTransferResponseAmino;
                    encode(message: _152.MsgTransferResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _152.MsgTransferResponse;
                    fromJSON(object: any): _152.MsgTransferResponse;
                    toJSON(message: _152.MsgTransferResponse): unknown;
                    fromPartial(object: Partial<_152.MsgTransferResponse>): _152.MsgTransferResponse;
                    fromAmino(object: _152.MsgTransferResponseAmino): _152.MsgTransferResponse;
                    toAmino(message: _152.MsgTransferResponse): _152.MsgTransferResponseAmino;
                    fromAminoMsg(object: _152.MsgTransferResponseAminoMsg): _152.MsgTransferResponse;
                    toAminoMsg(message: _152.MsgTransferResponse): _152.MsgTransferResponseAminoMsg;
                    fromProtoMsg(message: _152.MsgTransferResponseProtoMsg): _152.MsgTransferResponse;
                    toProto(message: _152.MsgTransferResponse): Uint8Array;
                    toProtoMsg(message: _152.MsgTransferResponse): _152.MsgTransferResponseProtoMsg;
                };
                MsgUpdateParams: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _152.MsgUpdateParams;
                    isSDK(o: any): o is _152.MsgUpdateParamsSDKType;
                    isAmino(o: any): o is _152.MsgUpdateParamsAmino;
                    encode(message: _152.MsgUpdateParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _152.MsgUpdateParams;
                    fromJSON(object: any): _152.MsgUpdateParams;
                    toJSON(message: _152.MsgUpdateParams): unknown;
                    fromPartial(object: Partial<_152.MsgUpdateParams>): _152.MsgUpdateParams;
                    fromAmino(object: _152.MsgUpdateParamsAmino): _152.MsgUpdateParams;
                    toAmino(message: _152.MsgUpdateParams): _152.MsgUpdateParamsAmino;
                    fromAminoMsg(object: _152.MsgUpdateParamsAminoMsg): _152.MsgUpdateParams;
                    toAminoMsg(message: _152.MsgUpdateParams): _152.MsgUpdateParamsAminoMsg;
                    fromProtoMsg(message: _152.MsgUpdateParamsProtoMsg): _152.MsgUpdateParams;
                    toProto(message: _152.MsgUpdateParams): Uint8Array;
                    toProtoMsg(message: _152.MsgUpdateParams): _152.MsgUpdateParamsProtoMsg;
                };
                MsgUpdateParamsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _152.MsgUpdateParamsResponse;
                    isSDK(o: any): o is _152.MsgUpdateParamsResponseSDKType;
                    isAmino(o: any): o is _152.MsgUpdateParamsResponseAmino;
                    encode(_: _152.MsgUpdateParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _152.MsgUpdateParamsResponse;
                    fromJSON(_: any): _152.MsgUpdateParamsResponse;
                    toJSON(_: _152.MsgUpdateParamsResponse): unknown;
                    fromPartial(_: Partial<_152.MsgUpdateParamsResponse>): _152.MsgUpdateParamsResponse;
                    fromAmino(_: _152.MsgUpdateParamsResponseAmino): _152.MsgUpdateParamsResponse;
                    toAmino(_: _152.MsgUpdateParamsResponse): _152.MsgUpdateParamsResponseAmino;
                    fromAminoMsg(object: _152.MsgUpdateParamsResponseAminoMsg): _152.MsgUpdateParamsResponse;
                    toAminoMsg(message: _152.MsgUpdateParamsResponse): _152.MsgUpdateParamsResponseAminoMsg;
                    fromProtoMsg(message: _152.MsgUpdateParamsResponseProtoMsg): _152.MsgUpdateParamsResponse;
                    toProto(message: _152.MsgUpdateParamsResponse): Uint8Array;
                    toProtoMsg(message: _152.MsgUpdateParamsResponse): _152.MsgUpdateParamsResponseProtoMsg;
                };
                DenomTrace: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _151.DenomTrace;
                    isSDK(o: any): o is _151.DenomTraceSDKType;
                    isAmino(o: any): o is _151.DenomTraceAmino;
                    encode(message: _151.DenomTrace, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _151.DenomTrace;
                    fromJSON(object: any): _151.DenomTrace;
                    toJSON(message: _151.DenomTrace): unknown;
                    fromPartial(object: Partial<_151.DenomTrace>): _151.DenomTrace;
                    fromAmino(object: _151.DenomTraceAmino): _151.DenomTrace;
                    toAmino(message: _151.DenomTrace): _151.DenomTraceAmino;
                    fromAminoMsg(object: _151.DenomTraceAminoMsg): _151.DenomTrace;
                    toAminoMsg(message: _151.DenomTrace): _151.DenomTraceAminoMsg;
                    fromProtoMsg(message: _151.DenomTraceProtoMsg): _151.DenomTrace;
                    toProto(message: _151.DenomTrace): Uint8Array;
                    toProtoMsg(message: _151.DenomTrace): _151.DenomTraceProtoMsg;
                };
                Params: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _151.Params;
                    isSDK(o: any): o is _151.ParamsSDKType;
                    isAmino(o: any): o is _151.ParamsAmino;
                    encode(message: _151.Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _151.Params;
                    fromJSON(object: any): _151.Params;
                    toJSON(message: _151.Params): unknown;
                    fromPartial(object: Partial<_151.Params>): _151.Params;
                    fromAmino(object: _151.ParamsAmino): _151.Params;
                    toAmino(message: _151.Params): _151.ParamsAmino;
                    fromAminoMsg(object: _151.ParamsAminoMsg): _151.Params;
                    toAminoMsg(message: _151.Params): _151.ParamsAminoMsg;
                    fromProtoMsg(message: _151.ParamsProtoMsg): _151.Params;
                    toProto(message: _151.Params): Uint8Array;
                    toProtoMsg(message: _151.Params): _151.ParamsProtoMsg;
                };
                QueryDenomTraceRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _150.QueryDenomTraceRequest;
                    isSDK(o: any): o is _150.QueryDenomTraceRequestSDKType;
                    isAmino(o: any): o is _150.QueryDenomTraceRequestAmino;
                    encode(message: _150.QueryDenomTraceRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _150.QueryDenomTraceRequest;
                    fromJSON(object: any): _150.QueryDenomTraceRequest;
                    toJSON(message: _150.QueryDenomTraceRequest): unknown;
                    fromPartial(object: Partial<_150.QueryDenomTraceRequest>): _150.QueryDenomTraceRequest;
                    fromAmino(object: _150.QueryDenomTraceRequestAmino): _150.QueryDenomTraceRequest;
                    toAmino(message: _150.QueryDenomTraceRequest): _150.QueryDenomTraceRequestAmino;
                    fromAminoMsg(object: _150.QueryDenomTraceRequestAminoMsg): _150.QueryDenomTraceRequest;
                    toAminoMsg(message: _150.QueryDenomTraceRequest): _150.QueryDenomTraceRequestAminoMsg;
                    fromProtoMsg(message: _150.QueryDenomTraceRequestProtoMsg): _150.QueryDenomTraceRequest;
                    toProto(message: _150.QueryDenomTraceRequest): Uint8Array;
                    toProtoMsg(message: _150.QueryDenomTraceRequest): _150.QueryDenomTraceRequestProtoMsg;
                };
                QueryDenomTraceResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _150.QueryDenomTraceResponse;
                    isSDK(o: any): o is _150.QueryDenomTraceResponseSDKType;
                    isAmino(o: any): o is _150.QueryDenomTraceResponseAmino;
                    encode(message: _150.QueryDenomTraceResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _150.QueryDenomTraceResponse;
                    fromJSON(object: any): _150.QueryDenomTraceResponse;
                    toJSON(message: _150.QueryDenomTraceResponse): unknown;
                    fromPartial(object: Partial<_150.QueryDenomTraceResponse>): _150.QueryDenomTraceResponse;
                    fromAmino(object: _150.QueryDenomTraceResponseAmino): _150.QueryDenomTraceResponse;
                    toAmino(message: _150.QueryDenomTraceResponse): _150.QueryDenomTraceResponseAmino;
                    fromAminoMsg(object: _150.QueryDenomTraceResponseAminoMsg): _150.QueryDenomTraceResponse;
                    toAminoMsg(message: _150.QueryDenomTraceResponse): _150.QueryDenomTraceResponseAminoMsg;
                    fromProtoMsg(message: _150.QueryDenomTraceResponseProtoMsg): _150.QueryDenomTraceResponse;
                    toProto(message: _150.QueryDenomTraceResponse): Uint8Array;
                    toProtoMsg(message: _150.QueryDenomTraceResponse): _150.QueryDenomTraceResponseProtoMsg;
                };
                QueryDenomTracesRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _150.QueryDenomTracesRequest;
                    isSDK(o: any): o is _150.QueryDenomTracesRequestSDKType;
                    isAmino(o: any): o is _150.QueryDenomTracesRequestAmino;
                    encode(message: _150.QueryDenomTracesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _150.QueryDenomTracesRequest;
                    fromJSON(object: any): _150.QueryDenomTracesRequest;
                    toJSON(message: _150.QueryDenomTracesRequest): unknown;
                    fromPartial(object: Partial<_150.QueryDenomTracesRequest>): _150.QueryDenomTracesRequest;
                    fromAmino(object: _150.QueryDenomTracesRequestAmino): _150.QueryDenomTracesRequest;
                    toAmino(message: _150.QueryDenomTracesRequest): _150.QueryDenomTracesRequestAmino;
                    fromAminoMsg(object: _150.QueryDenomTracesRequestAminoMsg): _150.QueryDenomTracesRequest;
                    toAminoMsg(message: _150.QueryDenomTracesRequest): _150.QueryDenomTracesRequestAminoMsg;
                    fromProtoMsg(message: _150.QueryDenomTracesRequestProtoMsg): _150.QueryDenomTracesRequest;
                    toProto(message: _150.QueryDenomTracesRequest): Uint8Array;
                    toProtoMsg(message: _150.QueryDenomTracesRequest): _150.QueryDenomTracesRequestProtoMsg;
                };
                QueryDenomTracesResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _150.QueryDenomTracesResponse;
                    isSDK(o: any): o is _150.QueryDenomTracesResponseSDKType;
                    isAmino(o: any): o is _150.QueryDenomTracesResponseAmino;
                    encode(message: _150.QueryDenomTracesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _150.QueryDenomTracesResponse;
                    fromJSON(object: any): _150.QueryDenomTracesResponse;
                    toJSON(message: _150.QueryDenomTracesResponse): unknown;
                    fromPartial(object: Partial<_150.QueryDenomTracesResponse>): _150.QueryDenomTracesResponse;
                    fromAmino(object: _150.QueryDenomTracesResponseAmino): _150.QueryDenomTracesResponse;
                    toAmino(message: _150.QueryDenomTracesResponse): _150.QueryDenomTracesResponseAmino;
                    fromAminoMsg(object: _150.QueryDenomTracesResponseAminoMsg): _150.QueryDenomTracesResponse;
                    toAminoMsg(message: _150.QueryDenomTracesResponse): _150.QueryDenomTracesResponseAminoMsg;
                    fromProtoMsg(message: _150.QueryDenomTracesResponseProtoMsg): _150.QueryDenomTracesResponse;
                    toProto(message: _150.QueryDenomTracesResponse): Uint8Array;
                    toProtoMsg(message: _150.QueryDenomTracesResponse): _150.QueryDenomTracesResponseProtoMsg;
                };
                QueryParamsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _150.QueryParamsRequest;
                    isSDK(o: any): o is _150.QueryParamsRequestSDKType;
                    isAmino(o: any): o is _150.QueryParamsRequestAmino;
                    encode(_: _150.QueryParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _150.QueryParamsRequest;
                    fromJSON(_: any): _150.QueryParamsRequest;
                    toJSON(_: _150.QueryParamsRequest): unknown;
                    fromPartial(_: Partial<_150.QueryParamsRequest>): _150.QueryParamsRequest;
                    fromAmino(_: _150.QueryParamsRequestAmino): _150.QueryParamsRequest;
                    toAmino(_: _150.QueryParamsRequest): _150.QueryParamsRequestAmino;
                    fromAminoMsg(object: _150.QueryParamsRequestAminoMsg): _150.QueryParamsRequest;
                    toAminoMsg(message: _150.QueryParamsRequest): _150.QueryParamsRequestAminoMsg;
                    fromProtoMsg(message: _150.QueryParamsRequestProtoMsg): _150.QueryParamsRequest;
                    toProto(message: _150.QueryParamsRequest): Uint8Array;
                    toProtoMsg(message: _150.QueryParamsRequest): _150.QueryParamsRequestProtoMsg;
                };
                QueryParamsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _150.QueryParamsResponse;
                    isSDK(o: any): o is _150.QueryParamsResponseSDKType;
                    isAmino(o: any): o is _150.QueryParamsResponseAmino;
                    encode(message: _150.QueryParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _150.QueryParamsResponse;
                    fromJSON(object: any): _150.QueryParamsResponse;
                    toJSON(message: _150.QueryParamsResponse): unknown;
                    fromPartial(object: Partial<_150.QueryParamsResponse>): _150.QueryParamsResponse;
                    fromAmino(object: _150.QueryParamsResponseAmino): _150.QueryParamsResponse;
                    toAmino(message: _150.QueryParamsResponse): _150.QueryParamsResponseAmino;
                    fromAminoMsg(object: _150.QueryParamsResponseAminoMsg): _150.QueryParamsResponse;
                    toAminoMsg(message: _150.QueryParamsResponse): _150.QueryParamsResponseAminoMsg;
                    fromProtoMsg(message: _150.QueryParamsResponseProtoMsg): _150.QueryParamsResponse;
                    toProto(message: _150.QueryParamsResponse): Uint8Array;
                    toProtoMsg(message: _150.QueryParamsResponse): _150.QueryParamsResponseProtoMsg;
                };
                QueryDenomHashRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _150.QueryDenomHashRequest;
                    isSDK(o: any): o is _150.QueryDenomHashRequestSDKType;
                    isAmino(o: any): o is _150.QueryDenomHashRequestAmino;
                    encode(message: _150.QueryDenomHashRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _150.QueryDenomHashRequest;
                    fromJSON(object: any): _150.QueryDenomHashRequest;
                    toJSON(message: _150.QueryDenomHashRequest): unknown;
                    fromPartial(object: Partial<_150.QueryDenomHashRequest>): _150.QueryDenomHashRequest;
                    fromAmino(object: _150.QueryDenomHashRequestAmino): _150.QueryDenomHashRequest;
                    toAmino(message: _150.QueryDenomHashRequest): _150.QueryDenomHashRequestAmino;
                    fromAminoMsg(object: _150.QueryDenomHashRequestAminoMsg): _150.QueryDenomHashRequest;
                    toAminoMsg(message: _150.QueryDenomHashRequest): _150.QueryDenomHashRequestAminoMsg;
                    fromProtoMsg(message: _150.QueryDenomHashRequestProtoMsg): _150.QueryDenomHashRequest;
                    toProto(message: _150.QueryDenomHashRequest): Uint8Array;
                    toProtoMsg(message: _150.QueryDenomHashRequest): _150.QueryDenomHashRequestProtoMsg;
                };
                QueryDenomHashResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _150.QueryDenomHashResponse;
                    isSDK(o: any): o is _150.QueryDenomHashResponseSDKType;
                    isAmino(o: any): o is _150.QueryDenomHashResponseAmino;
                    encode(message: _150.QueryDenomHashResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _150.QueryDenomHashResponse;
                    fromJSON(object: any): _150.QueryDenomHashResponse;
                    toJSON(message: _150.QueryDenomHashResponse): unknown;
                    fromPartial(object: Partial<_150.QueryDenomHashResponse>): _150.QueryDenomHashResponse;
                    fromAmino(object: _150.QueryDenomHashResponseAmino): _150.QueryDenomHashResponse;
                    toAmino(message: _150.QueryDenomHashResponse): _150.QueryDenomHashResponseAmino;
                    fromAminoMsg(object: _150.QueryDenomHashResponseAminoMsg): _150.QueryDenomHashResponse;
                    toAminoMsg(message: _150.QueryDenomHashResponse): _150.QueryDenomHashResponseAminoMsg;
                    fromProtoMsg(message: _150.QueryDenomHashResponseProtoMsg): _150.QueryDenomHashResponse;
                    toProto(message: _150.QueryDenomHashResponse): Uint8Array;
                    toProtoMsg(message: _150.QueryDenomHashResponse): _150.QueryDenomHashResponseProtoMsg;
                };
                QueryEscrowAddressRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _150.QueryEscrowAddressRequest;
                    isSDK(o: any): o is _150.QueryEscrowAddressRequestSDKType;
                    isAmino(o: any): o is _150.QueryEscrowAddressRequestAmino;
                    encode(message: _150.QueryEscrowAddressRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _150.QueryEscrowAddressRequest;
                    fromJSON(object: any): _150.QueryEscrowAddressRequest;
                    toJSON(message: _150.QueryEscrowAddressRequest): unknown;
                    fromPartial(object: Partial<_150.QueryEscrowAddressRequest>): _150.QueryEscrowAddressRequest;
                    fromAmino(object: _150.QueryEscrowAddressRequestAmino): _150.QueryEscrowAddressRequest;
                    toAmino(message: _150.QueryEscrowAddressRequest): _150.QueryEscrowAddressRequestAmino;
                    fromAminoMsg(object: _150.QueryEscrowAddressRequestAminoMsg): _150.QueryEscrowAddressRequest;
                    toAminoMsg(message: _150.QueryEscrowAddressRequest): _150.QueryEscrowAddressRequestAminoMsg;
                    fromProtoMsg(message: _150.QueryEscrowAddressRequestProtoMsg): _150.QueryEscrowAddressRequest;
                    toProto(message: _150.QueryEscrowAddressRequest): Uint8Array;
                    toProtoMsg(message: _150.QueryEscrowAddressRequest): _150.QueryEscrowAddressRequestProtoMsg;
                };
                QueryEscrowAddressResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _150.QueryEscrowAddressResponse;
                    isSDK(o: any): o is _150.QueryEscrowAddressResponseSDKType;
                    isAmino(o: any): o is _150.QueryEscrowAddressResponseAmino;
                    encode(message: _150.QueryEscrowAddressResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _150.QueryEscrowAddressResponse;
                    fromJSON(object: any): _150.QueryEscrowAddressResponse;
                    toJSON(message: _150.QueryEscrowAddressResponse): unknown;
                    fromPartial(object: Partial<_150.QueryEscrowAddressResponse>): _150.QueryEscrowAddressResponse;
                    fromAmino(object: _150.QueryEscrowAddressResponseAmino): _150.QueryEscrowAddressResponse;
                    toAmino(message: _150.QueryEscrowAddressResponse): _150.QueryEscrowAddressResponseAmino;
                    fromAminoMsg(object: _150.QueryEscrowAddressResponseAminoMsg): _150.QueryEscrowAddressResponse;
                    toAminoMsg(message: _150.QueryEscrowAddressResponse): _150.QueryEscrowAddressResponseAminoMsg;
                    fromProtoMsg(message: _150.QueryEscrowAddressResponseProtoMsg): _150.QueryEscrowAddressResponse;
                    toProto(message: _150.QueryEscrowAddressResponse): Uint8Array;
                    toProtoMsg(message: _150.QueryEscrowAddressResponse): _150.QueryEscrowAddressResponseProtoMsg;
                };
                QueryTotalEscrowForDenomRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _150.QueryTotalEscrowForDenomRequest;
                    isSDK(o: any): o is _150.QueryTotalEscrowForDenomRequestSDKType;
                    isAmino(o: any): o is _150.QueryTotalEscrowForDenomRequestAmino;
                    encode(message: _150.QueryTotalEscrowForDenomRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _150.QueryTotalEscrowForDenomRequest;
                    fromJSON(object: any): _150.QueryTotalEscrowForDenomRequest;
                    toJSON(message: _150.QueryTotalEscrowForDenomRequest): unknown;
                    fromPartial(object: Partial<_150.QueryTotalEscrowForDenomRequest>): _150.QueryTotalEscrowForDenomRequest;
                    fromAmino(object: _150.QueryTotalEscrowForDenomRequestAmino): _150.QueryTotalEscrowForDenomRequest;
                    toAmino(message: _150.QueryTotalEscrowForDenomRequest): _150.QueryTotalEscrowForDenomRequestAmino;
                    fromAminoMsg(object: _150.QueryTotalEscrowForDenomRequestAminoMsg): _150.QueryTotalEscrowForDenomRequest;
                    toAminoMsg(message: _150.QueryTotalEscrowForDenomRequest): _150.QueryTotalEscrowForDenomRequestAminoMsg;
                    fromProtoMsg(message: _150.QueryTotalEscrowForDenomRequestProtoMsg): _150.QueryTotalEscrowForDenomRequest;
                    toProto(message: _150.QueryTotalEscrowForDenomRequest): Uint8Array;
                    toProtoMsg(message: _150.QueryTotalEscrowForDenomRequest): _150.QueryTotalEscrowForDenomRequestProtoMsg;
                };
                QueryTotalEscrowForDenomResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _150.QueryTotalEscrowForDenomResponse;
                    isSDK(o: any): o is _150.QueryTotalEscrowForDenomResponseSDKType;
                    isAmino(o: any): o is _150.QueryTotalEscrowForDenomResponseAmino;
                    encode(message: _150.QueryTotalEscrowForDenomResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _150.QueryTotalEscrowForDenomResponse;
                    fromJSON(object: any): _150.QueryTotalEscrowForDenomResponse;
                    toJSON(message: _150.QueryTotalEscrowForDenomResponse): unknown;
                    fromPartial(object: Partial<_150.QueryTotalEscrowForDenomResponse>): _150.QueryTotalEscrowForDenomResponse;
                    fromAmino(object: _150.QueryTotalEscrowForDenomResponseAmino): _150.QueryTotalEscrowForDenomResponse;
                    toAmino(message: _150.QueryTotalEscrowForDenomResponse): _150.QueryTotalEscrowForDenomResponseAmino;
                    fromAminoMsg(object: _150.QueryTotalEscrowForDenomResponseAminoMsg): _150.QueryTotalEscrowForDenomResponse;
                    toAminoMsg(message: _150.QueryTotalEscrowForDenomResponse): _150.QueryTotalEscrowForDenomResponseAminoMsg;
                    fromProtoMsg(message: _150.QueryTotalEscrowForDenomResponseProtoMsg): _150.QueryTotalEscrowForDenomResponse;
                    toProto(message: _150.QueryTotalEscrowForDenomResponse): Uint8Array;
                    toProtoMsg(message: _150.QueryTotalEscrowForDenomResponse): _150.QueryTotalEscrowForDenomResponseProtoMsg;
                };
                GenesisState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _149.GenesisState;
                    isSDK(o: any): o is _149.GenesisStateSDKType;
                    isAmino(o: any): o is _149.GenesisStateAmino;
                    encode(message: _149.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _149.GenesisState;
                    fromJSON(object: any): _149.GenesisState;
                    toJSON(message: _149.GenesisState): unknown;
                    fromPartial(object: Partial<_149.GenesisState>): _149.GenesisState;
                    fromAmino(object: _149.GenesisStateAmino): _149.GenesisState;
                    toAmino(message: _149.GenesisState): _149.GenesisStateAmino;
                    fromAminoMsg(object: _149.GenesisStateAminoMsg): _149.GenesisState;
                    toAminoMsg(message: _149.GenesisState): _149.GenesisStateAminoMsg;
                    fromProtoMsg(message: _149.GenesisStateProtoMsg): _149.GenesisState;
                    toProto(message: _149.GenesisState): Uint8Array;
                    toProtoMsg(message: _149.GenesisState): _149.GenesisStateProtoMsg;
                };
                Allocation: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _148.Allocation;
                    isSDK(o: any): o is _148.AllocationSDKType;
                    isAmino(o: any): o is _148.AllocationAmino;
                    encode(message: _148.Allocation, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _148.Allocation;
                    fromJSON(object: any): _148.Allocation;
                    toJSON(message: _148.Allocation): unknown;
                    fromPartial(object: Partial<_148.Allocation>): _148.Allocation;
                    fromAmino(object: _148.AllocationAmino): _148.Allocation;
                    toAmino(message: _148.Allocation): _148.AllocationAmino;
                    fromAminoMsg(object: _148.AllocationAminoMsg): _148.Allocation;
                    toAminoMsg(message: _148.Allocation): _148.AllocationAminoMsg;
                    fromProtoMsg(message: _148.AllocationProtoMsg): _148.Allocation;
                    toProto(message: _148.Allocation): Uint8Array;
                    toProtoMsg(message: _148.Allocation): _148.AllocationProtoMsg;
                };
                TransferAuthorization: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _148.TransferAuthorization;
                    isSDK(o: any): o is _148.TransferAuthorizationSDKType;
                    isAmino(o: any): o is _148.TransferAuthorizationAmino;
                    encode(message: _148.TransferAuthorization, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _148.TransferAuthorization;
                    fromJSON(object: any): _148.TransferAuthorization;
                    toJSON(message: _148.TransferAuthorization): unknown;
                    fromPartial(object: Partial<_148.TransferAuthorization>): _148.TransferAuthorization;
                    fromAmino(object: _148.TransferAuthorizationAmino): _148.TransferAuthorization;
                    toAmino(message: _148.TransferAuthorization): _148.TransferAuthorizationAmino;
                    fromAminoMsg(object: _148.TransferAuthorizationAminoMsg): _148.TransferAuthorization;
                    toAminoMsg(message: _148.TransferAuthorization): _148.TransferAuthorizationAminoMsg;
                    fromProtoMsg(message: _148.TransferAuthorizationProtoMsg): _148.TransferAuthorization;
                    toProto(message: _148.TransferAuthorization): Uint8Array;
                    toProtoMsg(message: _148.TransferAuthorization): _148.TransferAuthorizationProtoMsg;
                };
            };
            const v2: {
                protobufPackage: "ibc.applications.transfer.v2";
                FungibleTokenPacketData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _153.FungibleTokenPacketData;
                    isSDK(o: any): o is _153.FungibleTokenPacketDataSDKType;
                    isAmino(o: any): o is _153.FungibleTokenPacketDataAmino;
                    encode(message: _153.FungibleTokenPacketData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _153.FungibleTokenPacketData;
                    fromJSON(object: any): _153.FungibleTokenPacketData;
                    toJSON(message: _153.FungibleTokenPacketData): unknown;
                    fromPartial(object: Partial<_153.FungibleTokenPacketData>): _153.FungibleTokenPacketData;
                    fromAmino(object: _153.FungibleTokenPacketDataAmino): _153.FungibleTokenPacketData;
                    toAmino(message: _153.FungibleTokenPacketData): _153.FungibleTokenPacketDataAmino;
                    fromAminoMsg(object: _153.FungibleTokenPacketDataAminoMsg): _153.FungibleTokenPacketData;
                    toAminoMsg(message: _153.FungibleTokenPacketData): _153.FungibleTokenPacketDataAminoMsg;
                    fromProtoMsg(message: _153.FungibleTokenPacketDataProtoMsg): _153.FungibleTokenPacketData;
                    toProto(message: _153.FungibleTokenPacketData): Uint8Array;
                    toProtoMsg(message: _153.FungibleTokenPacketData): _153.FungibleTokenPacketDataProtoMsg;
                };
            };
        }
    }
    namespace core {
        namespace channel {
            const v1: {
                LCDQueryClient: typeof _255.LCDQueryClient;
                registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
                load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
                MessageComposer: {
                    encoded: {
                        channelOpenInit(value: _157.MsgChannelOpenInit): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        channelOpenTry(value: _157.MsgChannelOpenTry): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        channelOpenAck(value: _157.MsgChannelOpenAck): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        channelOpenConfirm(value: _157.MsgChannelOpenConfirm): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        channelCloseInit(value: _157.MsgChannelCloseInit): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        channelCloseConfirm(value: _157.MsgChannelCloseConfirm): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        recvPacket(value: _157.MsgRecvPacket): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        timeout(value: _157.MsgTimeout): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        timeoutOnClose(value: _157.MsgTimeoutOnClose): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        acknowledgement(value: _157.MsgAcknowledgement): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                    };
                    withTypeUrl: {
                        channelOpenInit(value: _157.MsgChannelOpenInit): {
                            typeUrl: string;
                            value: _157.MsgChannelOpenInit;
                        };
                        channelOpenTry(value: _157.MsgChannelOpenTry): {
                            typeUrl: string;
                            value: _157.MsgChannelOpenTry;
                        };
                        channelOpenAck(value: _157.MsgChannelOpenAck): {
                            typeUrl: string;
                            value: _157.MsgChannelOpenAck;
                        };
                        channelOpenConfirm(value: _157.MsgChannelOpenConfirm): {
                            typeUrl: string;
                            value: _157.MsgChannelOpenConfirm;
                        };
                        channelCloseInit(value: _157.MsgChannelCloseInit): {
                            typeUrl: string;
                            value: _157.MsgChannelCloseInit;
                        };
                        channelCloseConfirm(value: _157.MsgChannelCloseConfirm): {
                            typeUrl: string;
                            value: _157.MsgChannelCloseConfirm;
                        };
                        recvPacket(value: _157.MsgRecvPacket): {
                            typeUrl: string;
                            value: _157.MsgRecvPacket;
                        };
                        timeout(value: _157.MsgTimeout): {
                            typeUrl: string;
                            value: _157.MsgTimeout;
                        };
                        timeoutOnClose(value: _157.MsgTimeoutOnClose): {
                            typeUrl: string;
                            value: _157.MsgTimeoutOnClose;
                        };
                        acknowledgement(value: _157.MsgAcknowledgement): {
                            typeUrl: string;
                            value: _157.MsgAcknowledgement;
                        };
                    };
                    toJSON: {
                        channelOpenInit(value: _157.MsgChannelOpenInit): {
                            typeUrl: string;
                            value: unknown;
                        };
                        channelOpenTry(value: _157.MsgChannelOpenTry): {
                            typeUrl: string;
                            value: unknown;
                        };
                        channelOpenAck(value: _157.MsgChannelOpenAck): {
                            typeUrl: string;
                            value: unknown;
                        };
                        channelOpenConfirm(value: _157.MsgChannelOpenConfirm): {
                            typeUrl: string;
                            value: unknown;
                        };
                        channelCloseInit(value: _157.MsgChannelCloseInit): {
                            typeUrl: string;
                            value: unknown;
                        };
                        channelCloseConfirm(value: _157.MsgChannelCloseConfirm): {
                            typeUrl: string;
                            value: unknown;
                        };
                        recvPacket(value: _157.MsgRecvPacket): {
                            typeUrl: string;
                            value: unknown;
                        };
                        timeout(value: _157.MsgTimeout): {
                            typeUrl: string;
                            value: unknown;
                        };
                        timeoutOnClose(value: _157.MsgTimeoutOnClose): {
                            typeUrl: string;
                            value: unknown;
                        };
                        acknowledgement(value: _157.MsgAcknowledgement): {
                            typeUrl: string;
                            value: unknown;
                        };
                    };
                    fromJSON: {
                        channelOpenInit(value: any): {
                            typeUrl: string;
                            value: _157.MsgChannelOpenInit;
                        };
                        channelOpenTry(value: any): {
                            typeUrl: string;
                            value: _157.MsgChannelOpenTry;
                        };
                        channelOpenAck(value: any): {
                            typeUrl: string;
                            value: _157.MsgChannelOpenAck;
                        };
                        channelOpenConfirm(value: any): {
                            typeUrl: string;
                            value: _157.MsgChannelOpenConfirm;
                        };
                        channelCloseInit(value: any): {
                            typeUrl: string;
                            value: _157.MsgChannelCloseInit;
                        };
                        channelCloseConfirm(value: any): {
                            typeUrl: string;
                            value: _157.MsgChannelCloseConfirm;
                        };
                        recvPacket(value: any): {
                            typeUrl: string;
                            value: _157.MsgRecvPacket;
                        };
                        timeout(value: any): {
                            typeUrl: string;
                            value: _157.MsgTimeout;
                        };
                        timeoutOnClose(value: any): {
                            typeUrl: string;
                            value: _157.MsgTimeoutOnClose;
                        };
                        acknowledgement(value: any): {
                            typeUrl: string;
                            value: _157.MsgAcknowledgement;
                        };
                    };
                    fromPartial: {
                        channelOpenInit(value: _157.MsgChannelOpenInit): {
                            typeUrl: string;
                            value: _157.MsgChannelOpenInit;
                        };
                        channelOpenTry(value: _157.MsgChannelOpenTry): {
                            typeUrl: string;
                            value: _157.MsgChannelOpenTry;
                        };
                        channelOpenAck(value: _157.MsgChannelOpenAck): {
                            typeUrl: string;
                            value: _157.MsgChannelOpenAck;
                        };
                        channelOpenConfirm(value: _157.MsgChannelOpenConfirm): {
                            typeUrl: string;
                            value: _157.MsgChannelOpenConfirm;
                        };
                        channelCloseInit(value: _157.MsgChannelCloseInit): {
                            typeUrl: string;
                            value: _157.MsgChannelCloseInit;
                        };
                        channelCloseConfirm(value: _157.MsgChannelCloseConfirm): {
                            typeUrl: string;
                            value: _157.MsgChannelCloseConfirm;
                        };
                        recvPacket(value: _157.MsgRecvPacket): {
                            typeUrl: string;
                            value: _157.MsgRecvPacket;
                        };
                        timeout(value: _157.MsgTimeout): {
                            typeUrl: string;
                            value: _157.MsgTimeout;
                        };
                        timeoutOnClose(value: _157.MsgTimeoutOnClose): {
                            typeUrl: string;
                            value: _157.MsgTimeoutOnClose;
                        };
                        acknowledgement(value: _157.MsgAcknowledgement): {
                            typeUrl: string;
                            value: _157.MsgAcknowledgement;
                        };
                    };
                };
                AminoConverter: {
                    "/ibc.core.channel.v1.MsgChannelOpenInit": {
                        aminoType: string;
                        toAmino: (message: _157.MsgChannelOpenInit) => _157.MsgChannelOpenInitAmino;
                        fromAmino: (object: _157.MsgChannelOpenInitAmino) => _157.MsgChannelOpenInit;
                    };
                    "/ibc.core.channel.v1.MsgChannelOpenTry": {
                        aminoType: string;
                        toAmino: (message: _157.MsgChannelOpenTry) => _157.MsgChannelOpenTryAmino;
                        fromAmino: (object: _157.MsgChannelOpenTryAmino) => _157.MsgChannelOpenTry;
                    };
                    "/ibc.core.channel.v1.MsgChannelOpenAck": {
                        aminoType: string;
                        toAmino: (message: _157.MsgChannelOpenAck) => _157.MsgChannelOpenAckAmino;
                        fromAmino: (object: _157.MsgChannelOpenAckAmino) => _157.MsgChannelOpenAck;
                    };
                    "/ibc.core.channel.v1.MsgChannelOpenConfirm": {
                        aminoType: string;
                        toAmino: (message: _157.MsgChannelOpenConfirm) => _157.MsgChannelOpenConfirmAmino;
                        fromAmino: (object: _157.MsgChannelOpenConfirmAmino) => _157.MsgChannelOpenConfirm;
                    };
                    "/ibc.core.channel.v1.MsgChannelCloseInit": {
                        aminoType: string;
                        toAmino: (message: _157.MsgChannelCloseInit) => _157.MsgChannelCloseInitAmino;
                        fromAmino: (object: _157.MsgChannelCloseInitAmino) => _157.MsgChannelCloseInit;
                    };
                    "/ibc.core.channel.v1.MsgChannelCloseConfirm": {
                        aminoType: string;
                        toAmino: (message: _157.MsgChannelCloseConfirm) => _157.MsgChannelCloseConfirmAmino;
                        fromAmino: (object: _157.MsgChannelCloseConfirmAmino) => _157.MsgChannelCloseConfirm;
                    };
                    "/ibc.core.channel.v1.MsgRecvPacket": {
                        aminoType: string;
                        toAmino: (message: _157.MsgRecvPacket) => _157.MsgRecvPacketAmino;
                        fromAmino: (object: _157.MsgRecvPacketAmino) => _157.MsgRecvPacket;
                    };
                    "/ibc.core.channel.v1.MsgTimeout": {
                        aminoType: string;
                        toAmino: (message: _157.MsgTimeout) => _157.MsgTimeoutAmino;
                        fromAmino: (object: _157.MsgTimeoutAmino) => _157.MsgTimeout;
                    };
                    "/ibc.core.channel.v1.MsgTimeoutOnClose": {
                        aminoType: string;
                        toAmino: (message: _157.MsgTimeoutOnClose) => _157.MsgTimeoutOnCloseAmino;
                        fromAmino: (object: _157.MsgTimeoutOnCloseAmino) => _157.MsgTimeoutOnClose;
                    };
                    "/ibc.core.channel.v1.MsgAcknowledgement": {
                        aminoType: string;
                        toAmino: (message: _157.MsgAcknowledgement) => _157.MsgAcknowledgementAmino;
                        fromAmino: (object: _157.MsgAcknowledgementAmino) => _157.MsgAcknowledgement;
                    };
                };
                responseResultTypeFromJSON(object: any): _157.ResponseResultType;
                responseResultTypeToJSON(object: _157.ResponseResultType): string;
                protobufPackage: "ibc.core.channel.v1";
                ResponseResultType: typeof _157.ResponseResultType;
                ResponseResultTypeSDKType: typeof _157.ResponseResultType;
                ResponseResultTypeAmino: typeof _157.ResponseResultType;
                MsgChannelOpenInit: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _157.MsgChannelOpenInit;
                    isSDK(o: any): o is _157.MsgChannelOpenInitSDKType;
                    isAmino(o: any): o is _157.MsgChannelOpenInitAmino;
                    encode(message: _157.MsgChannelOpenInit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _157.MsgChannelOpenInit;
                    fromJSON(object: any): _157.MsgChannelOpenInit;
                    toJSON(message: _157.MsgChannelOpenInit): unknown;
                    fromPartial(object: Partial<_157.MsgChannelOpenInit>): _157.MsgChannelOpenInit;
                    fromAmino(object: _157.MsgChannelOpenInitAmino): _157.MsgChannelOpenInit;
                    toAmino(message: _157.MsgChannelOpenInit): _157.MsgChannelOpenInitAmino;
                    fromAminoMsg(object: _157.MsgChannelOpenInitAminoMsg): _157.MsgChannelOpenInit;
                    toAminoMsg(message: _157.MsgChannelOpenInit): _157.MsgChannelOpenInitAminoMsg;
                    fromProtoMsg(message: _157.MsgChannelOpenInitProtoMsg): _157.MsgChannelOpenInit;
                    toProto(message: _157.MsgChannelOpenInit): Uint8Array;
                    toProtoMsg(message: _157.MsgChannelOpenInit): _157.MsgChannelOpenInitProtoMsg;
                };
                MsgChannelOpenInitResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _157.MsgChannelOpenInitResponse;
                    isSDK(o: any): o is _157.MsgChannelOpenInitResponseSDKType;
                    isAmino(o: any): o is _157.MsgChannelOpenInitResponseAmino;
                    encode(message: _157.MsgChannelOpenInitResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _157.MsgChannelOpenInitResponse;
                    fromJSON(object: any): _157.MsgChannelOpenInitResponse;
                    toJSON(message: _157.MsgChannelOpenInitResponse): unknown;
                    fromPartial(object: Partial<_157.MsgChannelOpenInitResponse>): _157.MsgChannelOpenInitResponse;
                    fromAmino(object: _157.MsgChannelOpenInitResponseAmino): _157.MsgChannelOpenInitResponse;
                    toAmino(message: _157.MsgChannelOpenInitResponse): _157.MsgChannelOpenInitResponseAmino;
                    fromAminoMsg(object: _157.MsgChannelOpenInitResponseAminoMsg): _157.MsgChannelOpenInitResponse;
                    toAminoMsg(message: _157.MsgChannelOpenInitResponse): _157.MsgChannelOpenInitResponseAminoMsg;
                    fromProtoMsg(message: _157.MsgChannelOpenInitResponseProtoMsg): _157.MsgChannelOpenInitResponse;
                    toProto(message: _157.MsgChannelOpenInitResponse): Uint8Array;
                    toProtoMsg(message: _157.MsgChannelOpenInitResponse): _157.MsgChannelOpenInitResponseProtoMsg;
                };
                MsgChannelOpenTry: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _157.MsgChannelOpenTry;
                    isSDK(o: any): o is _157.MsgChannelOpenTrySDKType;
                    isAmino(o: any): o is _157.MsgChannelOpenTryAmino;
                    encode(message: _157.MsgChannelOpenTry, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _157.MsgChannelOpenTry;
                    fromJSON(object: any): _157.MsgChannelOpenTry;
                    toJSON(message: _157.MsgChannelOpenTry): unknown;
                    fromPartial(object: Partial<_157.MsgChannelOpenTry>): _157.MsgChannelOpenTry;
                    fromAmino(object: _157.MsgChannelOpenTryAmino): _157.MsgChannelOpenTry;
                    toAmino(message: _157.MsgChannelOpenTry): _157.MsgChannelOpenTryAmino;
                    fromAminoMsg(object: _157.MsgChannelOpenTryAminoMsg): _157.MsgChannelOpenTry;
                    toAminoMsg(message: _157.MsgChannelOpenTry): _157.MsgChannelOpenTryAminoMsg;
                    fromProtoMsg(message: _157.MsgChannelOpenTryProtoMsg): _157.MsgChannelOpenTry;
                    toProto(message: _157.MsgChannelOpenTry): Uint8Array;
                    toProtoMsg(message: _157.MsgChannelOpenTry): _157.MsgChannelOpenTryProtoMsg;
                };
                MsgChannelOpenTryResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _157.MsgChannelOpenTryResponse;
                    isSDK(o: any): o is _157.MsgChannelOpenTryResponseSDKType;
                    isAmino(o: any): o is _157.MsgChannelOpenTryResponseAmino;
                    encode(message: _157.MsgChannelOpenTryResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _157.MsgChannelOpenTryResponse;
                    fromJSON(object: any): _157.MsgChannelOpenTryResponse;
                    toJSON(message: _157.MsgChannelOpenTryResponse): unknown;
                    fromPartial(object: Partial<_157.MsgChannelOpenTryResponse>): _157.MsgChannelOpenTryResponse;
                    fromAmino(object: _157.MsgChannelOpenTryResponseAmino): _157.MsgChannelOpenTryResponse;
                    toAmino(message: _157.MsgChannelOpenTryResponse): _157.MsgChannelOpenTryResponseAmino;
                    fromAminoMsg(object: _157.MsgChannelOpenTryResponseAminoMsg): _157.MsgChannelOpenTryResponse;
                    toAminoMsg(message: _157.MsgChannelOpenTryResponse): _157.MsgChannelOpenTryResponseAminoMsg;
                    fromProtoMsg(message: _157.MsgChannelOpenTryResponseProtoMsg): _157.MsgChannelOpenTryResponse;
                    toProto(message: _157.MsgChannelOpenTryResponse): Uint8Array;
                    toProtoMsg(message: _157.MsgChannelOpenTryResponse): _157.MsgChannelOpenTryResponseProtoMsg;
                };
                MsgChannelOpenAck: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _157.MsgChannelOpenAck;
                    isSDK(o: any): o is _157.MsgChannelOpenAckSDKType;
                    isAmino(o: any): o is _157.MsgChannelOpenAckAmino;
                    encode(message: _157.MsgChannelOpenAck, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _157.MsgChannelOpenAck;
                    fromJSON(object: any): _157.MsgChannelOpenAck;
                    toJSON(message: _157.MsgChannelOpenAck): unknown;
                    fromPartial(object: Partial<_157.MsgChannelOpenAck>): _157.MsgChannelOpenAck;
                    fromAmino(object: _157.MsgChannelOpenAckAmino): _157.MsgChannelOpenAck;
                    toAmino(message: _157.MsgChannelOpenAck): _157.MsgChannelOpenAckAmino;
                    fromAminoMsg(object: _157.MsgChannelOpenAckAminoMsg): _157.MsgChannelOpenAck;
                    toAminoMsg(message: _157.MsgChannelOpenAck): _157.MsgChannelOpenAckAminoMsg;
                    fromProtoMsg(message: _157.MsgChannelOpenAckProtoMsg): _157.MsgChannelOpenAck;
                    toProto(message: _157.MsgChannelOpenAck): Uint8Array;
                    toProtoMsg(message: _157.MsgChannelOpenAck): _157.MsgChannelOpenAckProtoMsg;
                };
                MsgChannelOpenAckResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _157.MsgChannelOpenAckResponse;
                    isSDK(o: any): o is _157.MsgChannelOpenAckResponseSDKType;
                    isAmino(o: any): o is _157.MsgChannelOpenAckResponseAmino;
                    encode(_: _157.MsgChannelOpenAckResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _157.MsgChannelOpenAckResponse;
                    fromJSON(_: any): _157.MsgChannelOpenAckResponse;
                    toJSON(_: _157.MsgChannelOpenAckResponse): unknown;
                    fromPartial(_: Partial<_157.MsgChannelOpenAckResponse>): _157.MsgChannelOpenAckResponse;
                    fromAmino(_: _157.MsgChannelOpenAckResponseAmino): _157.MsgChannelOpenAckResponse;
                    toAmino(_: _157.MsgChannelOpenAckResponse): _157.MsgChannelOpenAckResponseAmino;
                    fromAminoMsg(object: _157.MsgChannelOpenAckResponseAminoMsg): _157.MsgChannelOpenAckResponse;
                    toAminoMsg(message: _157.MsgChannelOpenAckResponse): _157.MsgChannelOpenAckResponseAminoMsg;
                    fromProtoMsg(message: _157.MsgChannelOpenAckResponseProtoMsg): _157.MsgChannelOpenAckResponse;
                    toProto(message: _157.MsgChannelOpenAckResponse): Uint8Array;
                    toProtoMsg(message: _157.MsgChannelOpenAckResponse): _157.MsgChannelOpenAckResponseProtoMsg;
                };
                MsgChannelOpenConfirm: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _157.MsgChannelOpenConfirm;
                    isSDK(o: any): o is _157.MsgChannelOpenConfirmSDKType;
                    isAmino(o: any): o is _157.MsgChannelOpenConfirmAmino;
                    encode(message: _157.MsgChannelOpenConfirm, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _157.MsgChannelOpenConfirm;
                    fromJSON(object: any): _157.MsgChannelOpenConfirm;
                    toJSON(message: _157.MsgChannelOpenConfirm): unknown;
                    fromPartial(object: Partial<_157.MsgChannelOpenConfirm>): _157.MsgChannelOpenConfirm;
                    fromAmino(object: _157.MsgChannelOpenConfirmAmino): _157.MsgChannelOpenConfirm;
                    toAmino(message: _157.MsgChannelOpenConfirm): _157.MsgChannelOpenConfirmAmino;
                    fromAminoMsg(object: _157.MsgChannelOpenConfirmAminoMsg): _157.MsgChannelOpenConfirm;
                    toAminoMsg(message: _157.MsgChannelOpenConfirm): _157.MsgChannelOpenConfirmAminoMsg;
                    fromProtoMsg(message: _157.MsgChannelOpenConfirmProtoMsg): _157.MsgChannelOpenConfirm;
                    toProto(message: _157.MsgChannelOpenConfirm): Uint8Array;
                    toProtoMsg(message: _157.MsgChannelOpenConfirm): _157.MsgChannelOpenConfirmProtoMsg;
                };
                MsgChannelOpenConfirmResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _157.MsgChannelOpenConfirmResponse;
                    isSDK(o: any): o is _157.MsgChannelOpenConfirmResponseSDKType;
                    isAmino(o: any): o is _157.MsgChannelOpenConfirmResponseAmino;
                    encode(_: _157.MsgChannelOpenConfirmResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _157.MsgChannelOpenConfirmResponse;
                    fromJSON(_: any): _157.MsgChannelOpenConfirmResponse;
                    toJSON(_: _157.MsgChannelOpenConfirmResponse): unknown;
                    fromPartial(_: Partial<_157.MsgChannelOpenConfirmResponse>): _157.MsgChannelOpenConfirmResponse;
                    fromAmino(_: _157.MsgChannelOpenConfirmResponseAmino): _157.MsgChannelOpenConfirmResponse;
                    toAmino(_: _157.MsgChannelOpenConfirmResponse): _157.MsgChannelOpenConfirmResponseAmino;
                    fromAminoMsg(object: _157.MsgChannelOpenConfirmResponseAminoMsg): _157.MsgChannelOpenConfirmResponse;
                    toAminoMsg(message: _157.MsgChannelOpenConfirmResponse): _157.MsgChannelOpenConfirmResponseAminoMsg;
                    fromProtoMsg(message: _157.MsgChannelOpenConfirmResponseProtoMsg): _157.MsgChannelOpenConfirmResponse;
                    toProto(message: _157.MsgChannelOpenConfirmResponse): Uint8Array;
                    toProtoMsg(message: _157.MsgChannelOpenConfirmResponse): _157.MsgChannelOpenConfirmResponseProtoMsg;
                };
                MsgChannelCloseInit: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _157.MsgChannelCloseInit;
                    isSDK(o: any): o is _157.MsgChannelCloseInitSDKType;
                    isAmino(o: any): o is _157.MsgChannelCloseInitAmino;
                    encode(message: _157.MsgChannelCloseInit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _157.MsgChannelCloseInit;
                    fromJSON(object: any): _157.MsgChannelCloseInit;
                    toJSON(message: _157.MsgChannelCloseInit): unknown;
                    fromPartial(object: Partial<_157.MsgChannelCloseInit>): _157.MsgChannelCloseInit;
                    fromAmino(object: _157.MsgChannelCloseInitAmino): _157.MsgChannelCloseInit;
                    toAmino(message: _157.MsgChannelCloseInit): _157.MsgChannelCloseInitAmino;
                    fromAminoMsg(object: _157.MsgChannelCloseInitAminoMsg): _157.MsgChannelCloseInit;
                    toAminoMsg(message: _157.MsgChannelCloseInit): _157.MsgChannelCloseInitAminoMsg;
                    fromProtoMsg(message: _157.MsgChannelCloseInitProtoMsg): _157.MsgChannelCloseInit;
                    toProto(message: _157.MsgChannelCloseInit): Uint8Array;
                    toProtoMsg(message: _157.MsgChannelCloseInit): _157.MsgChannelCloseInitProtoMsg;
                };
                MsgChannelCloseInitResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _157.MsgChannelCloseInitResponse;
                    isSDK(o: any): o is _157.MsgChannelCloseInitResponseSDKType;
                    isAmino(o: any): o is _157.MsgChannelCloseInitResponseAmino;
                    encode(_: _157.MsgChannelCloseInitResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _157.MsgChannelCloseInitResponse;
                    fromJSON(_: any): _157.MsgChannelCloseInitResponse;
                    toJSON(_: _157.MsgChannelCloseInitResponse): unknown;
                    fromPartial(_: Partial<_157.MsgChannelCloseInitResponse>): _157.MsgChannelCloseInitResponse;
                    fromAmino(_: _157.MsgChannelCloseInitResponseAmino): _157.MsgChannelCloseInitResponse;
                    toAmino(_: _157.MsgChannelCloseInitResponse): _157.MsgChannelCloseInitResponseAmino;
                    fromAminoMsg(object: _157.MsgChannelCloseInitResponseAminoMsg): _157.MsgChannelCloseInitResponse;
                    toAminoMsg(message: _157.MsgChannelCloseInitResponse): _157.MsgChannelCloseInitResponseAminoMsg;
                    fromProtoMsg(message: _157.MsgChannelCloseInitResponseProtoMsg): _157.MsgChannelCloseInitResponse;
                    toProto(message: _157.MsgChannelCloseInitResponse): Uint8Array;
                    toProtoMsg(message: _157.MsgChannelCloseInitResponse): _157.MsgChannelCloseInitResponseProtoMsg;
                };
                MsgChannelCloseConfirm: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _157.MsgChannelCloseConfirm;
                    isSDK(o: any): o is _157.MsgChannelCloseConfirmSDKType;
                    isAmino(o: any): o is _157.MsgChannelCloseConfirmAmino;
                    encode(message: _157.MsgChannelCloseConfirm, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _157.MsgChannelCloseConfirm;
                    fromJSON(object: any): _157.MsgChannelCloseConfirm;
                    toJSON(message: _157.MsgChannelCloseConfirm): unknown;
                    fromPartial(object: Partial<_157.MsgChannelCloseConfirm>): _157.MsgChannelCloseConfirm;
                    fromAmino(object: _157.MsgChannelCloseConfirmAmino): _157.MsgChannelCloseConfirm;
                    toAmino(message: _157.MsgChannelCloseConfirm): _157.MsgChannelCloseConfirmAmino;
                    fromAminoMsg(object: _157.MsgChannelCloseConfirmAminoMsg): _157.MsgChannelCloseConfirm;
                    toAminoMsg(message: _157.MsgChannelCloseConfirm): _157.MsgChannelCloseConfirmAminoMsg;
                    fromProtoMsg(message: _157.MsgChannelCloseConfirmProtoMsg): _157.MsgChannelCloseConfirm;
                    toProto(message: _157.MsgChannelCloseConfirm): Uint8Array;
                    toProtoMsg(message: _157.MsgChannelCloseConfirm): _157.MsgChannelCloseConfirmProtoMsg;
                };
                MsgChannelCloseConfirmResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _157.MsgChannelCloseConfirmResponse;
                    isSDK(o: any): o is _157.MsgChannelCloseConfirmResponseSDKType;
                    isAmino(o: any): o is _157.MsgChannelCloseConfirmResponseAmino;
                    encode(_: _157.MsgChannelCloseConfirmResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _157.MsgChannelCloseConfirmResponse;
                    fromJSON(_: any): _157.MsgChannelCloseConfirmResponse;
                    toJSON(_: _157.MsgChannelCloseConfirmResponse): unknown;
                    fromPartial(_: Partial<_157.MsgChannelCloseConfirmResponse>): _157.MsgChannelCloseConfirmResponse;
                    fromAmino(_: _157.MsgChannelCloseConfirmResponseAmino): _157.MsgChannelCloseConfirmResponse;
                    toAmino(_: _157.MsgChannelCloseConfirmResponse): _157.MsgChannelCloseConfirmResponseAmino;
                    fromAminoMsg(object: _157.MsgChannelCloseConfirmResponseAminoMsg): _157.MsgChannelCloseConfirmResponse;
                    toAminoMsg(message: _157.MsgChannelCloseConfirmResponse): _157.MsgChannelCloseConfirmResponseAminoMsg;
                    fromProtoMsg(message: _157.MsgChannelCloseConfirmResponseProtoMsg): _157.MsgChannelCloseConfirmResponse;
                    toProto(message: _157.MsgChannelCloseConfirmResponse): Uint8Array;
                    toProtoMsg(message: _157.MsgChannelCloseConfirmResponse): _157.MsgChannelCloseConfirmResponseProtoMsg;
                };
                MsgRecvPacket: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _157.MsgRecvPacket;
                    isSDK(o: any): o is _157.MsgRecvPacketSDKType;
                    isAmino(o: any): o is _157.MsgRecvPacketAmino;
                    encode(message: _157.MsgRecvPacket, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _157.MsgRecvPacket;
                    fromJSON(object: any): _157.MsgRecvPacket;
                    toJSON(message: _157.MsgRecvPacket): unknown;
                    fromPartial(object: Partial<_157.MsgRecvPacket>): _157.MsgRecvPacket;
                    fromAmino(object: _157.MsgRecvPacketAmino): _157.MsgRecvPacket;
                    toAmino(message: _157.MsgRecvPacket): _157.MsgRecvPacketAmino;
                    fromAminoMsg(object: _157.MsgRecvPacketAminoMsg): _157.MsgRecvPacket;
                    toAminoMsg(message: _157.MsgRecvPacket): _157.MsgRecvPacketAminoMsg;
                    fromProtoMsg(message: _157.MsgRecvPacketProtoMsg): _157.MsgRecvPacket;
                    toProto(message: _157.MsgRecvPacket): Uint8Array;
                    toProtoMsg(message: _157.MsgRecvPacket): _157.MsgRecvPacketProtoMsg;
                };
                MsgRecvPacketResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _157.MsgRecvPacketResponse;
                    isSDK(o: any): o is _157.MsgRecvPacketResponseSDKType;
                    isAmino(o: any): o is _157.MsgRecvPacketResponseAmino;
                    encode(message: _157.MsgRecvPacketResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _157.MsgRecvPacketResponse;
                    fromJSON(object: any): _157.MsgRecvPacketResponse;
                    toJSON(message: _157.MsgRecvPacketResponse): unknown;
                    fromPartial(object: Partial<_157.MsgRecvPacketResponse>): _157.MsgRecvPacketResponse;
                    fromAmino(object: _157.MsgRecvPacketResponseAmino): _157.MsgRecvPacketResponse;
                    toAmino(message: _157.MsgRecvPacketResponse): _157.MsgRecvPacketResponseAmino;
                    fromAminoMsg(object: _157.MsgRecvPacketResponseAminoMsg): _157.MsgRecvPacketResponse;
                    toAminoMsg(message: _157.MsgRecvPacketResponse): _157.MsgRecvPacketResponseAminoMsg;
                    fromProtoMsg(message: _157.MsgRecvPacketResponseProtoMsg): _157.MsgRecvPacketResponse;
                    toProto(message: _157.MsgRecvPacketResponse): Uint8Array;
                    toProtoMsg(message: _157.MsgRecvPacketResponse): _157.MsgRecvPacketResponseProtoMsg;
                };
                MsgTimeout: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _157.MsgTimeout;
                    isSDK(o: any): o is _157.MsgTimeoutSDKType;
                    isAmino(o: any): o is _157.MsgTimeoutAmino;
                    encode(message: _157.MsgTimeout, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _157.MsgTimeout;
                    fromJSON(object: any): _157.MsgTimeout;
                    toJSON(message: _157.MsgTimeout): unknown;
                    fromPartial(object: Partial<_157.MsgTimeout>): _157.MsgTimeout;
                    fromAmino(object: _157.MsgTimeoutAmino): _157.MsgTimeout;
                    toAmino(message: _157.MsgTimeout): _157.MsgTimeoutAmino;
                    fromAminoMsg(object: _157.MsgTimeoutAminoMsg): _157.MsgTimeout;
                    toAminoMsg(message: _157.MsgTimeout): _157.MsgTimeoutAminoMsg;
                    fromProtoMsg(message: _157.MsgTimeoutProtoMsg): _157.MsgTimeout;
                    toProto(message: _157.MsgTimeout): Uint8Array;
                    toProtoMsg(message: _157.MsgTimeout): _157.MsgTimeoutProtoMsg;
                };
                MsgTimeoutResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _157.MsgTimeoutResponse;
                    isSDK(o: any): o is _157.MsgTimeoutResponseSDKType;
                    isAmino(o: any): o is _157.MsgTimeoutResponseAmino;
                    encode(message: _157.MsgTimeoutResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _157.MsgTimeoutResponse;
                    fromJSON(object: any): _157.MsgTimeoutResponse;
                    toJSON(message: _157.MsgTimeoutResponse): unknown;
                    fromPartial(object: Partial<_157.MsgTimeoutResponse>): _157.MsgTimeoutResponse;
                    fromAmino(object: _157.MsgTimeoutResponseAmino): _157.MsgTimeoutResponse;
                    toAmino(message: _157.MsgTimeoutResponse): _157.MsgTimeoutResponseAmino;
                    fromAminoMsg(object: _157.MsgTimeoutResponseAminoMsg): _157.MsgTimeoutResponse;
                    toAminoMsg(message: _157.MsgTimeoutResponse): _157.MsgTimeoutResponseAminoMsg;
                    fromProtoMsg(message: _157.MsgTimeoutResponseProtoMsg): _157.MsgTimeoutResponse;
                    toProto(message: _157.MsgTimeoutResponse): Uint8Array;
                    toProtoMsg(message: _157.MsgTimeoutResponse): _157.MsgTimeoutResponseProtoMsg;
                };
                MsgTimeoutOnClose: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _157.MsgTimeoutOnClose;
                    isSDK(o: any): o is _157.MsgTimeoutOnCloseSDKType;
                    isAmino(o: any): o is _157.MsgTimeoutOnCloseAmino;
                    encode(message: _157.MsgTimeoutOnClose, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _157.MsgTimeoutOnClose;
                    fromJSON(object: any): _157.MsgTimeoutOnClose;
                    toJSON(message: _157.MsgTimeoutOnClose): unknown;
                    fromPartial(object: Partial<_157.MsgTimeoutOnClose>): _157.MsgTimeoutOnClose;
                    fromAmino(object: _157.MsgTimeoutOnCloseAmino): _157.MsgTimeoutOnClose;
                    toAmino(message: _157.MsgTimeoutOnClose): _157.MsgTimeoutOnCloseAmino;
                    fromAminoMsg(object: _157.MsgTimeoutOnCloseAminoMsg): _157.MsgTimeoutOnClose;
                    toAminoMsg(message: _157.MsgTimeoutOnClose): _157.MsgTimeoutOnCloseAminoMsg;
                    fromProtoMsg(message: _157.MsgTimeoutOnCloseProtoMsg): _157.MsgTimeoutOnClose;
                    toProto(message: _157.MsgTimeoutOnClose): Uint8Array;
                    toProtoMsg(message: _157.MsgTimeoutOnClose): _157.MsgTimeoutOnCloseProtoMsg;
                };
                MsgTimeoutOnCloseResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _157.MsgTimeoutOnCloseResponse;
                    isSDK(o: any): o is _157.MsgTimeoutOnCloseResponseSDKType;
                    isAmino(o: any): o is _157.MsgTimeoutOnCloseResponseAmino;
                    encode(message: _157.MsgTimeoutOnCloseResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _157.MsgTimeoutOnCloseResponse;
                    fromJSON(object: any): _157.MsgTimeoutOnCloseResponse;
                    toJSON(message: _157.MsgTimeoutOnCloseResponse): unknown;
                    fromPartial(object: Partial<_157.MsgTimeoutOnCloseResponse>): _157.MsgTimeoutOnCloseResponse;
                    fromAmino(object: _157.MsgTimeoutOnCloseResponseAmino): _157.MsgTimeoutOnCloseResponse;
                    toAmino(message: _157.MsgTimeoutOnCloseResponse): _157.MsgTimeoutOnCloseResponseAmino;
                    fromAminoMsg(object: _157.MsgTimeoutOnCloseResponseAminoMsg): _157.MsgTimeoutOnCloseResponse;
                    toAminoMsg(message: _157.MsgTimeoutOnCloseResponse): _157.MsgTimeoutOnCloseResponseAminoMsg;
                    fromProtoMsg(message: _157.MsgTimeoutOnCloseResponseProtoMsg): _157.MsgTimeoutOnCloseResponse;
                    toProto(message: _157.MsgTimeoutOnCloseResponse): Uint8Array;
                    toProtoMsg(message: _157.MsgTimeoutOnCloseResponse): _157.MsgTimeoutOnCloseResponseProtoMsg;
                };
                MsgAcknowledgement: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _157.MsgAcknowledgement;
                    isSDK(o: any): o is _157.MsgAcknowledgementSDKType;
                    isAmino(o: any): o is _157.MsgAcknowledgementAmino;
                    encode(message: _157.MsgAcknowledgement, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _157.MsgAcknowledgement;
                    fromJSON(object: any): _157.MsgAcknowledgement;
                    toJSON(message: _157.MsgAcknowledgement): unknown;
                    fromPartial(object: Partial<_157.MsgAcknowledgement>): _157.MsgAcknowledgement;
                    fromAmino(object: _157.MsgAcknowledgementAmino): _157.MsgAcknowledgement;
                    toAmino(message: _157.MsgAcknowledgement): _157.MsgAcknowledgementAmino;
                    fromAminoMsg(object: _157.MsgAcknowledgementAminoMsg): _157.MsgAcknowledgement;
                    toAminoMsg(message: _157.MsgAcknowledgement): _157.MsgAcknowledgementAminoMsg;
                    fromProtoMsg(message: _157.MsgAcknowledgementProtoMsg): _157.MsgAcknowledgement;
                    toProto(message: _157.MsgAcknowledgement): Uint8Array;
                    toProtoMsg(message: _157.MsgAcknowledgement): _157.MsgAcknowledgementProtoMsg;
                };
                MsgAcknowledgementResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _157.MsgAcknowledgementResponse;
                    isSDK(o: any): o is _157.MsgAcknowledgementResponseSDKType;
                    isAmino(o: any): o is _157.MsgAcknowledgementResponseAmino;
                    encode(message: _157.MsgAcknowledgementResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _157.MsgAcknowledgementResponse;
                    fromJSON(object: any): _157.MsgAcknowledgementResponse;
                    toJSON(message: _157.MsgAcknowledgementResponse): unknown;
                    fromPartial(object: Partial<_157.MsgAcknowledgementResponse>): _157.MsgAcknowledgementResponse;
                    fromAmino(object: _157.MsgAcknowledgementResponseAmino): _157.MsgAcknowledgementResponse;
                    toAmino(message: _157.MsgAcknowledgementResponse): _157.MsgAcknowledgementResponseAmino;
                    fromAminoMsg(object: _157.MsgAcknowledgementResponseAminoMsg): _157.MsgAcknowledgementResponse;
                    toAminoMsg(message: _157.MsgAcknowledgementResponse): _157.MsgAcknowledgementResponseAminoMsg;
                    fromProtoMsg(message: _157.MsgAcknowledgementResponseProtoMsg): _157.MsgAcknowledgementResponse;
                    toProto(message: _157.MsgAcknowledgementResponse): Uint8Array;
                    toProtoMsg(message: _157.MsgAcknowledgementResponse): _157.MsgAcknowledgementResponseProtoMsg;
                };
                QueryChannelRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _156.QueryChannelRequest;
                    isSDK(o: any): o is _156.QueryChannelRequestSDKType;
                    isAmino(o: any): o is _156.QueryChannelRequestAmino;
                    encode(message: _156.QueryChannelRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _156.QueryChannelRequest;
                    fromJSON(object: any): _156.QueryChannelRequest;
                    toJSON(message: _156.QueryChannelRequest): unknown;
                    fromPartial(object: Partial<_156.QueryChannelRequest>): _156.QueryChannelRequest;
                    fromAmino(object: _156.QueryChannelRequestAmino): _156.QueryChannelRequest;
                    toAmino(message: _156.QueryChannelRequest): _156.QueryChannelRequestAmino;
                    fromAminoMsg(object: _156.QueryChannelRequestAminoMsg): _156.QueryChannelRequest;
                    toAminoMsg(message: _156.QueryChannelRequest): _156.QueryChannelRequestAminoMsg;
                    fromProtoMsg(message: _156.QueryChannelRequestProtoMsg): _156.QueryChannelRequest;
                    toProto(message: _156.QueryChannelRequest): Uint8Array;
                    toProtoMsg(message: _156.QueryChannelRequest): _156.QueryChannelRequestProtoMsg;
                };
                QueryChannelResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _156.QueryChannelResponse;
                    isSDK(o: any): o is _156.QueryChannelResponseSDKType;
                    isAmino(o: any): o is _156.QueryChannelResponseAmino;
                    encode(message: _156.QueryChannelResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _156.QueryChannelResponse;
                    fromJSON(object: any): _156.QueryChannelResponse;
                    toJSON(message: _156.QueryChannelResponse): unknown;
                    fromPartial(object: Partial<_156.QueryChannelResponse>): _156.QueryChannelResponse;
                    fromAmino(object: _156.QueryChannelResponseAmino): _156.QueryChannelResponse;
                    toAmino(message: _156.QueryChannelResponse): _156.QueryChannelResponseAmino;
                    fromAminoMsg(object: _156.QueryChannelResponseAminoMsg): _156.QueryChannelResponse;
                    toAminoMsg(message: _156.QueryChannelResponse): _156.QueryChannelResponseAminoMsg;
                    fromProtoMsg(message: _156.QueryChannelResponseProtoMsg): _156.QueryChannelResponse;
                    toProto(message: _156.QueryChannelResponse): Uint8Array;
                    toProtoMsg(message: _156.QueryChannelResponse): _156.QueryChannelResponseProtoMsg;
                };
                QueryChannelsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _156.QueryChannelsRequest;
                    isSDK(o: any): o is _156.QueryChannelsRequestSDKType;
                    isAmino(o: any): o is _156.QueryChannelsRequestAmino;
                    encode(message: _156.QueryChannelsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _156.QueryChannelsRequest;
                    fromJSON(object: any): _156.QueryChannelsRequest;
                    toJSON(message: _156.QueryChannelsRequest): unknown;
                    fromPartial(object: Partial<_156.QueryChannelsRequest>): _156.QueryChannelsRequest;
                    fromAmino(object: _156.QueryChannelsRequestAmino): _156.QueryChannelsRequest;
                    toAmino(message: _156.QueryChannelsRequest): _156.QueryChannelsRequestAmino;
                    fromAminoMsg(object: _156.QueryChannelsRequestAminoMsg): _156.QueryChannelsRequest;
                    toAminoMsg(message: _156.QueryChannelsRequest): _156.QueryChannelsRequestAminoMsg;
                    fromProtoMsg(message: _156.QueryChannelsRequestProtoMsg): _156.QueryChannelsRequest;
                    toProto(message: _156.QueryChannelsRequest): Uint8Array;
                    toProtoMsg(message: _156.QueryChannelsRequest): _156.QueryChannelsRequestProtoMsg;
                };
                QueryChannelsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _156.QueryChannelsResponse;
                    isSDK(o: any): o is _156.QueryChannelsResponseSDKType;
                    isAmino(o: any): o is _156.QueryChannelsResponseAmino;
                    encode(message: _156.QueryChannelsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _156.QueryChannelsResponse;
                    fromJSON(object: any): _156.QueryChannelsResponse;
                    toJSON(message: _156.QueryChannelsResponse): unknown;
                    fromPartial(object: Partial<_156.QueryChannelsResponse>): _156.QueryChannelsResponse;
                    fromAmino(object: _156.QueryChannelsResponseAmino): _156.QueryChannelsResponse;
                    toAmino(message: _156.QueryChannelsResponse): _156.QueryChannelsResponseAmino;
                    fromAminoMsg(object: _156.QueryChannelsResponseAminoMsg): _156.QueryChannelsResponse;
                    toAminoMsg(message: _156.QueryChannelsResponse): _156.QueryChannelsResponseAminoMsg;
                    fromProtoMsg(message: _156.QueryChannelsResponseProtoMsg): _156.QueryChannelsResponse;
                    toProto(message: _156.QueryChannelsResponse): Uint8Array;
                    toProtoMsg(message: _156.QueryChannelsResponse): _156.QueryChannelsResponseProtoMsg;
                };
                QueryConnectionChannelsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _156.QueryConnectionChannelsRequest;
                    isSDK(o: any): o is _156.QueryConnectionChannelsRequestSDKType;
                    isAmino(o: any): o is _156.QueryConnectionChannelsRequestAmino;
                    encode(message: _156.QueryConnectionChannelsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _156.QueryConnectionChannelsRequest;
                    fromJSON(object: any): _156.QueryConnectionChannelsRequest;
                    toJSON(message: _156.QueryConnectionChannelsRequest): unknown;
                    fromPartial(object: Partial<_156.QueryConnectionChannelsRequest>): _156.QueryConnectionChannelsRequest;
                    fromAmino(object: _156.QueryConnectionChannelsRequestAmino): _156.QueryConnectionChannelsRequest;
                    toAmino(message: _156.QueryConnectionChannelsRequest): _156.QueryConnectionChannelsRequestAmino;
                    fromAminoMsg(object: _156.QueryConnectionChannelsRequestAminoMsg): _156.QueryConnectionChannelsRequest;
                    toAminoMsg(message: _156.QueryConnectionChannelsRequest): _156.QueryConnectionChannelsRequestAminoMsg;
                    fromProtoMsg(message: _156.QueryConnectionChannelsRequestProtoMsg): _156.QueryConnectionChannelsRequest;
                    toProto(message: _156.QueryConnectionChannelsRequest): Uint8Array;
                    toProtoMsg(message: _156.QueryConnectionChannelsRequest): _156.QueryConnectionChannelsRequestProtoMsg;
                };
                QueryConnectionChannelsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _156.QueryConnectionChannelsResponse;
                    isSDK(o: any): o is _156.QueryConnectionChannelsResponseSDKType;
                    isAmino(o: any): o is _156.QueryConnectionChannelsResponseAmino;
                    encode(message: _156.QueryConnectionChannelsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _156.QueryConnectionChannelsResponse;
                    fromJSON(object: any): _156.QueryConnectionChannelsResponse;
                    toJSON(message: _156.QueryConnectionChannelsResponse): unknown;
                    fromPartial(object: Partial<_156.QueryConnectionChannelsResponse>): _156.QueryConnectionChannelsResponse;
                    fromAmino(object: _156.QueryConnectionChannelsResponseAmino): _156.QueryConnectionChannelsResponse;
                    toAmino(message: _156.QueryConnectionChannelsResponse): _156.QueryConnectionChannelsResponseAmino;
                    fromAminoMsg(object: _156.QueryConnectionChannelsResponseAminoMsg): _156.QueryConnectionChannelsResponse;
                    toAminoMsg(message: _156.QueryConnectionChannelsResponse): _156.QueryConnectionChannelsResponseAminoMsg;
                    fromProtoMsg(message: _156.QueryConnectionChannelsResponseProtoMsg): _156.QueryConnectionChannelsResponse;
                    toProto(message: _156.QueryConnectionChannelsResponse): Uint8Array;
                    toProtoMsg(message: _156.QueryConnectionChannelsResponse): _156.QueryConnectionChannelsResponseProtoMsg;
                };
                QueryChannelClientStateRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _156.QueryChannelClientStateRequest;
                    isSDK(o: any): o is _156.QueryChannelClientStateRequestSDKType;
                    isAmino(o: any): o is _156.QueryChannelClientStateRequestAmino;
                    encode(message: _156.QueryChannelClientStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _156.QueryChannelClientStateRequest;
                    fromJSON(object: any): _156.QueryChannelClientStateRequest;
                    toJSON(message: _156.QueryChannelClientStateRequest): unknown;
                    fromPartial(object: Partial<_156.QueryChannelClientStateRequest>): _156.QueryChannelClientStateRequest;
                    fromAmino(object: _156.QueryChannelClientStateRequestAmino): _156.QueryChannelClientStateRequest;
                    toAmino(message: _156.QueryChannelClientStateRequest): _156.QueryChannelClientStateRequestAmino;
                    fromAminoMsg(object: _156.QueryChannelClientStateRequestAminoMsg): _156.QueryChannelClientStateRequest;
                    toAminoMsg(message: _156.QueryChannelClientStateRequest): _156.QueryChannelClientStateRequestAminoMsg;
                    fromProtoMsg(message: _156.QueryChannelClientStateRequestProtoMsg): _156.QueryChannelClientStateRequest;
                    toProto(message: _156.QueryChannelClientStateRequest): Uint8Array;
                    toProtoMsg(message: _156.QueryChannelClientStateRequest): _156.QueryChannelClientStateRequestProtoMsg;
                };
                QueryChannelClientStateResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _156.QueryChannelClientStateResponse;
                    isSDK(o: any): o is _156.QueryChannelClientStateResponseSDKType;
                    isAmino(o: any): o is _156.QueryChannelClientStateResponseAmino;
                    encode(message: _156.QueryChannelClientStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _156.QueryChannelClientStateResponse;
                    fromJSON(object: any): _156.QueryChannelClientStateResponse;
                    toJSON(message: _156.QueryChannelClientStateResponse): unknown;
                    fromPartial(object: Partial<_156.QueryChannelClientStateResponse>): _156.QueryChannelClientStateResponse;
                    fromAmino(object: _156.QueryChannelClientStateResponseAmino): _156.QueryChannelClientStateResponse;
                    toAmino(message: _156.QueryChannelClientStateResponse): _156.QueryChannelClientStateResponseAmino;
                    fromAminoMsg(object: _156.QueryChannelClientStateResponseAminoMsg): _156.QueryChannelClientStateResponse;
                    toAminoMsg(message: _156.QueryChannelClientStateResponse): _156.QueryChannelClientStateResponseAminoMsg;
                    fromProtoMsg(message: _156.QueryChannelClientStateResponseProtoMsg): _156.QueryChannelClientStateResponse;
                    toProto(message: _156.QueryChannelClientStateResponse): Uint8Array;
                    toProtoMsg(message: _156.QueryChannelClientStateResponse): _156.QueryChannelClientStateResponseProtoMsg;
                };
                QueryChannelConsensusStateRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _156.QueryChannelConsensusStateRequest;
                    isSDK(o: any): o is _156.QueryChannelConsensusStateRequestSDKType;
                    isAmino(o: any): o is _156.QueryChannelConsensusStateRequestAmino;
                    encode(message: _156.QueryChannelConsensusStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _156.QueryChannelConsensusStateRequest;
                    fromJSON(object: any): _156.QueryChannelConsensusStateRequest;
                    toJSON(message: _156.QueryChannelConsensusStateRequest): unknown;
                    fromPartial(object: Partial<_156.QueryChannelConsensusStateRequest>): _156.QueryChannelConsensusStateRequest;
                    fromAmino(object: _156.QueryChannelConsensusStateRequestAmino): _156.QueryChannelConsensusStateRequest;
                    toAmino(message: _156.QueryChannelConsensusStateRequest): _156.QueryChannelConsensusStateRequestAmino;
                    fromAminoMsg(object: _156.QueryChannelConsensusStateRequestAminoMsg): _156.QueryChannelConsensusStateRequest;
                    toAminoMsg(message: _156.QueryChannelConsensusStateRequest): _156.QueryChannelConsensusStateRequestAminoMsg;
                    fromProtoMsg(message: _156.QueryChannelConsensusStateRequestProtoMsg): _156.QueryChannelConsensusStateRequest;
                    toProto(message: _156.QueryChannelConsensusStateRequest): Uint8Array;
                    toProtoMsg(message: _156.QueryChannelConsensusStateRequest): _156.QueryChannelConsensusStateRequestProtoMsg;
                };
                QueryChannelConsensusStateResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _156.QueryChannelConsensusStateResponse;
                    isSDK(o: any): o is _156.QueryChannelConsensusStateResponseSDKType;
                    isAmino(o: any): o is _156.QueryChannelConsensusStateResponseAmino;
                    encode(message: _156.QueryChannelConsensusStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _156.QueryChannelConsensusStateResponse;
                    fromJSON(object: any): _156.QueryChannelConsensusStateResponse;
                    toJSON(message: _156.QueryChannelConsensusStateResponse): unknown;
                    fromPartial(object: Partial<_156.QueryChannelConsensusStateResponse>): _156.QueryChannelConsensusStateResponse;
                    fromAmino(object: _156.QueryChannelConsensusStateResponseAmino): _156.QueryChannelConsensusStateResponse;
                    toAmino(message: _156.QueryChannelConsensusStateResponse): _156.QueryChannelConsensusStateResponseAmino;
                    fromAminoMsg(object: _156.QueryChannelConsensusStateResponseAminoMsg): _156.QueryChannelConsensusStateResponse;
                    toAminoMsg(message: _156.QueryChannelConsensusStateResponse): _156.QueryChannelConsensusStateResponseAminoMsg;
                    fromProtoMsg(message: _156.QueryChannelConsensusStateResponseProtoMsg): _156.QueryChannelConsensusStateResponse;
                    toProto(message: _156.QueryChannelConsensusStateResponse): Uint8Array;
                    toProtoMsg(message: _156.QueryChannelConsensusStateResponse): _156.QueryChannelConsensusStateResponseProtoMsg;
                };
                QueryPacketCommitmentRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _156.QueryPacketCommitmentRequest;
                    isSDK(o: any): o is _156.QueryPacketCommitmentRequestSDKType;
                    isAmino(o: any): o is _156.QueryPacketCommitmentRequestAmino;
                    encode(message: _156.QueryPacketCommitmentRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _156.QueryPacketCommitmentRequest;
                    fromJSON(object: any): _156.QueryPacketCommitmentRequest;
                    toJSON(message: _156.QueryPacketCommitmentRequest): unknown;
                    fromPartial(object: Partial<_156.QueryPacketCommitmentRequest>): _156.QueryPacketCommitmentRequest;
                    fromAmino(object: _156.QueryPacketCommitmentRequestAmino): _156.QueryPacketCommitmentRequest;
                    toAmino(message: _156.QueryPacketCommitmentRequest): _156.QueryPacketCommitmentRequestAmino;
                    fromAminoMsg(object: _156.QueryPacketCommitmentRequestAminoMsg): _156.QueryPacketCommitmentRequest;
                    toAminoMsg(message: _156.QueryPacketCommitmentRequest): _156.QueryPacketCommitmentRequestAminoMsg;
                    fromProtoMsg(message: _156.QueryPacketCommitmentRequestProtoMsg): _156.QueryPacketCommitmentRequest;
                    toProto(message: _156.QueryPacketCommitmentRequest): Uint8Array;
                    toProtoMsg(message: _156.QueryPacketCommitmentRequest): _156.QueryPacketCommitmentRequestProtoMsg;
                };
                QueryPacketCommitmentResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _156.QueryPacketCommitmentResponse;
                    isSDK(o: any): o is _156.QueryPacketCommitmentResponseSDKType;
                    isAmino(o: any): o is _156.QueryPacketCommitmentResponseAmino;
                    encode(message: _156.QueryPacketCommitmentResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _156.QueryPacketCommitmentResponse;
                    fromJSON(object: any): _156.QueryPacketCommitmentResponse;
                    toJSON(message: _156.QueryPacketCommitmentResponse): unknown;
                    fromPartial(object: Partial<_156.QueryPacketCommitmentResponse>): _156.QueryPacketCommitmentResponse;
                    fromAmino(object: _156.QueryPacketCommitmentResponseAmino): _156.QueryPacketCommitmentResponse;
                    toAmino(message: _156.QueryPacketCommitmentResponse): _156.QueryPacketCommitmentResponseAmino;
                    fromAminoMsg(object: _156.QueryPacketCommitmentResponseAminoMsg): _156.QueryPacketCommitmentResponse;
                    toAminoMsg(message: _156.QueryPacketCommitmentResponse): _156.QueryPacketCommitmentResponseAminoMsg;
                    fromProtoMsg(message: _156.QueryPacketCommitmentResponseProtoMsg): _156.QueryPacketCommitmentResponse;
                    toProto(message: _156.QueryPacketCommitmentResponse): Uint8Array;
                    toProtoMsg(message: _156.QueryPacketCommitmentResponse): _156.QueryPacketCommitmentResponseProtoMsg;
                };
                QueryPacketCommitmentsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _156.QueryPacketCommitmentsRequest;
                    isSDK(o: any): o is _156.QueryPacketCommitmentsRequestSDKType;
                    isAmino(o: any): o is _156.QueryPacketCommitmentsRequestAmino;
                    encode(message: _156.QueryPacketCommitmentsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _156.QueryPacketCommitmentsRequest;
                    fromJSON(object: any): _156.QueryPacketCommitmentsRequest;
                    toJSON(message: _156.QueryPacketCommitmentsRequest): unknown;
                    fromPartial(object: Partial<_156.QueryPacketCommitmentsRequest>): _156.QueryPacketCommitmentsRequest;
                    fromAmino(object: _156.QueryPacketCommitmentsRequestAmino): _156.QueryPacketCommitmentsRequest;
                    toAmino(message: _156.QueryPacketCommitmentsRequest): _156.QueryPacketCommitmentsRequestAmino;
                    fromAminoMsg(object: _156.QueryPacketCommitmentsRequestAminoMsg): _156.QueryPacketCommitmentsRequest;
                    toAminoMsg(message: _156.QueryPacketCommitmentsRequest): _156.QueryPacketCommitmentsRequestAminoMsg;
                    fromProtoMsg(message: _156.QueryPacketCommitmentsRequestProtoMsg): _156.QueryPacketCommitmentsRequest;
                    toProto(message: _156.QueryPacketCommitmentsRequest): Uint8Array;
                    toProtoMsg(message: _156.QueryPacketCommitmentsRequest): _156.QueryPacketCommitmentsRequestProtoMsg;
                };
                QueryPacketCommitmentsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _156.QueryPacketCommitmentsResponse;
                    isSDK(o: any): o is _156.QueryPacketCommitmentsResponseSDKType;
                    isAmino(o: any): o is _156.QueryPacketCommitmentsResponseAmino;
                    encode(message: _156.QueryPacketCommitmentsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _156.QueryPacketCommitmentsResponse;
                    fromJSON(object: any): _156.QueryPacketCommitmentsResponse;
                    toJSON(message: _156.QueryPacketCommitmentsResponse): unknown;
                    fromPartial(object: Partial<_156.QueryPacketCommitmentsResponse>): _156.QueryPacketCommitmentsResponse;
                    fromAmino(object: _156.QueryPacketCommitmentsResponseAmino): _156.QueryPacketCommitmentsResponse;
                    toAmino(message: _156.QueryPacketCommitmentsResponse): _156.QueryPacketCommitmentsResponseAmino;
                    fromAminoMsg(object: _156.QueryPacketCommitmentsResponseAminoMsg): _156.QueryPacketCommitmentsResponse;
                    toAminoMsg(message: _156.QueryPacketCommitmentsResponse): _156.QueryPacketCommitmentsResponseAminoMsg;
                    fromProtoMsg(message: _156.QueryPacketCommitmentsResponseProtoMsg): _156.QueryPacketCommitmentsResponse;
                    toProto(message: _156.QueryPacketCommitmentsResponse): Uint8Array;
                    toProtoMsg(message: _156.QueryPacketCommitmentsResponse): _156.QueryPacketCommitmentsResponseProtoMsg;
                };
                QueryPacketReceiptRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _156.QueryPacketReceiptRequest;
                    isSDK(o: any): o is _156.QueryPacketReceiptRequestSDKType;
                    isAmino(o: any): o is _156.QueryPacketReceiptRequestAmino;
                    encode(message: _156.QueryPacketReceiptRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _156.QueryPacketReceiptRequest;
                    fromJSON(object: any): _156.QueryPacketReceiptRequest;
                    toJSON(message: _156.QueryPacketReceiptRequest): unknown;
                    fromPartial(object: Partial<_156.QueryPacketReceiptRequest>): _156.QueryPacketReceiptRequest;
                    fromAmino(object: _156.QueryPacketReceiptRequestAmino): _156.QueryPacketReceiptRequest;
                    toAmino(message: _156.QueryPacketReceiptRequest): _156.QueryPacketReceiptRequestAmino;
                    fromAminoMsg(object: _156.QueryPacketReceiptRequestAminoMsg): _156.QueryPacketReceiptRequest;
                    toAminoMsg(message: _156.QueryPacketReceiptRequest): _156.QueryPacketReceiptRequestAminoMsg;
                    fromProtoMsg(message: _156.QueryPacketReceiptRequestProtoMsg): _156.QueryPacketReceiptRequest;
                    toProto(message: _156.QueryPacketReceiptRequest): Uint8Array;
                    toProtoMsg(message: _156.QueryPacketReceiptRequest): _156.QueryPacketReceiptRequestProtoMsg;
                };
                QueryPacketReceiptResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _156.QueryPacketReceiptResponse;
                    isSDK(o: any): o is _156.QueryPacketReceiptResponseSDKType;
                    isAmino(o: any): o is _156.QueryPacketReceiptResponseAmino;
                    encode(message: _156.QueryPacketReceiptResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _156.QueryPacketReceiptResponse;
                    fromJSON(object: any): _156.QueryPacketReceiptResponse;
                    toJSON(message: _156.QueryPacketReceiptResponse): unknown;
                    fromPartial(object: Partial<_156.QueryPacketReceiptResponse>): _156.QueryPacketReceiptResponse;
                    fromAmino(object: _156.QueryPacketReceiptResponseAmino): _156.QueryPacketReceiptResponse;
                    toAmino(message: _156.QueryPacketReceiptResponse): _156.QueryPacketReceiptResponseAmino;
                    fromAminoMsg(object: _156.QueryPacketReceiptResponseAminoMsg): _156.QueryPacketReceiptResponse;
                    toAminoMsg(message: _156.QueryPacketReceiptResponse): _156.QueryPacketReceiptResponseAminoMsg;
                    fromProtoMsg(message: _156.QueryPacketReceiptResponseProtoMsg): _156.QueryPacketReceiptResponse;
                    toProto(message: _156.QueryPacketReceiptResponse): Uint8Array;
                    toProtoMsg(message: _156.QueryPacketReceiptResponse): _156.QueryPacketReceiptResponseProtoMsg;
                };
                QueryPacketAcknowledgementRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _156.QueryPacketAcknowledgementRequest;
                    isSDK(o: any): o is _156.QueryPacketAcknowledgementRequestSDKType;
                    isAmino(o: any): o is _156.QueryPacketAcknowledgementRequestAmino;
                    encode(message: _156.QueryPacketAcknowledgementRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _156.QueryPacketAcknowledgementRequest;
                    fromJSON(object: any): _156.QueryPacketAcknowledgementRequest;
                    toJSON(message: _156.QueryPacketAcknowledgementRequest): unknown;
                    fromPartial(object: Partial<_156.QueryPacketAcknowledgementRequest>): _156.QueryPacketAcknowledgementRequest;
                    fromAmino(object: _156.QueryPacketAcknowledgementRequestAmino): _156.QueryPacketAcknowledgementRequest;
                    toAmino(message: _156.QueryPacketAcknowledgementRequest): _156.QueryPacketAcknowledgementRequestAmino;
                    fromAminoMsg(object: _156.QueryPacketAcknowledgementRequestAminoMsg): _156.QueryPacketAcknowledgementRequest;
                    toAminoMsg(message: _156.QueryPacketAcknowledgementRequest): _156.QueryPacketAcknowledgementRequestAminoMsg;
                    fromProtoMsg(message: _156.QueryPacketAcknowledgementRequestProtoMsg): _156.QueryPacketAcknowledgementRequest;
                    toProto(message: _156.QueryPacketAcknowledgementRequest): Uint8Array;
                    toProtoMsg(message: _156.QueryPacketAcknowledgementRequest): _156.QueryPacketAcknowledgementRequestProtoMsg;
                };
                QueryPacketAcknowledgementResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _156.QueryPacketAcknowledgementResponse;
                    isSDK(o: any): o is _156.QueryPacketAcknowledgementResponseSDKType;
                    isAmino(o: any): o is _156.QueryPacketAcknowledgementResponseAmino;
                    encode(message: _156.QueryPacketAcknowledgementResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _156.QueryPacketAcknowledgementResponse;
                    fromJSON(object: any): _156.QueryPacketAcknowledgementResponse;
                    toJSON(message: _156.QueryPacketAcknowledgementResponse): unknown;
                    fromPartial(object: Partial<_156.QueryPacketAcknowledgementResponse>): _156.QueryPacketAcknowledgementResponse;
                    fromAmino(object: _156.QueryPacketAcknowledgementResponseAmino): _156.QueryPacketAcknowledgementResponse;
                    toAmino(message: _156.QueryPacketAcknowledgementResponse): _156.QueryPacketAcknowledgementResponseAmino;
                    fromAminoMsg(object: _156.QueryPacketAcknowledgementResponseAminoMsg): _156.QueryPacketAcknowledgementResponse;
                    toAminoMsg(message: _156.QueryPacketAcknowledgementResponse): _156.QueryPacketAcknowledgementResponseAminoMsg;
                    fromProtoMsg(message: _156.QueryPacketAcknowledgementResponseProtoMsg): _156.QueryPacketAcknowledgementResponse;
                    toProto(message: _156.QueryPacketAcknowledgementResponse): Uint8Array;
                    toProtoMsg(message: _156.QueryPacketAcknowledgementResponse): _156.QueryPacketAcknowledgementResponseProtoMsg;
                };
                QueryPacketAcknowledgementsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _156.QueryPacketAcknowledgementsRequest;
                    isSDK(o: any): o is _156.QueryPacketAcknowledgementsRequestSDKType;
                    isAmino(o: any): o is _156.QueryPacketAcknowledgementsRequestAmino;
                    encode(message: _156.QueryPacketAcknowledgementsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _156.QueryPacketAcknowledgementsRequest;
                    fromJSON(object: any): _156.QueryPacketAcknowledgementsRequest;
                    toJSON(message: _156.QueryPacketAcknowledgementsRequest): unknown;
                    fromPartial(object: Partial<_156.QueryPacketAcknowledgementsRequest>): _156.QueryPacketAcknowledgementsRequest;
                    fromAmino(object: _156.QueryPacketAcknowledgementsRequestAmino): _156.QueryPacketAcknowledgementsRequest;
                    toAmino(message: _156.QueryPacketAcknowledgementsRequest): _156.QueryPacketAcknowledgementsRequestAmino;
                    fromAminoMsg(object: _156.QueryPacketAcknowledgementsRequestAminoMsg): _156.QueryPacketAcknowledgementsRequest;
                    toAminoMsg(message: _156.QueryPacketAcknowledgementsRequest): _156.QueryPacketAcknowledgementsRequestAminoMsg;
                    fromProtoMsg(message: _156.QueryPacketAcknowledgementsRequestProtoMsg): _156.QueryPacketAcknowledgementsRequest;
                    toProto(message: _156.QueryPacketAcknowledgementsRequest): Uint8Array;
                    toProtoMsg(message: _156.QueryPacketAcknowledgementsRequest): _156.QueryPacketAcknowledgementsRequestProtoMsg;
                };
                QueryPacketAcknowledgementsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _156.QueryPacketAcknowledgementsResponse;
                    isSDK(o: any): o is _156.QueryPacketAcknowledgementsResponseSDKType;
                    isAmino(o: any): o is _156.QueryPacketAcknowledgementsResponseAmino;
                    encode(message: _156.QueryPacketAcknowledgementsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _156.QueryPacketAcknowledgementsResponse;
                    fromJSON(object: any): _156.QueryPacketAcknowledgementsResponse;
                    toJSON(message: _156.QueryPacketAcknowledgementsResponse): unknown;
                    fromPartial(object: Partial<_156.QueryPacketAcknowledgementsResponse>): _156.QueryPacketAcknowledgementsResponse;
                    fromAmino(object: _156.QueryPacketAcknowledgementsResponseAmino): _156.QueryPacketAcknowledgementsResponse;
                    toAmino(message: _156.QueryPacketAcknowledgementsResponse): _156.QueryPacketAcknowledgementsResponseAmino;
                    fromAminoMsg(object: _156.QueryPacketAcknowledgementsResponseAminoMsg): _156.QueryPacketAcknowledgementsResponse;
                    toAminoMsg(message: _156.QueryPacketAcknowledgementsResponse): _156.QueryPacketAcknowledgementsResponseAminoMsg;
                    fromProtoMsg(message: _156.QueryPacketAcknowledgementsResponseProtoMsg): _156.QueryPacketAcknowledgementsResponse;
                    toProto(message: _156.QueryPacketAcknowledgementsResponse): Uint8Array;
                    toProtoMsg(message: _156.QueryPacketAcknowledgementsResponse): _156.QueryPacketAcknowledgementsResponseProtoMsg;
                };
                QueryUnreceivedPacketsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _156.QueryUnreceivedPacketsRequest;
                    isSDK(o: any): o is _156.QueryUnreceivedPacketsRequestSDKType;
                    isAmino(o: any): o is _156.QueryUnreceivedPacketsRequestAmino;
                    encode(message: _156.QueryUnreceivedPacketsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _156.QueryUnreceivedPacketsRequest;
                    fromJSON(object: any): _156.QueryUnreceivedPacketsRequest;
                    toJSON(message: _156.QueryUnreceivedPacketsRequest): unknown;
                    fromPartial(object: Partial<_156.QueryUnreceivedPacketsRequest>): _156.QueryUnreceivedPacketsRequest;
                    fromAmino(object: _156.QueryUnreceivedPacketsRequestAmino): _156.QueryUnreceivedPacketsRequest;
                    toAmino(message: _156.QueryUnreceivedPacketsRequest): _156.QueryUnreceivedPacketsRequestAmino;
                    fromAminoMsg(object: _156.QueryUnreceivedPacketsRequestAminoMsg): _156.QueryUnreceivedPacketsRequest;
                    toAminoMsg(message: _156.QueryUnreceivedPacketsRequest): _156.QueryUnreceivedPacketsRequestAminoMsg;
                    fromProtoMsg(message: _156.QueryUnreceivedPacketsRequestProtoMsg): _156.QueryUnreceivedPacketsRequest;
                    toProto(message: _156.QueryUnreceivedPacketsRequest): Uint8Array;
                    toProtoMsg(message: _156.QueryUnreceivedPacketsRequest): _156.QueryUnreceivedPacketsRequestProtoMsg;
                };
                QueryUnreceivedPacketsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _156.QueryUnreceivedPacketsResponse;
                    isSDK(o: any): o is _156.QueryUnreceivedPacketsResponseSDKType;
                    isAmino(o: any): o is _156.QueryUnreceivedPacketsResponseAmino;
                    encode(message: _156.QueryUnreceivedPacketsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _156.QueryUnreceivedPacketsResponse;
                    fromJSON(object: any): _156.QueryUnreceivedPacketsResponse;
                    toJSON(message: _156.QueryUnreceivedPacketsResponse): unknown;
                    fromPartial(object: Partial<_156.QueryUnreceivedPacketsResponse>): _156.QueryUnreceivedPacketsResponse;
                    fromAmino(object: _156.QueryUnreceivedPacketsResponseAmino): _156.QueryUnreceivedPacketsResponse;
                    toAmino(message: _156.QueryUnreceivedPacketsResponse): _156.QueryUnreceivedPacketsResponseAmino;
                    fromAminoMsg(object: _156.QueryUnreceivedPacketsResponseAminoMsg): _156.QueryUnreceivedPacketsResponse;
                    toAminoMsg(message: _156.QueryUnreceivedPacketsResponse): _156.QueryUnreceivedPacketsResponseAminoMsg;
                    fromProtoMsg(message: _156.QueryUnreceivedPacketsResponseProtoMsg): _156.QueryUnreceivedPacketsResponse;
                    toProto(message: _156.QueryUnreceivedPacketsResponse): Uint8Array;
                    toProtoMsg(message: _156.QueryUnreceivedPacketsResponse): _156.QueryUnreceivedPacketsResponseProtoMsg;
                };
                QueryUnreceivedAcksRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _156.QueryUnreceivedAcksRequest;
                    isSDK(o: any): o is _156.QueryUnreceivedAcksRequestSDKType;
                    isAmino(o: any): o is _156.QueryUnreceivedAcksRequestAmino;
                    encode(message: _156.QueryUnreceivedAcksRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _156.QueryUnreceivedAcksRequest;
                    fromJSON(object: any): _156.QueryUnreceivedAcksRequest;
                    toJSON(message: _156.QueryUnreceivedAcksRequest): unknown;
                    fromPartial(object: Partial<_156.QueryUnreceivedAcksRequest>): _156.QueryUnreceivedAcksRequest;
                    fromAmino(object: _156.QueryUnreceivedAcksRequestAmino): _156.QueryUnreceivedAcksRequest;
                    toAmino(message: _156.QueryUnreceivedAcksRequest): _156.QueryUnreceivedAcksRequestAmino;
                    fromAminoMsg(object: _156.QueryUnreceivedAcksRequestAminoMsg): _156.QueryUnreceivedAcksRequest;
                    toAminoMsg(message: _156.QueryUnreceivedAcksRequest): _156.QueryUnreceivedAcksRequestAminoMsg;
                    fromProtoMsg(message: _156.QueryUnreceivedAcksRequestProtoMsg): _156.QueryUnreceivedAcksRequest;
                    toProto(message: _156.QueryUnreceivedAcksRequest): Uint8Array;
                    toProtoMsg(message: _156.QueryUnreceivedAcksRequest): _156.QueryUnreceivedAcksRequestProtoMsg;
                };
                QueryUnreceivedAcksResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _156.QueryUnreceivedAcksResponse;
                    isSDK(o: any): o is _156.QueryUnreceivedAcksResponseSDKType;
                    isAmino(o: any): o is _156.QueryUnreceivedAcksResponseAmino;
                    encode(message: _156.QueryUnreceivedAcksResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _156.QueryUnreceivedAcksResponse;
                    fromJSON(object: any): _156.QueryUnreceivedAcksResponse;
                    toJSON(message: _156.QueryUnreceivedAcksResponse): unknown;
                    fromPartial(object: Partial<_156.QueryUnreceivedAcksResponse>): _156.QueryUnreceivedAcksResponse;
                    fromAmino(object: _156.QueryUnreceivedAcksResponseAmino): _156.QueryUnreceivedAcksResponse;
                    toAmino(message: _156.QueryUnreceivedAcksResponse): _156.QueryUnreceivedAcksResponseAmino;
                    fromAminoMsg(object: _156.QueryUnreceivedAcksResponseAminoMsg): _156.QueryUnreceivedAcksResponse;
                    toAminoMsg(message: _156.QueryUnreceivedAcksResponse): _156.QueryUnreceivedAcksResponseAminoMsg;
                    fromProtoMsg(message: _156.QueryUnreceivedAcksResponseProtoMsg): _156.QueryUnreceivedAcksResponse;
                    toProto(message: _156.QueryUnreceivedAcksResponse): Uint8Array;
                    toProtoMsg(message: _156.QueryUnreceivedAcksResponse): _156.QueryUnreceivedAcksResponseProtoMsg;
                };
                QueryNextSequenceReceiveRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _156.QueryNextSequenceReceiveRequest;
                    isSDK(o: any): o is _156.QueryNextSequenceReceiveRequestSDKType;
                    isAmino(o: any): o is _156.QueryNextSequenceReceiveRequestAmino;
                    encode(message: _156.QueryNextSequenceReceiveRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _156.QueryNextSequenceReceiveRequest;
                    fromJSON(object: any): _156.QueryNextSequenceReceiveRequest;
                    toJSON(message: _156.QueryNextSequenceReceiveRequest): unknown;
                    fromPartial(object: Partial<_156.QueryNextSequenceReceiveRequest>): _156.QueryNextSequenceReceiveRequest;
                    fromAmino(object: _156.QueryNextSequenceReceiveRequestAmino): _156.QueryNextSequenceReceiveRequest;
                    toAmino(message: _156.QueryNextSequenceReceiveRequest): _156.QueryNextSequenceReceiveRequestAmino;
                    fromAminoMsg(object: _156.QueryNextSequenceReceiveRequestAminoMsg): _156.QueryNextSequenceReceiveRequest;
                    toAminoMsg(message: _156.QueryNextSequenceReceiveRequest): _156.QueryNextSequenceReceiveRequestAminoMsg;
                    fromProtoMsg(message: _156.QueryNextSequenceReceiveRequestProtoMsg): _156.QueryNextSequenceReceiveRequest;
                    toProto(message: _156.QueryNextSequenceReceiveRequest): Uint8Array;
                    toProtoMsg(message: _156.QueryNextSequenceReceiveRequest): _156.QueryNextSequenceReceiveRequestProtoMsg;
                };
                QueryNextSequenceReceiveResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _156.QueryNextSequenceReceiveResponse;
                    isSDK(o: any): o is _156.QueryNextSequenceReceiveResponseSDKType;
                    isAmino(o: any): o is _156.QueryNextSequenceReceiveResponseAmino;
                    encode(message: _156.QueryNextSequenceReceiveResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _156.QueryNextSequenceReceiveResponse;
                    fromJSON(object: any): _156.QueryNextSequenceReceiveResponse;
                    toJSON(message: _156.QueryNextSequenceReceiveResponse): unknown;
                    fromPartial(object: Partial<_156.QueryNextSequenceReceiveResponse>): _156.QueryNextSequenceReceiveResponse;
                    fromAmino(object: _156.QueryNextSequenceReceiveResponseAmino): _156.QueryNextSequenceReceiveResponse;
                    toAmino(message: _156.QueryNextSequenceReceiveResponse): _156.QueryNextSequenceReceiveResponseAmino;
                    fromAminoMsg(object: _156.QueryNextSequenceReceiveResponseAminoMsg): _156.QueryNextSequenceReceiveResponse;
                    toAminoMsg(message: _156.QueryNextSequenceReceiveResponse): _156.QueryNextSequenceReceiveResponseAminoMsg;
                    fromProtoMsg(message: _156.QueryNextSequenceReceiveResponseProtoMsg): _156.QueryNextSequenceReceiveResponse;
                    toProto(message: _156.QueryNextSequenceReceiveResponse): Uint8Array;
                    toProtoMsg(message: _156.QueryNextSequenceReceiveResponse): _156.QueryNextSequenceReceiveResponseProtoMsg;
                };
                QueryNextSequenceSendRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _156.QueryNextSequenceSendRequest;
                    isSDK(o: any): o is _156.QueryNextSequenceSendRequestSDKType;
                    isAmino(o: any): o is _156.QueryNextSequenceSendRequestAmino;
                    encode(message: _156.QueryNextSequenceSendRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _156.QueryNextSequenceSendRequest;
                    fromJSON(object: any): _156.QueryNextSequenceSendRequest;
                    toJSON(message: _156.QueryNextSequenceSendRequest): unknown;
                    fromPartial(object: Partial<_156.QueryNextSequenceSendRequest>): _156.QueryNextSequenceSendRequest;
                    fromAmino(object: _156.QueryNextSequenceSendRequestAmino): _156.QueryNextSequenceSendRequest;
                    toAmino(message: _156.QueryNextSequenceSendRequest): _156.QueryNextSequenceSendRequestAmino;
                    fromAminoMsg(object: _156.QueryNextSequenceSendRequestAminoMsg): _156.QueryNextSequenceSendRequest;
                    toAminoMsg(message: _156.QueryNextSequenceSendRequest): _156.QueryNextSequenceSendRequestAminoMsg;
                    fromProtoMsg(message: _156.QueryNextSequenceSendRequestProtoMsg): _156.QueryNextSequenceSendRequest;
                    toProto(message: _156.QueryNextSequenceSendRequest): Uint8Array;
                    toProtoMsg(message: _156.QueryNextSequenceSendRequest): _156.QueryNextSequenceSendRequestProtoMsg;
                };
                QueryNextSequenceSendResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _156.QueryNextSequenceSendResponse;
                    isSDK(o: any): o is _156.QueryNextSequenceSendResponseSDKType;
                    isAmino(o: any): o is _156.QueryNextSequenceSendResponseAmino;
                    encode(message: _156.QueryNextSequenceSendResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _156.QueryNextSequenceSendResponse;
                    fromJSON(object: any): _156.QueryNextSequenceSendResponse;
                    toJSON(message: _156.QueryNextSequenceSendResponse): unknown;
                    fromPartial(object: Partial<_156.QueryNextSequenceSendResponse>): _156.QueryNextSequenceSendResponse;
                    fromAmino(object: _156.QueryNextSequenceSendResponseAmino): _156.QueryNextSequenceSendResponse;
                    toAmino(message: _156.QueryNextSequenceSendResponse): _156.QueryNextSequenceSendResponseAmino;
                    fromAminoMsg(object: _156.QueryNextSequenceSendResponseAminoMsg): _156.QueryNextSequenceSendResponse;
                    toAminoMsg(message: _156.QueryNextSequenceSendResponse): _156.QueryNextSequenceSendResponseAminoMsg;
                    fromProtoMsg(message: _156.QueryNextSequenceSendResponseProtoMsg): _156.QueryNextSequenceSendResponse;
                    toProto(message: _156.QueryNextSequenceSendResponse): Uint8Array;
                    toProtoMsg(message: _156.QueryNextSequenceSendResponse): _156.QueryNextSequenceSendResponseProtoMsg;
                };
                GenesisState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _155.GenesisState;
                    isSDK(o: any): o is _155.GenesisStateSDKType;
                    isAmino(o: any): o is _155.GenesisStateAmino;
                    encode(message: _155.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _155.GenesisState;
                    fromJSON(object: any): _155.GenesisState;
                    toJSON(message: _155.GenesisState): unknown;
                    fromPartial(object: Partial<_155.GenesisState>): _155.GenesisState;
                    fromAmino(object: _155.GenesisStateAmino): _155.GenesisState;
                    toAmino(message: _155.GenesisState): _155.GenesisStateAmino;
                    fromAminoMsg(object: _155.GenesisStateAminoMsg): _155.GenesisState;
                    toAminoMsg(message: _155.GenesisState): _155.GenesisStateAminoMsg;
                    fromProtoMsg(message: _155.GenesisStateProtoMsg): _155.GenesisState;
                    toProto(message: _155.GenesisState): Uint8Array;
                    toProtoMsg(message: _155.GenesisState): _155.GenesisStateProtoMsg;
                };
                PacketSequence: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _155.PacketSequence;
                    isSDK(o: any): o is _155.PacketSequenceSDKType;
                    isAmino(o: any): o is _155.PacketSequenceAmino;
                    encode(message: _155.PacketSequence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _155.PacketSequence;
                    fromJSON(object: any): _155.PacketSequence;
                    toJSON(message: _155.PacketSequence): unknown;
                    fromPartial(object: Partial<_155.PacketSequence>): _155.PacketSequence;
                    fromAmino(object: _155.PacketSequenceAmino): _155.PacketSequence;
                    toAmino(message: _155.PacketSequence): _155.PacketSequenceAmino;
                    fromAminoMsg(object: _155.PacketSequenceAminoMsg): _155.PacketSequence;
                    toAminoMsg(message: _155.PacketSequence): _155.PacketSequenceAminoMsg;
                    fromProtoMsg(message: _155.PacketSequenceProtoMsg): _155.PacketSequence;
                    toProto(message: _155.PacketSequence): Uint8Array;
                    toProtoMsg(message: _155.PacketSequence): _155.PacketSequenceProtoMsg;
                };
                stateFromJSON(object: any): _154.State;
                stateToJSON(object: _154.State): string;
                orderFromJSON(object: any): _154.Order;
                orderToJSON(object: _154.Order): string;
                State: typeof _154.State;
                StateSDKType: typeof _154.State;
                StateAmino: typeof _154.State;
                Order: typeof _154.Order;
                OrderSDKType: typeof _154.Order;
                OrderAmino: typeof _154.Order;
                Channel: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _154.Channel;
                    isSDK(o: any): o is _154.ChannelSDKType;
                    isAmino(o: any): o is _154.ChannelAmino;
                    encode(message: _154.Channel, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _154.Channel;
                    fromJSON(object: any): _154.Channel;
                    toJSON(message: _154.Channel): unknown;
                    fromPartial(object: Partial<_154.Channel>): _154.Channel;
                    fromAmino(object: _154.ChannelAmino): _154.Channel;
                    toAmino(message: _154.Channel): _154.ChannelAmino;
                    fromAminoMsg(object: _154.ChannelAminoMsg): _154.Channel;
                    toAminoMsg(message: _154.Channel): _154.ChannelAminoMsg;
                    fromProtoMsg(message: _154.ChannelProtoMsg): _154.Channel;
                    toProto(message: _154.Channel): Uint8Array;
                    toProtoMsg(message: _154.Channel): _154.ChannelProtoMsg;
                };
                IdentifiedChannel: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _154.IdentifiedChannel;
                    isSDK(o: any): o is _154.IdentifiedChannelSDKType;
                    isAmino(o: any): o is _154.IdentifiedChannelAmino;
                    encode(message: _154.IdentifiedChannel, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _154.IdentifiedChannel;
                    fromJSON(object: any): _154.IdentifiedChannel;
                    toJSON(message: _154.IdentifiedChannel): unknown;
                    fromPartial(object: Partial<_154.IdentifiedChannel>): _154.IdentifiedChannel;
                    fromAmino(object: _154.IdentifiedChannelAmino): _154.IdentifiedChannel;
                    toAmino(message: _154.IdentifiedChannel): _154.IdentifiedChannelAmino;
                    fromAminoMsg(object: _154.IdentifiedChannelAminoMsg): _154.IdentifiedChannel;
                    toAminoMsg(message: _154.IdentifiedChannel): _154.IdentifiedChannelAminoMsg;
                    fromProtoMsg(message: _154.IdentifiedChannelProtoMsg): _154.IdentifiedChannel;
                    toProto(message: _154.IdentifiedChannel): Uint8Array;
                    toProtoMsg(message: _154.IdentifiedChannel): _154.IdentifiedChannelProtoMsg;
                };
                Counterparty: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _154.Counterparty;
                    isSDK(o: any): o is _154.CounterpartySDKType;
                    isAmino(o: any): o is _154.CounterpartyAmino;
                    encode(message: _154.Counterparty, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _154.Counterparty;
                    fromJSON(object: any): _154.Counterparty;
                    toJSON(message: _154.Counterparty): unknown;
                    fromPartial(object: Partial<_154.Counterparty>): _154.Counterparty;
                    fromAmino(object: _154.CounterpartyAmino): _154.Counterparty;
                    toAmino(message: _154.Counterparty): _154.CounterpartyAmino;
                    fromAminoMsg(object: _154.CounterpartyAminoMsg): _154.Counterparty;
                    toAminoMsg(message: _154.Counterparty): _154.CounterpartyAminoMsg;
                    fromProtoMsg(message: _154.CounterpartyProtoMsg): _154.Counterparty;
                    toProto(message: _154.Counterparty): Uint8Array;
                    toProtoMsg(message: _154.Counterparty): _154.CounterpartyProtoMsg;
                };
                Packet: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _154.Packet;
                    isSDK(o: any): o is _154.PacketSDKType;
                    isAmino(o: any): o is _154.PacketAmino;
                    encode(message: _154.Packet, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _154.Packet;
                    fromJSON(object: any): _154.Packet;
                    toJSON(message: _154.Packet): unknown;
                    fromPartial(object: Partial<_154.Packet>): _154.Packet;
                    fromAmino(object: _154.PacketAmino): _154.Packet;
                    toAmino(message: _154.Packet): _154.PacketAmino;
                    fromAminoMsg(object: _154.PacketAminoMsg): _154.Packet;
                    toAminoMsg(message: _154.Packet): _154.PacketAminoMsg;
                    fromProtoMsg(message: _154.PacketProtoMsg): _154.Packet;
                    toProto(message: _154.Packet): Uint8Array;
                    toProtoMsg(message: _154.Packet): _154.PacketProtoMsg;
                };
                PacketState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _154.PacketState;
                    isSDK(o: any): o is _154.PacketStateSDKType;
                    isAmino(o: any): o is _154.PacketStateAmino;
                    encode(message: _154.PacketState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _154.PacketState;
                    fromJSON(object: any): _154.PacketState;
                    toJSON(message: _154.PacketState): unknown;
                    fromPartial(object: Partial<_154.PacketState>): _154.PacketState;
                    fromAmino(object: _154.PacketStateAmino): _154.PacketState;
                    toAmino(message: _154.PacketState): _154.PacketStateAmino;
                    fromAminoMsg(object: _154.PacketStateAminoMsg): _154.PacketState;
                    toAminoMsg(message: _154.PacketState): _154.PacketStateAminoMsg;
                    fromProtoMsg(message: _154.PacketStateProtoMsg): _154.PacketState;
                    toProto(message: _154.PacketState): Uint8Array;
                    toProtoMsg(message: _154.PacketState): _154.PacketStateProtoMsg;
                };
                PacketId: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _154.PacketId;
                    isSDK(o: any): o is _154.PacketIdSDKType;
                    isAmino(o: any): o is _154.PacketIdAmino;
                    encode(message: _154.PacketId, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _154.PacketId;
                    fromJSON(object: any): _154.PacketId;
                    toJSON(message: _154.PacketId): unknown;
                    fromPartial(object: Partial<_154.PacketId>): _154.PacketId;
                    fromAmino(object: _154.PacketIdAmino): _154.PacketId;
                    toAmino(message: _154.PacketId): _154.PacketIdAmino;
                    fromAminoMsg(object: _154.PacketIdAminoMsg): _154.PacketId;
                    toAminoMsg(message: _154.PacketId): _154.PacketIdAminoMsg;
                    fromProtoMsg(message: _154.PacketIdProtoMsg): _154.PacketId;
                    toProto(message: _154.PacketId): Uint8Array;
                    toProtoMsg(message: _154.PacketId): _154.PacketIdProtoMsg;
                };
                Acknowledgement: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _154.Acknowledgement;
                    isSDK(o: any): o is _154.AcknowledgementSDKType;
                    isAmino(o: any): o is _154.AcknowledgementAmino;
                    encode(message: _154.Acknowledgement, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _154.Acknowledgement;
                    fromJSON(object: any): _154.Acknowledgement;
                    toJSON(message: _154.Acknowledgement): unknown;
                    fromPartial(object: Partial<_154.Acknowledgement>): _154.Acknowledgement;
                    fromAmino(object: _154.AcknowledgementAmino): _154.Acknowledgement;
                    toAmino(message: _154.Acknowledgement): _154.AcknowledgementAmino;
                    fromAminoMsg(object: _154.AcknowledgementAminoMsg): _154.Acknowledgement;
                    toAminoMsg(message: _154.Acknowledgement): _154.AcknowledgementAminoMsg;
                    fromProtoMsg(message: _154.AcknowledgementProtoMsg): _154.Acknowledgement;
                    toProto(message: _154.Acknowledgement): Uint8Array;
                    toProtoMsg(message: _154.Acknowledgement): _154.AcknowledgementProtoMsg;
                };
                Timeout: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _154.Timeout;
                    isSDK(o: any): o is _154.TimeoutSDKType;
                    isAmino(o: any): o is _154.TimeoutAmino;
                    encode(message: _154.Timeout, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _154.Timeout;
                    fromJSON(object: any): _154.Timeout;
                    toJSON(message: _154.Timeout): unknown;
                    fromPartial(object: Partial<_154.Timeout>): _154.Timeout;
                    fromAmino(object: _154.TimeoutAmino): _154.Timeout;
                    toAmino(message: _154.Timeout): _154.TimeoutAmino;
                    fromAminoMsg(object: _154.TimeoutAminoMsg): _154.Timeout;
                    toAminoMsg(message: _154.Timeout): _154.TimeoutAminoMsg;
                    fromProtoMsg(message: _154.TimeoutProtoMsg): _154.Timeout;
                    toProto(message: _154.Timeout): Uint8Array;
                    toProtoMsg(message: _154.Timeout): _154.TimeoutProtoMsg;
                };
            };
        }
        namespace client {
            const v1: {
                LCDQueryClient: typeof _256.LCDQueryClient;
                registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
                load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
                MessageComposer: {
                    encoded: {
                        createClient(value: _161.MsgCreateClient): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        updateClient(value: _161.MsgUpdateClient): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        upgradeClient(value: _161.MsgUpgradeClient): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        submitMisbehaviour(value: _161.MsgSubmitMisbehaviour): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        recoverClient(value: _161.MsgRecoverClient): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        iBCSoftwareUpgrade(value: _161.MsgIBCSoftwareUpgrade): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        updateClientParams(value: _161.MsgUpdateParams): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                    };
                    withTypeUrl: {
                        createClient(value: _161.MsgCreateClient): {
                            typeUrl: string;
                            value: _161.MsgCreateClient;
                        };
                        updateClient(value: _161.MsgUpdateClient): {
                            typeUrl: string;
                            value: _161.MsgUpdateClient;
                        };
                        upgradeClient(value: _161.MsgUpgradeClient): {
                            typeUrl: string;
                            value: _161.MsgUpgradeClient;
                        };
                        submitMisbehaviour(value: _161.MsgSubmitMisbehaviour): {
                            typeUrl: string;
                            value: _161.MsgSubmitMisbehaviour;
                        };
                        recoverClient(value: _161.MsgRecoverClient): {
                            typeUrl: string;
                            value: _161.MsgRecoverClient;
                        };
                        iBCSoftwareUpgrade(value: _161.MsgIBCSoftwareUpgrade): {
                            typeUrl: string;
                            value: _161.MsgIBCSoftwareUpgrade;
                        };
                        updateClientParams(value: _161.MsgUpdateParams): {
                            typeUrl: string;
                            value: _161.MsgUpdateParams;
                        };
                    };
                    toJSON: {
                        createClient(value: _161.MsgCreateClient): {
                            typeUrl: string;
                            value: unknown;
                        };
                        updateClient(value: _161.MsgUpdateClient): {
                            typeUrl: string;
                            value: unknown;
                        };
                        upgradeClient(value: _161.MsgUpgradeClient): {
                            typeUrl: string;
                            value: unknown;
                        };
                        submitMisbehaviour(value: _161.MsgSubmitMisbehaviour): {
                            typeUrl: string;
                            value: unknown;
                        };
                        recoverClient(value: _161.MsgRecoverClient): {
                            typeUrl: string;
                            value: unknown;
                        };
                        iBCSoftwareUpgrade(value: _161.MsgIBCSoftwareUpgrade): {
                            typeUrl: string;
                            value: unknown;
                        };
                        updateClientParams(value: _161.MsgUpdateParams): {
                            typeUrl: string;
                            value: unknown;
                        };
                    };
                    fromJSON: {
                        createClient(value: any): {
                            typeUrl: string;
                            value: _161.MsgCreateClient;
                        };
                        updateClient(value: any): {
                            typeUrl: string;
                            value: _161.MsgUpdateClient;
                        };
                        upgradeClient(value: any): {
                            typeUrl: string;
                            value: _161.MsgUpgradeClient;
                        };
                        submitMisbehaviour(value: any): {
                            typeUrl: string;
                            value: _161.MsgSubmitMisbehaviour;
                        };
                        recoverClient(value: any): {
                            typeUrl: string;
                            value: _161.MsgRecoverClient;
                        };
                        iBCSoftwareUpgrade(value: any): {
                            typeUrl: string;
                            value: _161.MsgIBCSoftwareUpgrade;
                        };
                        updateClientParams(value: any): {
                            typeUrl: string;
                            value: _161.MsgUpdateParams;
                        };
                    };
                    fromPartial: {
                        createClient(value: _161.MsgCreateClient): {
                            typeUrl: string;
                            value: _161.MsgCreateClient;
                        };
                        updateClient(value: _161.MsgUpdateClient): {
                            typeUrl: string;
                            value: _161.MsgUpdateClient;
                        };
                        upgradeClient(value: _161.MsgUpgradeClient): {
                            typeUrl: string;
                            value: _161.MsgUpgradeClient;
                        };
                        submitMisbehaviour(value: _161.MsgSubmitMisbehaviour): {
                            typeUrl: string;
                            value: _161.MsgSubmitMisbehaviour;
                        };
                        recoverClient(value: _161.MsgRecoverClient): {
                            typeUrl: string;
                            value: _161.MsgRecoverClient;
                        };
                        iBCSoftwareUpgrade(value: _161.MsgIBCSoftwareUpgrade): {
                            typeUrl: string;
                            value: _161.MsgIBCSoftwareUpgrade;
                        };
                        updateClientParams(value: _161.MsgUpdateParams): {
                            typeUrl: string;
                            value: _161.MsgUpdateParams;
                        };
                    };
                };
                AminoConverter: {
                    "/ibc.core.client.v1.MsgCreateClient": {
                        aminoType: string;
                        toAmino: (message: _161.MsgCreateClient) => _161.MsgCreateClientAmino;
                        fromAmino: (object: _161.MsgCreateClientAmino) => _161.MsgCreateClient;
                    };
                    "/ibc.core.client.v1.MsgUpdateClient": {
                        aminoType: string;
                        toAmino: (message: _161.MsgUpdateClient) => _161.MsgUpdateClientAmino;
                        fromAmino: (object: _161.MsgUpdateClientAmino) => _161.MsgUpdateClient;
                    };
                    "/ibc.core.client.v1.MsgUpgradeClient": {
                        aminoType: string;
                        toAmino: (message: _161.MsgUpgradeClient) => _161.MsgUpgradeClientAmino;
                        fromAmino: (object: _161.MsgUpgradeClientAmino) => _161.MsgUpgradeClient;
                    };
                    "/ibc.core.client.v1.MsgSubmitMisbehaviour": {
                        aminoType: string;
                        toAmino: (message: _161.MsgSubmitMisbehaviour) => _161.MsgSubmitMisbehaviourAmino;
                        fromAmino: (object: _161.MsgSubmitMisbehaviourAmino) => _161.MsgSubmitMisbehaviour;
                    };
                    "/ibc.core.client.v1.MsgRecoverClient": {
                        aminoType: string;
                        toAmino: (message: _161.MsgRecoverClient) => _161.MsgRecoverClientAmino;
                        fromAmino: (object: _161.MsgRecoverClientAmino) => _161.MsgRecoverClient;
                    };
                    "/ibc.core.client.v1.MsgIBCSoftwareUpgrade": {
                        aminoType: string;
                        toAmino: (message: _161.MsgIBCSoftwareUpgrade) => _161.MsgIBCSoftwareUpgradeAmino;
                        fromAmino: (object: _161.MsgIBCSoftwareUpgradeAmino) => _161.MsgIBCSoftwareUpgrade;
                    };
                    "/ibc.core.client.v1.MsgUpdateParams": {
                        aminoType: string;
                        toAmino: (message: _161.MsgUpdateParams) => _161.MsgUpdateParamsAmino;
                        fromAmino: (object: _161.MsgUpdateParamsAmino) => _161.MsgUpdateParams;
                    };
                };
                protobufPackage: "ibc.core.client.v1";
                MsgCreateClient: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _161.MsgCreateClient;
                    isSDK(o: any): o is _161.MsgCreateClientSDKType;
                    isAmino(o: any): o is _161.MsgCreateClientAmino;
                    encode(message: _161.MsgCreateClient, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _161.MsgCreateClient;
                    fromJSON(object: any): _161.MsgCreateClient;
                    toJSON(message: _161.MsgCreateClient): unknown;
                    fromPartial(object: Partial<_161.MsgCreateClient>): _161.MsgCreateClient;
                    fromAmino(object: _161.MsgCreateClientAmino): _161.MsgCreateClient;
                    toAmino(message: _161.MsgCreateClient): _161.MsgCreateClientAmino;
                    fromAminoMsg(object: _161.MsgCreateClientAminoMsg): _161.MsgCreateClient;
                    toAminoMsg(message: _161.MsgCreateClient): _161.MsgCreateClientAminoMsg;
                    fromProtoMsg(message: _161.MsgCreateClientProtoMsg): _161.MsgCreateClient;
                    toProto(message: _161.MsgCreateClient): Uint8Array;
                    toProtoMsg(message: _161.MsgCreateClient): _161.MsgCreateClientProtoMsg;
                };
                MsgCreateClientResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _161.MsgCreateClientResponse;
                    isSDK(o: any): o is _161.MsgCreateClientResponseSDKType;
                    isAmino(o: any): o is _161.MsgCreateClientResponseAmino;
                    encode(_: _161.MsgCreateClientResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _161.MsgCreateClientResponse;
                    fromJSON(_: any): _161.MsgCreateClientResponse;
                    toJSON(_: _161.MsgCreateClientResponse): unknown;
                    fromPartial(_: Partial<_161.MsgCreateClientResponse>): _161.MsgCreateClientResponse;
                    fromAmino(_: _161.MsgCreateClientResponseAmino): _161.MsgCreateClientResponse;
                    toAmino(_: _161.MsgCreateClientResponse): _161.MsgCreateClientResponseAmino;
                    fromAminoMsg(object: _161.MsgCreateClientResponseAminoMsg): _161.MsgCreateClientResponse;
                    toAminoMsg(message: _161.MsgCreateClientResponse): _161.MsgCreateClientResponseAminoMsg;
                    fromProtoMsg(message: _161.MsgCreateClientResponseProtoMsg): _161.MsgCreateClientResponse;
                    toProto(message: _161.MsgCreateClientResponse): Uint8Array;
                    toProtoMsg(message: _161.MsgCreateClientResponse): _161.MsgCreateClientResponseProtoMsg;
                };
                MsgUpdateClient: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _161.MsgUpdateClient;
                    isSDK(o: any): o is _161.MsgUpdateClientSDKType;
                    isAmino(o: any): o is _161.MsgUpdateClientAmino;
                    encode(message: _161.MsgUpdateClient, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _161.MsgUpdateClient;
                    fromJSON(object: any): _161.MsgUpdateClient;
                    toJSON(message: _161.MsgUpdateClient): unknown;
                    fromPartial(object: Partial<_161.MsgUpdateClient>): _161.MsgUpdateClient;
                    fromAmino(object: _161.MsgUpdateClientAmino): _161.MsgUpdateClient;
                    toAmino(message: _161.MsgUpdateClient): _161.MsgUpdateClientAmino;
                    fromAminoMsg(object: _161.MsgUpdateClientAminoMsg): _161.MsgUpdateClient;
                    toAminoMsg(message: _161.MsgUpdateClient): _161.MsgUpdateClientAminoMsg;
                    fromProtoMsg(message: _161.MsgUpdateClientProtoMsg): _161.MsgUpdateClient;
                    toProto(message: _161.MsgUpdateClient): Uint8Array;
                    toProtoMsg(message: _161.MsgUpdateClient): _161.MsgUpdateClientProtoMsg;
                };
                MsgUpdateClientResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _161.MsgUpdateClientResponse;
                    isSDK(o: any): o is _161.MsgUpdateClientResponseSDKType;
                    isAmino(o: any): o is _161.MsgUpdateClientResponseAmino;
                    encode(_: _161.MsgUpdateClientResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _161.MsgUpdateClientResponse;
                    fromJSON(_: any): _161.MsgUpdateClientResponse;
                    toJSON(_: _161.MsgUpdateClientResponse): unknown;
                    fromPartial(_: Partial<_161.MsgUpdateClientResponse>): _161.MsgUpdateClientResponse;
                    fromAmino(_: _161.MsgUpdateClientResponseAmino): _161.MsgUpdateClientResponse;
                    toAmino(_: _161.MsgUpdateClientResponse): _161.MsgUpdateClientResponseAmino;
                    fromAminoMsg(object: _161.MsgUpdateClientResponseAminoMsg): _161.MsgUpdateClientResponse;
                    toAminoMsg(message: _161.MsgUpdateClientResponse): _161.MsgUpdateClientResponseAminoMsg;
                    fromProtoMsg(message: _161.MsgUpdateClientResponseProtoMsg): _161.MsgUpdateClientResponse;
                    toProto(message: _161.MsgUpdateClientResponse): Uint8Array;
                    toProtoMsg(message: _161.MsgUpdateClientResponse): _161.MsgUpdateClientResponseProtoMsg;
                };
                MsgUpgradeClient: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _161.MsgUpgradeClient;
                    isSDK(o: any): o is _161.MsgUpgradeClientSDKType;
                    isAmino(o: any): o is _161.MsgUpgradeClientAmino;
                    encode(message: _161.MsgUpgradeClient, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _161.MsgUpgradeClient;
                    fromJSON(object: any): _161.MsgUpgradeClient;
                    toJSON(message: _161.MsgUpgradeClient): unknown;
                    fromPartial(object: Partial<_161.MsgUpgradeClient>): _161.MsgUpgradeClient;
                    fromAmino(object: _161.MsgUpgradeClientAmino): _161.MsgUpgradeClient;
                    toAmino(message: _161.MsgUpgradeClient): _161.MsgUpgradeClientAmino;
                    fromAminoMsg(object: _161.MsgUpgradeClientAminoMsg): _161.MsgUpgradeClient;
                    toAminoMsg(message: _161.MsgUpgradeClient): _161.MsgUpgradeClientAminoMsg;
                    fromProtoMsg(message: _161.MsgUpgradeClientProtoMsg): _161.MsgUpgradeClient;
                    toProto(message: _161.MsgUpgradeClient): Uint8Array;
                    toProtoMsg(message: _161.MsgUpgradeClient): _161.MsgUpgradeClientProtoMsg;
                };
                MsgUpgradeClientResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _161.MsgUpgradeClientResponse;
                    isSDK(o: any): o is _161.MsgUpgradeClientResponseSDKType;
                    isAmino(o: any): o is _161.MsgUpgradeClientResponseAmino;
                    encode(_: _161.MsgUpgradeClientResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _161.MsgUpgradeClientResponse;
                    fromJSON(_: any): _161.MsgUpgradeClientResponse;
                    toJSON(_: _161.MsgUpgradeClientResponse): unknown;
                    fromPartial(_: Partial<_161.MsgUpgradeClientResponse>): _161.MsgUpgradeClientResponse;
                    fromAmino(_: _161.MsgUpgradeClientResponseAmino): _161.MsgUpgradeClientResponse;
                    toAmino(_: _161.MsgUpgradeClientResponse): _161.MsgUpgradeClientResponseAmino;
                    fromAminoMsg(object: _161.MsgUpgradeClientResponseAminoMsg): _161.MsgUpgradeClientResponse;
                    toAminoMsg(message: _161.MsgUpgradeClientResponse): _161.MsgUpgradeClientResponseAminoMsg;
                    fromProtoMsg(message: _161.MsgUpgradeClientResponseProtoMsg): _161.MsgUpgradeClientResponse;
                    toProto(message: _161.MsgUpgradeClientResponse): Uint8Array;
                    toProtoMsg(message: _161.MsgUpgradeClientResponse): _161.MsgUpgradeClientResponseProtoMsg;
                };
                MsgSubmitMisbehaviour: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _161.MsgSubmitMisbehaviour;
                    isSDK(o: any): o is _161.MsgSubmitMisbehaviourSDKType;
                    isAmino(o: any): o is _161.MsgSubmitMisbehaviourAmino;
                    encode(message: _161.MsgSubmitMisbehaviour, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _161.MsgSubmitMisbehaviour;
                    fromJSON(object: any): _161.MsgSubmitMisbehaviour;
                    toJSON(message: _161.MsgSubmitMisbehaviour): unknown;
                    fromPartial(object: Partial<_161.MsgSubmitMisbehaviour>): _161.MsgSubmitMisbehaviour;
                    fromAmino(object: _161.MsgSubmitMisbehaviourAmino): _161.MsgSubmitMisbehaviour;
                    toAmino(message: _161.MsgSubmitMisbehaviour): _161.MsgSubmitMisbehaviourAmino;
                    fromAminoMsg(object: _161.MsgSubmitMisbehaviourAminoMsg): _161.MsgSubmitMisbehaviour;
                    toAminoMsg(message: _161.MsgSubmitMisbehaviour): _161.MsgSubmitMisbehaviourAminoMsg;
                    fromProtoMsg(message: _161.MsgSubmitMisbehaviourProtoMsg): _161.MsgSubmitMisbehaviour;
                    toProto(message: _161.MsgSubmitMisbehaviour): Uint8Array;
                    toProtoMsg(message: _161.MsgSubmitMisbehaviour): _161.MsgSubmitMisbehaviourProtoMsg;
                };
                MsgSubmitMisbehaviourResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _161.MsgSubmitMisbehaviourResponse;
                    isSDK(o: any): o is _161.MsgSubmitMisbehaviourResponseSDKType;
                    isAmino(o: any): o is _161.MsgSubmitMisbehaviourResponseAmino;
                    encode(_: _161.MsgSubmitMisbehaviourResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _161.MsgSubmitMisbehaviourResponse;
                    fromJSON(_: any): _161.MsgSubmitMisbehaviourResponse;
                    toJSON(_: _161.MsgSubmitMisbehaviourResponse): unknown;
                    fromPartial(_: Partial<_161.MsgSubmitMisbehaviourResponse>): _161.MsgSubmitMisbehaviourResponse;
                    fromAmino(_: _161.MsgSubmitMisbehaviourResponseAmino): _161.MsgSubmitMisbehaviourResponse;
                    toAmino(_: _161.MsgSubmitMisbehaviourResponse): _161.MsgSubmitMisbehaviourResponseAmino;
                    fromAminoMsg(object: _161.MsgSubmitMisbehaviourResponseAminoMsg): _161.MsgSubmitMisbehaviourResponse;
                    toAminoMsg(message: _161.MsgSubmitMisbehaviourResponse): _161.MsgSubmitMisbehaviourResponseAminoMsg;
                    fromProtoMsg(message: _161.MsgSubmitMisbehaviourResponseProtoMsg): _161.MsgSubmitMisbehaviourResponse;
                    toProto(message: _161.MsgSubmitMisbehaviourResponse): Uint8Array;
                    toProtoMsg(message: _161.MsgSubmitMisbehaviourResponse): _161.MsgSubmitMisbehaviourResponseProtoMsg;
                };
                MsgRecoverClient: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _161.MsgRecoverClient;
                    isSDK(o: any): o is _161.MsgRecoverClientSDKType;
                    isAmino(o: any): o is _161.MsgRecoverClientAmino;
                    encode(message: _161.MsgRecoverClient, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _161.MsgRecoverClient;
                    fromJSON(object: any): _161.MsgRecoverClient;
                    toJSON(message: _161.MsgRecoverClient): unknown;
                    fromPartial(object: Partial<_161.MsgRecoverClient>): _161.MsgRecoverClient;
                    fromAmino(object: _161.MsgRecoverClientAmino): _161.MsgRecoverClient;
                    toAmino(message: _161.MsgRecoverClient): _161.MsgRecoverClientAmino;
                    fromAminoMsg(object: _161.MsgRecoverClientAminoMsg): _161.MsgRecoverClient;
                    toAminoMsg(message: _161.MsgRecoverClient): _161.MsgRecoverClientAminoMsg;
                    fromProtoMsg(message: _161.MsgRecoverClientProtoMsg): _161.MsgRecoverClient;
                    toProto(message: _161.MsgRecoverClient): Uint8Array;
                    toProtoMsg(message: _161.MsgRecoverClient): _161.MsgRecoverClientProtoMsg;
                };
                MsgRecoverClientResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _161.MsgRecoverClientResponse;
                    isSDK(o: any): o is _161.MsgRecoverClientResponseSDKType;
                    isAmino(o: any): o is _161.MsgRecoverClientResponseAmino;
                    encode(_: _161.MsgRecoverClientResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _161.MsgRecoverClientResponse;
                    fromJSON(_: any): _161.MsgRecoverClientResponse;
                    toJSON(_: _161.MsgRecoverClientResponse): unknown;
                    fromPartial(_: Partial<_161.MsgRecoverClientResponse>): _161.MsgRecoverClientResponse;
                    fromAmino(_: _161.MsgRecoverClientResponseAmino): _161.MsgRecoverClientResponse;
                    toAmino(_: _161.MsgRecoverClientResponse): _161.MsgRecoverClientResponseAmino;
                    fromAminoMsg(object: _161.MsgRecoverClientResponseAminoMsg): _161.MsgRecoverClientResponse;
                    toAminoMsg(message: _161.MsgRecoverClientResponse): _161.MsgRecoverClientResponseAminoMsg;
                    fromProtoMsg(message: _161.MsgRecoverClientResponseProtoMsg): _161.MsgRecoverClientResponse;
                    toProto(message: _161.MsgRecoverClientResponse): Uint8Array;
                    toProtoMsg(message: _161.MsgRecoverClientResponse): _161.MsgRecoverClientResponseProtoMsg;
                };
                MsgIBCSoftwareUpgrade: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _161.MsgIBCSoftwareUpgrade;
                    isSDK(o: any): o is _161.MsgIBCSoftwareUpgradeSDKType;
                    isAmino(o: any): o is _161.MsgIBCSoftwareUpgradeAmino;
                    encode(message: _161.MsgIBCSoftwareUpgrade, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _161.MsgIBCSoftwareUpgrade;
                    fromJSON(object: any): _161.MsgIBCSoftwareUpgrade;
                    toJSON(message: _161.MsgIBCSoftwareUpgrade): unknown;
                    fromPartial(object: Partial<_161.MsgIBCSoftwareUpgrade>): _161.MsgIBCSoftwareUpgrade;
                    fromAmino(object: _161.MsgIBCSoftwareUpgradeAmino): _161.MsgIBCSoftwareUpgrade;
                    toAmino(message: _161.MsgIBCSoftwareUpgrade): _161.MsgIBCSoftwareUpgradeAmino;
                    fromAminoMsg(object: _161.MsgIBCSoftwareUpgradeAminoMsg): _161.MsgIBCSoftwareUpgrade;
                    toAminoMsg(message: _161.MsgIBCSoftwareUpgrade): _161.MsgIBCSoftwareUpgradeAminoMsg;
                    fromProtoMsg(message: _161.MsgIBCSoftwareUpgradeProtoMsg): _161.MsgIBCSoftwareUpgrade;
                    toProto(message: _161.MsgIBCSoftwareUpgrade): Uint8Array;
                    toProtoMsg(message: _161.MsgIBCSoftwareUpgrade): _161.MsgIBCSoftwareUpgradeProtoMsg;
                };
                MsgIBCSoftwareUpgradeResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _161.MsgIBCSoftwareUpgradeResponse;
                    isSDK(o: any): o is _161.MsgIBCSoftwareUpgradeResponseSDKType;
                    isAmino(o: any): o is _161.MsgIBCSoftwareUpgradeResponseAmino;
                    encode(_: _161.MsgIBCSoftwareUpgradeResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _161.MsgIBCSoftwareUpgradeResponse;
                    fromJSON(_: any): _161.MsgIBCSoftwareUpgradeResponse;
                    toJSON(_: _161.MsgIBCSoftwareUpgradeResponse): unknown;
                    fromPartial(_: Partial<_161.MsgIBCSoftwareUpgradeResponse>): _161.MsgIBCSoftwareUpgradeResponse;
                    fromAmino(_: _161.MsgIBCSoftwareUpgradeResponseAmino): _161.MsgIBCSoftwareUpgradeResponse;
                    toAmino(_: _161.MsgIBCSoftwareUpgradeResponse): _161.MsgIBCSoftwareUpgradeResponseAmino;
                    fromAminoMsg(object: _161.MsgIBCSoftwareUpgradeResponseAminoMsg): _161.MsgIBCSoftwareUpgradeResponse;
                    toAminoMsg(message: _161.MsgIBCSoftwareUpgradeResponse): _161.MsgIBCSoftwareUpgradeResponseAminoMsg;
                    fromProtoMsg(message: _161.MsgIBCSoftwareUpgradeResponseProtoMsg): _161.MsgIBCSoftwareUpgradeResponse;
                    toProto(message: _161.MsgIBCSoftwareUpgradeResponse): Uint8Array;
                    toProtoMsg(message: _161.MsgIBCSoftwareUpgradeResponse): _161.MsgIBCSoftwareUpgradeResponseProtoMsg;
                };
                MsgUpdateParams: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _161.MsgUpdateParams;
                    isSDK(o: any): o is _161.MsgUpdateParamsSDKType;
                    isAmino(o: any): o is _161.MsgUpdateParamsAmino;
                    encode(message: _161.MsgUpdateParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _161.MsgUpdateParams;
                    fromJSON(object: any): _161.MsgUpdateParams;
                    toJSON(message: _161.MsgUpdateParams): unknown;
                    fromPartial(object: Partial<_161.MsgUpdateParams>): _161.MsgUpdateParams;
                    fromAmino(object: _161.MsgUpdateParamsAmino): _161.MsgUpdateParams;
                    toAmino(message: _161.MsgUpdateParams): _161.MsgUpdateParamsAmino;
                    fromAminoMsg(object: _161.MsgUpdateParamsAminoMsg): _161.MsgUpdateParams;
                    toAminoMsg(message: _161.MsgUpdateParams): _161.MsgUpdateParamsAminoMsg;
                    fromProtoMsg(message: _161.MsgUpdateParamsProtoMsg): _161.MsgUpdateParams;
                    toProto(message: _161.MsgUpdateParams): Uint8Array;
                    toProtoMsg(message: _161.MsgUpdateParams): _161.MsgUpdateParamsProtoMsg;
                };
                MsgUpdateParamsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _161.MsgUpdateParamsResponse;
                    isSDK(o: any): o is _161.MsgUpdateParamsResponseSDKType;
                    isAmino(o: any): o is _161.MsgUpdateParamsResponseAmino;
                    encode(_: _161.MsgUpdateParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _161.MsgUpdateParamsResponse;
                    fromJSON(_: any): _161.MsgUpdateParamsResponse;
                    toJSON(_: _161.MsgUpdateParamsResponse): unknown;
                    fromPartial(_: Partial<_161.MsgUpdateParamsResponse>): _161.MsgUpdateParamsResponse;
                    fromAmino(_: _161.MsgUpdateParamsResponseAmino): _161.MsgUpdateParamsResponse;
                    toAmino(_: _161.MsgUpdateParamsResponse): _161.MsgUpdateParamsResponseAmino;
                    fromAminoMsg(object: _161.MsgUpdateParamsResponseAminoMsg): _161.MsgUpdateParamsResponse;
                    toAminoMsg(message: _161.MsgUpdateParamsResponse): _161.MsgUpdateParamsResponseAminoMsg;
                    fromProtoMsg(message: _161.MsgUpdateParamsResponseProtoMsg): _161.MsgUpdateParamsResponse;
                    toProto(message: _161.MsgUpdateParamsResponse): Uint8Array;
                    toProtoMsg(message: _161.MsgUpdateParamsResponse): _161.MsgUpdateParamsResponseProtoMsg;
                };
                QueryClientStateRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _160.QueryClientStateRequest;
                    isSDK(o: any): o is _160.QueryClientStateRequestSDKType;
                    isAmino(o: any): o is _160.QueryClientStateRequestAmino;
                    encode(message: _160.QueryClientStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _160.QueryClientStateRequest;
                    fromJSON(object: any): _160.QueryClientStateRequest;
                    toJSON(message: _160.QueryClientStateRequest): unknown;
                    fromPartial(object: Partial<_160.QueryClientStateRequest>): _160.QueryClientStateRequest;
                    fromAmino(object: _160.QueryClientStateRequestAmino): _160.QueryClientStateRequest;
                    toAmino(message: _160.QueryClientStateRequest): _160.QueryClientStateRequestAmino;
                    fromAminoMsg(object: _160.QueryClientStateRequestAminoMsg): _160.QueryClientStateRequest;
                    toAminoMsg(message: _160.QueryClientStateRequest): _160.QueryClientStateRequestAminoMsg;
                    fromProtoMsg(message: _160.QueryClientStateRequestProtoMsg): _160.QueryClientStateRequest;
                    toProto(message: _160.QueryClientStateRequest): Uint8Array;
                    toProtoMsg(message: _160.QueryClientStateRequest): _160.QueryClientStateRequestProtoMsg;
                };
                QueryClientStateResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _160.QueryClientStateResponse;
                    isSDK(o: any): o is _160.QueryClientStateResponseSDKType;
                    isAmino(o: any): o is _160.QueryClientStateResponseAmino;
                    encode(message: _160.QueryClientStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _160.QueryClientStateResponse;
                    fromJSON(object: any): _160.QueryClientStateResponse;
                    toJSON(message: _160.QueryClientStateResponse): unknown;
                    fromPartial(object: Partial<_160.QueryClientStateResponse>): _160.QueryClientStateResponse;
                    fromAmino(object: _160.QueryClientStateResponseAmino): _160.QueryClientStateResponse;
                    toAmino(message: _160.QueryClientStateResponse): _160.QueryClientStateResponseAmino;
                    fromAminoMsg(object: _160.QueryClientStateResponseAminoMsg): _160.QueryClientStateResponse;
                    toAminoMsg(message: _160.QueryClientStateResponse): _160.QueryClientStateResponseAminoMsg;
                    fromProtoMsg(message: _160.QueryClientStateResponseProtoMsg): _160.QueryClientStateResponse;
                    toProto(message: _160.QueryClientStateResponse): Uint8Array;
                    toProtoMsg(message: _160.QueryClientStateResponse): _160.QueryClientStateResponseProtoMsg;
                };
                QueryClientStatesRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _160.QueryClientStatesRequest;
                    isSDK(o: any): o is _160.QueryClientStatesRequestSDKType;
                    isAmino(o: any): o is _160.QueryClientStatesRequestAmino;
                    encode(message: _160.QueryClientStatesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _160.QueryClientStatesRequest;
                    fromJSON(object: any): _160.QueryClientStatesRequest;
                    toJSON(message: _160.QueryClientStatesRequest): unknown;
                    fromPartial(object: Partial<_160.QueryClientStatesRequest>): _160.QueryClientStatesRequest;
                    fromAmino(object: _160.QueryClientStatesRequestAmino): _160.QueryClientStatesRequest;
                    toAmino(message: _160.QueryClientStatesRequest): _160.QueryClientStatesRequestAmino;
                    fromAminoMsg(object: _160.QueryClientStatesRequestAminoMsg): _160.QueryClientStatesRequest;
                    toAminoMsg(message: _160.QueryClientStatesRequest): _160.QueryClientStatesRequestAminoMsg;
                    fromProtoMsg(message: _160.QueryClientStatesRequestProtoMsg): _160.QueryClientStatesRequest;
                    toProto(message: _160.QueryClientStatesRequest): Uint8Array;
                    toProtoMsg(message: _160.QueryClientStatesRequest): _160.QueryClientStatesRequestProtoMsg;
                };
                QueryClientStatesResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _160.QueryClientStatesResponse;
                    isSDK(o: any): o is _160.QueryClientStatesResponseSDKType;
                    isAmino(o: any): o is _160.QueryClientStatesResponseAmino;
                    encode(message: _160.QueryClientStatesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _160.QueryClientStatesResponse;
                    fromJSON(object: any): _160.QueryClientStatesResponse;
                    toJSON(message: _160.QueryClientStatesResponse): unknown;
                    fromPartial(object: Partial<_160.QueryClientStatesResponse>): _160.QueryClientStatesResponse;
                    fromAmino(object: _160.QueryClientStatesResponseAmino): _160.QueryClientStatesResponse;
                    toAmino(message: _160.QueryClientStatesResponse): _160.QueryClientStatesResponseAmino;
                    fromAminoMsg(object: _160.QueryClientStatesResponseAminoMsg): _160.QueryClientStatesResponse;
                    toAminoMsg(message: _160.QueryClientStatesResponse): _160.QueryClientStatesResponseAminoMsg;
                    fromProtoMsg(message: _160.QueryClientStatesResponseProtoMsg): _160.QueryClientStatesResponse;
                    toProto(message: _160.QueryClientStatesResponse): Uint8Array;
                    toProtoMsg(message: _160.QueryClientStatesResponse): _160.QueryClientStatesResponseProtoMsg;
                };
                QueryConsensusStateRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _160.QueryConsensusStateRequest;
                    isSDK(o: any): o is _160.QueryConsensusStateRequestSDKType;
                    isAmino(o: any): o is _160.QueryConsensusStateRequestAmino;
                    encode(message: _160.QueryConsensusStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _160.QueryConsensusStateRequest;
                    fromJSON(object: any): _160.QueryConsensusStateRequest;
                    toJSON(message: _160.QueryConsensusStateRequest): unknown;
                    fromPartial(object: Partial<_160.QueryConsensusStateRequest>): _160.QueryConsensusStateRequest;
                    fromAmino(object: _160.QueryConsensusStateRequestAmino): _160.QueryConsensusStateRequest;
                    toAmino(message: _160.QueryConsensusStateRequest): _160.QueryConsensusStateRequestAmino;
                    fromAminoMsg(object: _160.QueryConsensusStateRequestAminoMsg): _160.QueryConsensusStateRequest;
                    toAminoMsg(message: _160.QueryConsensusStateRequest): _160.QueryConsensusStateRequestAminoMsg;
                    fromProtoMsg(message: _160.QueryConsensusStateRequestProtoMsg): _160.QueryConsensusStateRequest;
                    toProto(message: _160.QueryConsensusStateRequest): Uint8Array;
                    toProtoMsg(message: _160.QueryConsensusStateRequest): _160.QueryConsensusStateRequestProtoMsg;
                };
                QueryConsensusStateResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _160.QueryConsensusStateResponse;
                    isSDK(o: any): o is _160.QueryConsensusStateResponseSDKType;
                    isAmino(o: any): o is _160.QueryConsensusStateResponseAmino;
                    encode(message: _160.QueryConsensusStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _160.QueryConsensusStateResponse;
                    fromJSON(object: any): _160.QueryConsensusStateResponse;
                    toJSON(message: _160.QueryConsensusStateResponse): unknown;
                    fromPartial(object: Partial<_160.QueryConsensusStateResponse>): _160.QueryConsensusStateResponse;
                    fromAmino(object: _160.QueryConsensusStateResponseAmino): _160.QueryConsensusStateResponse;
                    toAmino(message: _160.QueryConsensusStateResponse): _160.QueryConsensusStateResponseAmino;
                    fromAminoMsg(object: _160.QueryConsensusStateResponseAminoMsg): _160.QueryConsensusStateResponse;
                    toAminoMsg(message: _160.QueryConsensusStateResponse): _160.QueryConsensusStateResponseAminoMsg;
                    fromProtoMsg(message: _160.QueryConsensusStateResponseProtoMsg): _160.QueryConsensusStateResponse;
                    toProto(message: _160.QueryConsensusStateResponse): Uint8Array;
                    toProtoMsg(message: _160.QueryConsensusStateResponse): _160.QueryConsensusStateResponseProtoMsg;
                };
                QueryConsensusStatesRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _160.QueryConsensusStatesRequest;
                    isSDK(o: any): o is _160.QueryConsensusStatesRequestSDKType;
                    isAmino(o: any): o is _160.QueryConsensusStatesRequestAmino;
                    encode(message: _160.QueryConsensusStatesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _160.QueryConsensusStatesRequest;
                    fromJSON(object: any): _160.QueryConsensusStatesRequest;
                    toJSON(message: _160.QueryConsensusStatesRequest): unknown;
                    fromPartial(object: Partial<_160.QueryConsensusStatesRequest>): _160.QueryConsensusStatesRequest;
                    fromAmino(object: _160.QueryConsensusStatesRequestAmino): _160.QueryConsensusStatesRequest;
                    toAmino(message: _160.QueryConsensusStatesRequest): _160.QueryConsensusStatesRequestAmino;
                    fromAminoMsg(object: _160.QueryConsensusStatesRequestAminoMsg): _160.QueryConsensusStatesRequest;
                    toAminoMsg(message: _160.QueryConsensusStatesRequest): _160.QueryConsensusStatesRequestAminoMsg;
                    fromProtoMsg(message: _160.QueryConsensusStatesRequestProtoMsg): _160.QueryConsensusStatesRequest;
                    toProto(message: _160.QueryConsensusStatesRequest): Uint8Array;
                    toProtoMsg(message: _160.QueryConsensusStatesRequest): _160.QueryConsensusStatesRequestProtoMsg;
                };
                QueryConsensusStatesResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _160.QueryConsensusStatesResponse;
                    isSDK(o: any): o is _160.QueryConsensusStatesResponseSDKType;
                    isAmino(o: any): o is _160.QueryConsensusStatesResponseAmino;
                    encode(message: _160.QueryConsensusStatesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _160.QueryConsensusStatesResponse;
                    fromJSON(object: any): _160.QueryConsensusStatesResponse;
                    toJSON(message: _160.QueryConsensusStatesResponse): unknown;
                    fromPartial(object: Partial<_160.QueryConsensusStatesResponse>): _160.QueryConsensusStatesResponse;
                    fromAmino(object: _160.QueryConsensusStatesResponseAmino): _160.QueryConsensusStatesResponse;
                    toAmino(message: _160.QueryConsensusStatesResponse): _160.QueryConsensusStatesResponseAmino;
                    fromAminoMsg(object: _160.QueryConsensusStatesResponseAminoMsg): _160.QueryConsensusStatesResponse;
                    toAminoMsg(message: _160.QueryConsensusStatesResponse): _160.QueryConsensusStatesResponseAminoMsg;
                    fromProtoMsg(message: _160.QueryConsensusStatesResponseProtoMsg): _160.QueryConsensusStatesResponse;
                    toProto(message: _160.QueryConsensusStatesResponse): Uint8Array;
                    toProtoMsg(message: _160.QueryConsensusStatesResponse): _160.QueryConsensusStatesResponseProtoMsg;
                };
                QueryConsensusStateHeightsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _160.QueryConsensusStateHeightsRequest;
                    isSDK(o: any): o is _160.QueryConsensusStateHeightsRequestSDKType;
                    isAmino(o: any): o is _160.QueryConsensusStateHeightsRequestAmino;
                    encode(message: _160.QueryConsensusStateHeightsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _160.QueryConsensusStateHeightsRequest;
                    fromJSON(object: any): _160.QueryConsensusStateHeightsRequest;
                    toJSON(message: _160.QueryConsensusStateHeightsRequest): unknown;
                    fromPartial(object: Partial<_160.QueryConsensusStateHeightsRequest>): _160.QueryConsensusStateHeightsRequest;
                    fromAmino(object: _160.QueryConsensusStateHeightsRequestAmino): _160.QueryConsensusStateHeightsRequest;
                    toAmino(message: _160.QueryConsensusStateHeightsRequest): _160.QueryConsensusStateHeightsRequestAmino;
                    fromAminoMsg(object: _160.QueryConsensusStateHeightsRequestAminoMsg): _160.QueryConsensusStateHeightsRequest;
                    toAminoMsg(message: _160.QueryConsensusStateHeightsRequest): _160.QueryConsensusStateHeightsRequestAminoMsg;
                    fromProtoMsg(message: _160.QueryConsensusStateHeightsRequestProtoMsg): _160.QueryConsensusStateHeightsRequest;
                    toProto(message: _160.QueryConsensusStateHeightsRequest): Uint8Array;
                    toProtoMsg(message: _160.QueryConsensusStateHeightsRequest): _160.QueryConsensusStateHeightsRequestProtoMsg;
                };
                QueryConsensusStateHeightsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _160.QueryConsensusStateHeightsResponse;
                    isSDK(o: any): o is _160.QueryConsensusStateHeightsResponseSDKType;
                    isAmino(o: any): o is _160.QueryConsensusStateHeightsResponseAmino;
                    encode(message: _160.QueryConsensusStateHeightsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _160.QueryConsensusStateHeightsResponse;
                    fromJSON(object: any): _160.QueryConsensusStateHeightsResponse;
                    toJSON(message: _160.QueryConsensusStateHeightsResponse): unknown;
                    fromPartial(object: Partial<_160.QueryConsensusStateHeightsResponse>): _160.QueryConsensusStateHeightsResponse;
                    fromAmino(object: _160.QueryConsensusStateHeightsResponseAmino): _160.QueryConsensusStateHeightsResponse;
                    toAmino(message: _160.QueryConsensusStateHeightsResponse): _160.QueryConsensusStateHeightsResponseAmino;
                    fromAminoMsg(object: _160.QueryConsensusStateHeightsResponseAminoMsg): _160.QueryConsensusStateHeightsResponse;
                    toAminoMsg(message: _160.QueryConsensusStateHeightsResponse): _160.QueryConsensusStateHeightsResponseAminoMsg;
                    fromProtoMsg(message: _160.QueryConsensusStateHeightsResponseProtoMsg): _160.QueryConsensusStateHeightsResponse;
                    toProto(message: _160.QueryConsensusStateHeightsResponse): Uint8Array;
                    toProtoMsg(message: _160.QueryConsensusStateHeightsResponse): _160.QueryConsensusStateHeightsResponseProtoMsg;
                };
                QueryClientStatusRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _160.QueryClientStatusRequest;
                    isSDK(o: any): o is _160.QueryClientStatusRequestSDKType;
                    isAmino(o: any): o is _160.QueryClientStatusRequestAmino;
                    encode(message: _160.QueryClientStatusRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _160.QueryClientStatusRequest;
                    fromJSON(object: any): _160.QueryClientStatusRequest;
                    toJSON(message: _160.QueryClientStatusRequest): unknown;
                    fromPartial(object: Partial<_160.QueryClientStatusRequest>): _160.QueryClientStatusRequest;
                    fromAmino(object: _160.QueryClientStatusRequestAmino): _160.QueryClientStatusRequest;
                    toAmino(message: _160.QueryClientStatusRequest): _160.QueryClientStatusRequestAmino;
                    fromAminoMsg(object: _160.QueryClientStatusRequestAminoMsg): _160.QueryClientStatusRequest;
                    toAminoMsg(message: _160.QueryClientStatusRequest): _160.QueryClientStatusRequestAminoMsg;
                    fromProtoMsg(message: _160.QueryClientStatusRequestProtoMsg): _160.QueryClientStatusRequest;
                    toProto(message: _160.QueryClientStatusRequest): Uint8Array;
                    toProtoMsg(message: _160.QueryClientStatusRequest): _160.QueryClientStatusRequestProtoMsg;
                };
                QueryClientStatusResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _160.QueryClientStatusResponse;
                    isSDK(o: any): o is _160.QueryClientStatusResponseSDKType;
                    isAmino(o: any): o is _160.QueryClientStatusResponseAmino;
                    encode(message: _160.QueryClientStatusResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _160.QueryClientStatusResponse;
                    fromJSON(object: any): _160.QueryClientStatusResponse;
                    toJSON(message: _160.QueryClientStatusResponse): unknown;
                    fromPartial(object: Partial<_160.QueryClientStatusResponse>): _160.QueryClientStatusResponse;
                    fromAmino(object: _160.QueryClientStatusResponseAmino): _160.QueryClientStatusResponse;
                    toAmino(message: _160.QueryClientStatusResponse): _160.QueryClientStatusResponseAmino;
                    fromAminoMsg(object: _160.QueryClientStatusResponseAminoMsg): _160.QueryClientStatusResponse;
                    toAminoMsg(message: _160.QueryClientStatusResponse): _160.QueryClientStatusResponseAminoMsg;
                    fromProtoMsg(message: _160.QueryClientStatusResponseProtoMsg): _160.QueryClientStatusResponse;
                    toProto(message: _160.QueryClientStatusResponse): Uint8Array;
                    toProtoMsg(message: _160.QueryClientStatusResponse): _160.QueryClientStatusResponseProtoMsg;
                };
                QueryClientParamsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _160.QueryClientParamsRequest;
                    isSDK(o: any): o is _160.QueryClientParamsRequestSDKType;
                    isAmino(o: any): o is _160.QueryClientParamsRequestAmino;
                    encode(_: _160.QueryClientParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _160.QueryClientParamsRequest;
                    fromJSON(_: any): _160.QueryClientParamsRequest;
                    toJSON(_: _160.QueryClientParamsRequest): unknown;
                    fromPartial(_: Partial<_160.QueryClientParamsRequest>): _160.QueryClientParamsRequest;
                    fromAmino(_: _160.QueryClientParamsRequestAmino): _160.QueryClientParamsRequest;
                    toAmino(_: _160.QueryClientParamsRequest): _160.QueryClientParamsRequestAmino;
                    fromAminoMsg(object: _160.QueryClientParamsRequestAminoMsg): _160.QueryClientParamsRequest;
                    toAminoMsg(message: _160.QueryClientParamsRequest): _160.QueryClientParamsRequestAminoMsg;
                    fromProtoMsg(message: _160.QueryClientParamsRequestProtoMsg): _160.QueryClientParamsRequest;
                    toProto(message: _160.QueryClientParamsRequest): Uint8Array;
                    toProtoMsg(message: _160.QueryClientParamsRequest): _160.QueryClientParamsRequestProtoMsg;
                };
                QueryClientParamsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _160.QueryClientParamsResponse;
                    isSDK(o: any): o is _160.QueryClientParamsResponseSDKType;
                    isAmino(o: any): o is _160.QueryClientParamsResponseAmino;
                    encode(message: _160.QueryClientParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _160.QueryClientParamsResponse;
                    fromJSON(object: any): _160.QueryClientParamsResponse;
                    toJSON(message: _160.QueryClientParamsResponse): unknown;
                    fromPartial(object: Partial<_160.QueryClientParamsResponse>): _160.QueryClientParamsResponse;
                    fromAmino(object: _160.QueryClientParamsResponseAmino): _160.QueryClientParamsResponse;
                    toAmino(message: _160.QueryClientParamsResponse): _160.QueryClientParamsResponseAmino;
                    fromAminoMsg(object: _160.QueryClientParamsResponseAminoMsg): _160.QueryClientParamsResponse;
                    toAminoMsg(message: _160.QueryClientParamsResponse): _160.QueryClientParamsResponseAminoMsg;
                    fromProtoMsg(message: _160.QueryClientParamsResponseProtoMsg): _160.QueryClientParamsResponse;
                    toProto(message: _160.QueryClientParamsResponse): Uint8Array;
                    toProtoMsg(message: _160.QueryClientParamsResponse): _160.QueryClientParamsResponseProtoMsg;
                };
                QueryUpgradedClientStateRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _160.QueryUpgradedClientStateRequest;
                    isSDK(o: any): o is _160.QueryUpgradedClientStateRequestSDKType;
                    isAmino(o: any): o is _160.QueryUpgradedClientStateRequestAmino;
                    encode(_: _160.QueryUpgradedClientStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _160.QueryUpgradedClientStateRequest;
                    fromJSON(_: any): _160.QueryUpgradedClientStateRequest;
                    toJSON(_: _160.QueryUpgradedClientStateRequest): unknown;
                    fromPartial(_: Partial<_160.QueryUpgradedClientStateRequest>): _160.QueryUpgradedClientStateRequest;
                    fromAmino(_: _160.QueryUpgradedClientStateRequestAmino): _160.QueryUpgradedClientStateRequest;
                    toAmino(_: _160.QueryUpgradedClientStateRequest): _160.QueryUpgradedClientStateRequestAmino;
                    fromAminoMsg(object: _160.QueryUpgradedClientStateRequestAminoMsg): _160.QueryUpgradedClientStateRequest;
                    toAminoMsg(message: _160.QueryUpgradedClientStateRequest): _160.QueryUpgradedClientStateRequestAminoMsg;
                    fromProtoMsg(message: _160.QueryUpgradedClientStateRequestProtoMsg): _160.QueryUpgradedClientStateRequest;
                    toProto(message: _160.QueryUpgradedClientStateRequest): Uint8Array;
                    toProtoMsg(message: _160.QueryUpgradedClientStateRequest): _160.QueryUpgradedClientStateRequestProtoMsg;
                };
                QueryUpgradedClientStateResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _160.QueryUpgradedClientStateResponse;
                    isSDK(o: any): o is _160.QueryUpgradedClientStateResponseSDKType;
                    isAmino(o: any): o is _160.QueryUpgradedClientStateResponseAmino;
                    encode(message: _160.QueryUpgradedClientStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _160.QueryUpgradedClientStateResponse;
                    fromJSON(object: any): _160.QueryUpgradedClientStateResponse;
                    toJSON(message: _160.QueryUpgradedClientStateResponse): unknown;
                    fromPartial(object: Partial<_160.QueryUpgradedClientStateResponse>): _160.QueryUpgradedClientStateResponse;
                    fromAmino(object: _160.QueryUpgradedClientStateResponseAmino): _160.QueryUpgradedClientStateResponse;
                    toAmino(message: _160.QueryUpgradedClientStateResponse): _160.QueryUpgradedClientStateResponseAmino;
                    fromAminoMsg(object: _160.QueryUpgradedClientStateResponseAminoMsg): _160.QueryUpgradedClientStateResponse;
                    toAminoMsg(message: _160.QueryUpgradedClientStateResponse): _160.QueryUpgradedClientStateResponseAminoMsg;
                    fromProtoMsg(message: _160.QueryUpgradedClientStateResponseProtoMsg): _160.QueryUpgradedClientStateResponse;
                    toProto(message: _160.QueryUpgradedClientStateResponse): Uint8Array;
                    toProtoMsg(message: _160.QueryUpgradedClientStateResponse): _160.QueryUpgradedClientStateResponseProtoMsg;
                };
                QueryUpgradedConsensusStateRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _160.QueryUpgradedConsensusStateRequest;
                    isSDK(o: any): o is _160.QueryUpgradedConsensusStateRequestSDKType;
                    isAmino(o: any): o is _160.QueryUpgradedConsensusStateRequestAmino;
                    encode(_: _160.QueryUpgradedConsensusStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _160.QueryUpgradedConsensusStateRequest;
                    fromJSON(_: any): _160.QueryUpgradedConsensusStateRequest;
                    toJSON(_: _160.QueryUpgradedConsensusStateRequest): unknown;
                    fromPartial(_: Partial<_160.QueryUpgradedConsensusStateRequest>): _160.QueryUpgradedConsensusStateRequest;
                    fromAmino(_: _160.QueryUpgradedConsensusStateRequestAmino): _160.QueryUpgradedConsensusStateRequest;
                    toAmino(_: _160.QueryUpgradedConsensusStateRequest): _160.QueryUpgradedConsensusStateRequestAmino;
                    fromAminoMsg(object: _160.QueryUpgradedConsensusStateRequestAminoMsg): _160.QueryUpgradedConsensusStateRequest;
                    toAminoMsg(message: _160.QueryUpgradedConsensusStateRequest): _160.QueryUpgradedConsensusStateRequestAminoMsg;
                    fromProtoMsg(message: _160.QueryUpgradedConsensusStateRequestProtoMsg): _160.QueryUpgradedConsensusStateRequest;
                    toProto(message: _160.QueryUpgradedConsensusStateRequest): Uint8Array;
                    toProtoMsg(message: _160.QueryUpgradedConsensusStateRequest): _160.QueryUpgradedConsensusStateRequestProtoMsg;
                };
                QueryUpgradedConsensusStateResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _160.QueryUpgradedConsensusStateResponse;
                    isSDK(o: any): o is _160.QueryUpgradedConsensusStateResponseSDKType;
                    isAmino(o: any): o is _160.QueryUpgradedConsensusStateResponseAmino;
                    encode(message: _160.QueryUpgradedConsensusStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _160.QueryUpgradedConsensusStateResponse;
                    fromJSON(object: any): _160.QueryUpgradedConsensusStateResponse;
                    toJSON(message: _160.QueryUpgradedConsensusStateResponse): unknown;
                    fromPartial(object: Partial<_160.QueryUpgradedConsensusStateResponse>): _160.QueryUpgradedConsensusStateResponse;
                    fromAmino(object: _160.QueryUpgradedConsensusStateResponseAmino): _160.QueryUpgradedConsensusStateResponse;
                    toAmino(message: _160.QueryUpgradedConsensusStateResponse): _160.QueryUpgradedConsensusStateResponseAmino;
                    fromAminoMsg(object: _160.QueryUpgradedConsensusStateResponseAminoMsg): _160.QueryUpgradedConsensusStateResponse;
                    toAminoMsg(message: _160.QueryUpgradedConsensusStateResponse): _160.QueryUpgradedConsensusStateResponseAminoMsg;
                    fromProtoMsg(message: _160.QueryUpgradedConsensusStateResponseProtoMsg): _160.QueryUpgradedConsensusStateResponse;
                    toProto(message: _160.QueryUpgradedConsensusStateResponse): Uint8Array;
                    toProtoMsg(message: _160.QueryUpgradedConsensusStateResponse): _160.QueryUpgradedConsensusStateResponseProtoMsg;
                };
                GenesisState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _159.GenesisState;
                    isSDK(o: any): o is _159.GenesisStateSDKType;
                    isAmino(o: any): o is _159.GenesisStateAmino;
                    encode(message: _159.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _159.GenesisState;
                    fromJSON(object: any): _159.GenesisState;
                    toJSON(message: _159.GenesisState): unknown;
                    fromPartial(object: Partial<_159.GenesisState>): _159.GenesisState;
                    fromAmino(object: _159.GenesisStateAmino): _159.GenesisState;
                    toAmino(message: _159.GenesisState): _159.GenesisStateAmino;
                    fromAminoMsg(object: _159.GenesisStateAminoMsg): _159.GenesisState;
                    toAminoMsg(message: _159.GenesisState): _159.GenesisStateAminoMsg;
                    fromProtoMsg(message: _159.GenesisStateProtoMsg): _159.GenesisState;
                    toProto(message: _159.GenesisState): Uint8Array;
                    toProtoMsg(message: _159.GenesisState): _159.GenesisStateProtoMsg;
                };
                GenesisMetadata: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _159.GenesisMetadata;
                    isSDK(o: any): o is _159.GenesisMetadataSDKType;
                    isAmino(o: any): o is _159.GenesisMetadataAmino;
                    encode(message: _159.GenesisMetadata, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _159.GenesisMetadata;
                    fromJSON(object: any): _159.GenesisMetadata;
                    toJSON(message: _159.GenesisMetadata): unknown;
                    fromPartial(object: Partial<_159.GenesisMetadata>): _159.GenesisMetadata;
                    fromAmino(object: _159.GenesisMetadataAmino): _159.GenesisMetadata;
                    toAmino(message: _159.GenesisMetadata): _159.GenesisMetadataAmino;
                    fromAminoMsg(object: _159.GenesisMetadataAminoMsg): _159.GenesisMetadata;
                    toAminoMsg(message: _159.GenesisMetadata): _159.GenesisMetadataAminoMsg;
                    fromProtoMsg(message: _159.GenesisMetadataProtoMsg): _159.GenesisMetadata;
                    toProto(message: _159.GenesisMetadata): Uint8Array;
                    toProtoMsg(message: _159.GenesisMetadata): _159.GenesisMetadataProtoMsg;
                };
                IdentifiedGenesisMetadata: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _159.IdentifiedGenesisMetadata;
                    isSDK(o: any): o is _159.IdentifiedGenesisMetadataSDKType;
                    isAmino(o: any): o is _159.IdentifiedGenesisMetadataAmino;
                    encode(message: _159.IdentifiedGenesisMetadata, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _159.IdentifiedGenesisMetadata;
                    fromJSON(object: any): _159.IdentifiedGenesisMetadata;
                    toJSON(message: _159.IdentifiedGenesisMetadata): unknown;
                    fromPartial(object: Partial<_159.IdentifiedGenesisMetadata>): _159.IdentifiedGenesisMetadata;
                    fromAmino(object: _159.IdentifiedGenesisMetadataAmino): _159.IdentifiedGenesisMetadata;
                    toAmino(message: _159.IdentifiedGenesisMetadata): _159.IdentifiedGenesisMetadataAmino;
                    fromAminoMsg(object: _159.IdentifiedGenesisMetadataAminoMsg): _159.IdentifiedGenesisMetadata;
                    toAminoMsg(message: _159.IdentifiedGenesisMetadata): _159.IdentifiedGenesisMetadataAminoMsg;
                    fromProtoMsg(message: _159.IdentifiedGenesisMetadataProtoMsg): _159.IdentifiedGenesisMetadata;
                    toProto(message: _159.IdentifiedGenesisMetadata): Uint8Array;
                    toProtoMsg(message: _159.IdentifiedGenesisMetadata): _159.IdentifiedGenesisMetadataProtoMsg;
                };
                IdentifiedClientState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _158.IdentifiedClientState;
                    isSDK(o: any): o is _158.IdentifiedClientStateSDKType;
                    isAmino(o: any): o is _158.IdentifiedClientStateAmino;
                    encode(message: _158.IdentifiedClientState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _158.IdentifiedClientState;
                    fromJSON(object: any): _158.IdentifiedClientState;
                    toJSON(message: _158.IdentifiedClientState): unknown;
                    fromPartial(object: Partial<_158.IdentifiedClientState>): _158.IdentifiedClientState;
                    fromAmino(object: _158.IdentifiedClientStateAmino): _158.IdentifiedClientState;
                    toAmino(message: _158.IdentifiedClientState): _158.IdentifiedClientStateAmino;
                    fromAminoMsg(object: _158.IdentifiedClientStateAminoMsg): _158.IdentifiedClientState;
                    toAminoMsg(message: _158.IdentifiedClientState): _158.IdentifiedClientStateAminoMsg;
                    fromProtoMsg(message: _158.IdentifiedClientStateProtoMsg): _158.IdentifiedClientState;
                    toProto(message: _158.IdentifiedClientState): Uint8Array;
                    toProtoMsg(message: _158.IdentifiedClientState): _158.IdentifiedClientStateProtoMsg;
                };
                ConsensusStateWithHeight: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _158.ConsensusStateWithHeight;
                    isSDK(o: any): o is _158.ConsensusStateWithHeightSDKType;
                    isAmino(o: any): o is _158.ConsensusStateWithHeightAmino;
                    encode(message: _158.ConsensusStateWithHeight, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _158.ConsensusStateWithHeight;
                    fromJSON(object: any): _158.ConsensusStateWithHeight;
                    toJSON(message: _158.ConsensusStateWithHeight): unknown;
                    fromPartial(object: Partial<_158.ConsensusStateWithHeight>): _158.ConsensusStateWithHeight;
                    fromAmino(object: _158.ConsensusStateWithHeightAmino): _158.ConsensusStateWithHeight;
                    toAmino(message: _158.ConsensusStateWithHeight): _158.ConsensusStateWithHeightAmino;
                    fromAminoMsg(object: _158.ConsensusStateWithHeightAminoMsg): _158.ConsensusStateWithHeight;
                    toAminoMsg(message: _158.ConsensusStateWithHeight): _158.ConsensusStateWithHeightAminoMsg;
                    fromProtoMsg(message: _158.ConsensusStateWithHeightProtoMsg): _158.ConsensusStateWithHeight;
                    toProto(message: _158.ConsensusStateWithHeight): Uint8Array;
                    toProtoMsg(message: _158.ConsensusStateWithHeight): _158.ConsensusStateWithHeightProtoMsg;
                };
                ClientConsensusStates: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _158.ClientConsensusStates;
                    isSDK(o: any): o is _158.ClientConsensusStatesSDKType;
                    isAmino(o: any): o is _158.ClientConsensusStatesAmino;
                    encode(message: _158.ClientConsensusStates, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _158.ClientConsensusStates;
                    fromJSON(object: any): _158.ClientConsensusStates;
                    toJSON(message: _158.ClientConsensusStates): unknown;
                    fromPartial(object: Partial<_158.ClientConsensusStates>): _158.ClientConsensusStates;
                    fromAmino(object: _158.ClientConsensusStatesAmino): _158.ClientConsensusStates;
                    toAmino(message: _158.ClientConsensusStates): _158.ClientConsensusStatesAmino;
                    fromAminoMsg(object: _158.ClientConsensusStatesAminoMsg): _158.ClientConsensusStates;
                    toAminoMsg(message: _158.ClientConsensusStates): _158.ClientConsensusStatesAminoMsg;
                    fromProtoMsg(message: _158.ClientConsensusStatesProtoMsg): _158.ClientConsensusStates;
                    toProto(message: _158.ClientConsensusStates): Uint8Array;
                    toProtoMsg(message: _158.ClientConsensusStates): _158.ClientConsensusStatesProtoMsg;
                };
                Height: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _158.Height;
                    isSDK(o: any): o is _158.HeightSDKType;
                    isAmino(o: any): o is _158.HeightAmino;
                    encode(message: _158.Height, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _158.Height;
                    fromJSON(object: any): _158.Height;
                    toJSON(message: _158.Height): unknown;
                    fromPartial(object: Partial<_158.Height>): _158.Height;
                    fromAmino(object: _158.HeightAmino): _158.Height;
                    toAmino(message: _158.Height): _158.HeightAmino;
                    fromAminoMsg(object: _158.HeightAminoMsg): _158.Height;
                    toAminoMsg(message: _158.Height): _158.HeightAminoMsg;
                    fromProtoMsg(message: _158.HeightProtoMsg): _158.Height;
                    toProto(message: _158.Height): Uint8Array;
                    toProtoMsg(message: _158.Height): _158.HeightProtoMsg;
                };
                Params: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _158.Params;
                    isSDK(o: any): o is _158.ParamsSDKType;
                    isAmino(o: any): o is _158.ParamsAmino;
                    encode(message: _158.Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _158.Params;
                    fromJSON(object: any): _158.Params;
                    toJSON(message: _158.Params): unknown;
                    fromPartial(object: Partial<_158.Params>): _158.Params;
                    fromAmino(object: _158.ParamsAmino): _158.Params;
                    toAmino(message: _158.Params): _158.ParamsAmino;
                    fromAminoMsg(object: _158.ParamsAminoMsg): _158.Params;
                    toAminoMsg(message: _158.Params): _158.ParamsAminoMsg;
                    fromProtoMsg(message: _158.ParamsProtoMsg): _158.Params;
                    toProto(message: _158.Params): Uint8Array;
                    toProtoMsg(message: _158.Params): _158.ParamsProtoMsg;
                };
                ClientUpdateProposal: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _158.ClientUpdateProposal;
                    isSDK(o: any): o is _158.ClientUpdateProposalSDKType;
                    isAmino(o: any): o is _158.ClientUpdateProposalAmino;
                    encode(message: _158.ClientUpdateProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _158.ClientUpdateProposal;
                    fromJSON(object: any): _158.ClientUpdateProposal;
                    toJSON(message: _158.ClientUpdateProposal): unknown;
                    fromPartial(object: Partial<_158.ClientUpdateProposal>): _158.ClientUpdateProposal;
                    fromAmino(object: _158.ClientUpdateProposalAmino): _158.ClientUpdateProposal;
                    toAmino(message: _158.ClientUpdateProposal): _158.ClientUpdateProposalAmino;
                    fromAminoMsg(object: _158.ClientUpdateProposalAminoMsg): _158.ClientUpdateProposal;
                    toAminoMsg(message: _158.ClientUpdateProposal): _158.ClientUpdateProposalAminoMsg;
                    fromProtoMsg(message: _158.ClientUpdateProposalProtoMsg): _158.ClientUpdateProposal;
                    toProto(message: _158.ClientUpdateProposal): Uint8Array;
                    toProtoMsg(message: _158.ClientUpdateProposal): _158.ClientUpdateProposalProtoMsg;
                };
                UpgradeProposal: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _158.UpgradeProposal;
                    isSDK(o: any): o is _158.UpgradeProposalSDKType;
                    isAmino(o: any): o is _158.UpgradeProposalAmino;
                    encode(message: _158.UpgradeProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _158.UpgradeProposal;
                    fromJSON(object: any): _158.UpgradeProposal;
                    toJSON(message: _158.UpgradeProposal): unknown;
                    fromPartial(object: Partial<_158.UpgradeProposal>): _158.UpgradeProposal;
                    fromAmino(object: _158.UpgradeProposalAmino): _158.UpgradeProposal;
                    toAmino(message: _158.UpgradeProposal): _158.UpgradeProposalAmino;
                    fromAminoMsg(object: _158.UpgradeProposalAminoMsg): _158.UpgradeProposal;
                    toAminoMsg(message: _158.UpgradeProposal): _158.UpgradeProposalAminoMsg;
                    fromProtoMsg(message: _158.UpgradeProposalProtoMsg): _158.UpgradeProposal;
                    toProto(message: _158.UpgradeProposal): Uint8Array;
                    toProtoMsg(message: _158.UpgradeProposal): _158.UpgradeProposalProtoMsg;
                };
            };
        }
        namespace commitment {
            const v1: {
                protobufPackage: "ibc.core.commitment.v1";
                MerkleRoot: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _162.MerkleRoot;
                    isSDK(o: any): o is _162.MerkleRootSDKType;
                    isAmino(o: any): o is _162.MerkleRootAmino;
                    encode(message: _162.MerkleRoot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _162.MerkleRoot;
                    fromJSON(object: any): _162.MerkleRoot;
                    toJSON(message: _162.MerkleRoot): unknown;
                    fromPartial(object: Partial<_162.MerkleRoot>): _162.MerkleRoot;
                    fromAmino(object: _162.MerkleRootAmino): _162.MerkleRoot;
                    toAmino(message: _162.MerkleRoot): _162.MerkleRootAmino;
                    fromAminoMsg(object: _162.MerkleRootAminoMsg): _162.MerkleRoot;
                    toAminoMsg(message: _162.MerkleRoot): _162.MerkleRootAminoMsg;
                    fromProtoMsg(message: _162.MerkleRootProtoMsg): _162.MerkleRoot;
                    toProto(message: _162.MerkleRoot): Uint8Array;
                    toProtoMsg(message: _162.MerkleRoot): _162.MerkleRootProtoMsg;
                };
                MerklePrefix: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _162.MerklePrefix;
                    isSDK(o: any): o is _162.MerklePrefixSDKType;
                    isAmino(o: any): o is _162.MerklePrefixAmino;
                    encode(message: _162.MerklePrefix, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _162.MerklePrefix;
                    fromJSON(object: any): _162.MerklePrefix;
                    toJSON(message: _162.MerklePrefix): unknown;
                    fromPartial(object: Partial<_162.MerklePrefix>): _162.MerklePrefix;
                    fromAmino(object: _162.MerklePrefixAmino): _162.MerklePrefix;
                    toAmino(message: _162.MerklePrefix): _162.MerklePrefixAmino;
                    fromAminoMsg(object: _162.MerklePrefixAminoMsg): _162.MerklePrefix;
                    toAminoMsg(message: _162.MerklePrefix): _162.MerklePrefixAminoMsg;
                    fromProtoMsg(message: _162.MerklePrefixProtoMsg): _162.MerklePrefix;
                    toProto(message: _162.MerklePrefix): Uint8Array;
                    toProtoMsg(message: _162.MerklePrefix): _162.MerklePrefixProtoMsg;
                };
                MerklePath: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _162.MerklePath;
                    isSDK(o: any): o is _162.MerklePathSDKType;
                    isAmino(o: any): o is _162.MerklePathAmino;
                    encode(message: _162.MerklePath, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _162.MerklePath;
                    fromJSON(object: any): _162.MerklePath;
                    toJSON(message: _162.MerklePath): unknown;
                    fromPartial(object: Partial<_162.MerklePath>): _162.MerklePath;
                    fromAmino(object: _162.MerklePathAmino): _162.MerklePath;
                    toAmino(message: _162.MerklePath): _162.MerklePathAmino;
                    fromAminoMsg(object: _162.MerklePathAminoMsg): _162.MerklePath;
                    toAminoMsg(message: _162.MerklePath): _162.MerklePathAminoMsg;
                    fromProtoMsg(message: _162.MerklePathProtoMsg): _162.MerklePath;
                    toProto(message: _162.MerklePath): Uint8Array;
                    toProtoMsg(message: _162.MerklePath): _162.MerklePathProtoMsg;
                };
                MerkleProof: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _162.MerkleProof;
                    isSDK(o: any): o is _162.MerkleProofSDKType;
                    isAmino(o: any): o is _162.MerkleProofAmino;
                    encode(message: _162.MerkleProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _162.MerkleProof;
                    fromJSON(object: any): _162.MerkleProof;
                    toJSON(message: _162.MerkleProof): unknown;
                    fromPartial(object: Partial<_162.MerkleProof>): _162.MerkleProof;
                    fromAmino(object: _162.MerkleProofAmino): _162.MerkleProof;
                    toAmino(message: _162.MerkleProof): _162.MerkleProofAmino;
                    fromAminoMsg(object: _162.MerkleProofAminoMsg): _162.MerkleProof;
                    toAminoMsg(message: _162.MerkleProof): _162.MerkleProofAminoMsg;
                    fromProtoMsg(message: _162.MerkleProofProtoMsg): _162.MerkleProof;
                    toProto(message: _162.MerkleProof): Uint8Array;
                    toProtoMsg(message: _162.MerkleProof): _162.MerkleProofProtoMsg;
                };
            };
        }
        namespace connection {
            const v1: {
                LCDQueryClient: typeof _257.LCDQueryClient;
                registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
                load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
                MessageComposer: {
                    encoded: {
                        connectionOpenInit(value: _166.MsgConnectionOpenInit): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        connectionOpenTry(value: _166.MsgConnectionOpenTry): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        connectionOpenAck(value: _166.MsgConnectionOpenAck): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        connectionOpenConfirm(value: _166.MsgConnectionOpenConfirm): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        updateConnectionParams(value: _166.MsgUpdateParams): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                    };
                    withTypeUrl: {
                        connectionOpenInit(value: _166.MsgConnectionOpenInit): {
                            typeUrl: string;
                            value: _166.MsgConnectionOpenInit;
                        };
                        connectionOpenTry(value: _166.MsgConnectionOpenTry): {
                            typeUrl: string;
                            value: _166.MsgConnectionOpenTry;
                        };
                        connectionOpenAck(value: _166.MsgConnectionOpenAck): {
                            typeUrl: string;
                            value: _166.MsgConnectionOpenAck;
                        };
                        connectionOpenConfirm(value: _166.MsgConnectionOpenConfirm): {
                            typeUrl: string;
                            value: _166.MsgConnectionOpenConfirm;
                        };
                        updateConnectionParams(value: _166.MsgUpdateParams): {
                            typeUrl: string;
                            value: _166.MsgUpdateParams;
                        };
                    };
                    toJSON: {
                        connectionOpenInit(value: _166.MsgConnectionOpenInit): {
                            typeUrl: string;
                            value: unknown;
                        };
                        connectionOpenTry(value: _166.MsgConnectionOpenTry): {
                            typeUrl: string;
                            value: unknown;
                        };
                        connectionOpenAck(value: _166.MsgConnectionOpenAck): {
                            typeUrl: string;
                            value: unknown;
                        };
                        connectionOpenConfirm(value: _166.MsgConnectionOpenConfirm): {
                            typeUrl: string;
                            value: unknown;
                        };
                        updateConnectionParams(value: _166.MsgUpdateParams): {
                            typeUrl: string;
                            value: unknown;
                        };
                    };
                    fromJSON: {
                        connectionOpenInit(value: any): {
                            typeUrl: string;
                            value: _166.MsgConnectionOpenInit;
                        };
                        connectionOpenTry(value: any): {
                            typeUrl: string;
                            value: _166.MsgConnectionOpenTry;
                        };
                        connectionOpenAck(value: any): {
                            typeUrl: string;
                            value: _166.MsgConnectionOpenAck;
                        };
                        connectionOpenConfirm(value: any): {
                            typeUrl: string;
                            value: _166.MsgConnectionOpenConfirm;
                        };
                        updateConnectionParams(value: any): {
                            typeUrl: string;
                            value: _166.MsgUpdateParams;
                        };
                    };
                    fromPartial: {
                        connectionOpenInit(value: _166.MsgConnectionOpenInit): {
                            typeUrl: string;
                            value: _166.MsgConnectionOpenInit;
                        };
                        connectionOpenTry(value: _166.MsgConnectionOpenTry): {
                            typeUrl: string;
                            value: _166.MsgConnectionOpenTry;
                        };
                        connectionOpenAck(value: _166.MsgConnectionOpenAck): {
                            typeUrl: string;
                            value: _166.MsgConnectionOpenAck;
                        };
                        connectionOpenConfirm(value: _166.MsgConnectionOpenConfirm): {
                            typeUrl: string;
                            value: _166.MsgConnectionOpenConfirm;
                        };
                        updateConnectionParams(value: _166.MsgUpdateParams): {
                            typeUrl: string;
                            value: _166.MsgUpdateParams;
                        };
                    };
                };
                AminoConverter: {
                    "/ibc.core.connection.v1.MsgConnectionOpenInit": {
                        aminoType: string;
                        toAmino: (message: _166.MsgConnectionOpenInit) => _166.MsgConnectionOpenInitAmino;
                        fromAmino: (object: _166.MsgConnectionOpenInitAmino) => _166.MsgConnectionOpenInit;
                    };
                    "/ibc.core.connection.v1.MsgConnectionOpenTry": {
                        aminoType: string;
                        toAmino: (message: _166.MsgConnectionOpenTry) => _166.MsgConnectionOpenTryAmino;
                        fromAmino: (object: _166.MsgConnectionOpenTryAmino) => _166.MsgConnectionOpenTry;
                    };
                    "/ibc.core.connection.v1.MsgConnectionOpenAck": {
                        aminoType: string;
                        toAmino: (message: _166.MsgConnectionOpenAck) => _166.MsgConnectionOpenAckAmino;
                        fromAmino: (object: _166.MsgConnectionOpenAckAmino) => _166.MsgConnectionOpenAck;
                    };
                    "/ibc.core.connection.v1.MsgConnectionOpenConfirm": {
                        aminoType: string;
                        toAmino: (message: _166.MsgConnectionOpenConfirm) => _166.MsgConnectionOpenConfirmAmino;
                        fromAmino: (object: _166.MsgConnectionOpenConfirmAmino) => _166.MsgConnectionOpenConfirm;
                    };
                    "/ibc.core.connection.v1.MsgUpdateParams": {
                        aminoType: string;
                        toAmino: (message: _166.MsgUpdateParams) => _166.MsgUpdateParamsAmino;
                        fromAmino: (object: _166.MsgUpdateParamsAmino) => _166.MsgUpdateParams;
                    };
                };
                protobufPackage: "ibc.core.connection.v1";
                MsgConnectionOpenInit: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _166.MsgConnectionOpenInit;
                    isSDK(o: any): o is _166.MsgConnectionOpenInitSDKType;
                    isAmino(o: any): o is _166.MsgConnectionOpenInitAmino;
                    encode(message: _166.MsgConnectionOpenInit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _166.MsgConnectionOpenInit;
                    fromJSON(object: any): _166.MsgConnectionOpenInit;
                    toJSON(message: _166.MsgConnectionOpenInit): unknown;
                    fromPartial(object: Partial<_166.MsgConnectionOpenInit>): _166.MsgConnectionOpenInit;
                    fromAmino(object: _166.MsgConnectionOpenInitAmino): _166.MsgConnectionOpenInit;
                    toAmino(message: _166.MsgConnectionOpenInit): _166.MsgConnectionOpenInitAmino;
                    fromAminoMsg(object: _166.MsgConnectionOpenInitAminoMsg): _166.MsgConnectionOpenInit;
                    toAminoMsg(message: _166.MsgConnectionOpenInit): _166.MsgConnectionOpenInitAminoMsg;
                    fromProtoMsg(message: _166.MsgConnectionOpenInitProtoMsg): _166.MsgConnectionOpenInit;
                    toProto(message: _166.MsgConnectionOpenInit): Uint8Array;
                    toProtoMsg(message: _166.MsgConnectionOpenInit): _166.MsgConnectionOpenInitProtoMsg;
                };
                MsgConnectionOpenInitResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _166.MsgConnectionOpenInitResponse;
                    isSDK(o: any): o is _166.MsgConnectionOpenInitResponseSDKType;
                    isAmino(o: any): o is _166.MsgConnectionOpenInitResponseAmino;
                    encode(_: _166.MsgConnectionOpenInitResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _166.MsgConnectionOpenInitResponse;
                    fromJSON(_: any): _166.MsgConnectionOpenInitResponse;
                    toJSON(_: _166.MsgConnectionOpenInitResponse): unknown;
                    fromPartial(_: Partial<_166.MsgConnectionOpenInitResponse>): _166.MsgConnectionOpenInitResponse;
                    fromAmino(_: _166.MsgConnectionOpenInitResponseAmino): _166.MsgConnectionOpenInitResponse;
                    toAmino(_: _166.MsgConnectionOpenInitResponse): _166.MsgConnectionOpenInitResponseAmino;
                    fromAminoMsg(object: _166.MsgConnectionOpenInitResponseAminoMsg): _166.MsgConnectionOpenInitResponse;
                    toAminoMsg(message: _166.MsgConnectionOpenInitResponse): _166.MsgConnectionOpenInitResponseAminoMsg;
                    fromProtoMsg(message: _166.MsgConnectionOpenInitResponseProtoMsg): _166.MsgConnectionOpenInitResponse;
                    toProto(message: _166.MsgConnectionOpenInitResponse): Uint8Array;
                    toProtoMsg(message: _166.MsgConnectionOpenInitResponse): _166.MsgConnectionOpenInitResponseProtoMsg;
                };
                MsgConnectionOpenTry: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _166.MsgConnectionOpenTry;
                    isSDK(o: any): o is _166.MsgConnectionOpenTrySDKType;
                    isAmino(o: any): o is _166.MsgConnectionOpenTryAmino;
                    encode(message: _166.MsgConnectionOpenTry, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _166.MsgConnectionOpenTry;
                    fromJSON(object: any): _166.MsgConnectionOpenTry;
                    toJSON(message: _166.MsgConnectionOpenTry): unknown;
                    fromPartial(object: Partial<_166.MsgConnectionOpenTry>): _166.MsgConnectionOpenTry;
                    fromAmino(object: _166.MsgConnectionOpenTryAmino): _166.MsgConnectionOpenTry;
                    toAmino(message: _166.MsgConnectionOpenTry): _166.MsgConnectionOpenTryAmino;
                    fromAminoMsg(object: _166.MsgConnectionOpenTryAminoMsg): _166.MsgConnectionOpenTry;
                    toAminoMsg(message: _166.MsgConnectionOpenTry): _166.MsgConnectionOpenTryAminoMsg;
                    fromProtoMsg(message: _166.MsgConnectionOpenTryProtoMsg): _166.MsgConnectionOpenTry;
                    toProto(message: _166.MsgConnectionOpenTry): Uint8Array;
                    toProtoMsg(message: _166.MsgConnectionOpenTry): _166.MsgConnectionOpenTryProtoMsg;
                };
                MsgConnectionOpenTryResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _166.MsgConnectionOpenTryResponse;
                    isSDK(o: any): o is _166.MsgConnectionOpenTryResponseSDKType;
                    isAmino(o: any): o is _166.MsgConnectionOpenTryResponseAmino;
                    encode(_: _166.MsgConnectionOpenTryResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _166.MsgConnectionOpenTryResponse;
                    fromJSON(_: any): _166.MsgConnectionOpenTryResponse;
                    toJSON(_: _166.MsgConnectionOpenTryResponse): unknown;
                    fromPartial(_: Partial<_166.MsgConnectionOpenTryResponse>): _166.MsgConnectionOpenTryResponse;
                    fromAmino(_: _166.MsgConnectionOpenTryResponseAmino): _166.MsgConnectionOpenTryResponse;
                    toAmino(_: _166.MsgConnectionOpenTryResponse): _166.MsgConnectionOpenTryResponseAmino;
                    fromAminoMsg(object: _166.MsgConnectionOpenTryResponseAminoMsg): _166.MsgConnectionOpenTryResponse;
                    toAminoMsg(message: _166.MsgConnectionOpenTryResponse): _166.MsgConnectionOpenTryResponseAminoMsg;
                    fromProtoMsg(message: _166.MsgConnectionOpenTryResponseProtoMsg): _166.MsgConnectionOpenTryResponse;
                    toProto(message: _166.MsgConnectionOpenTryResponse): Uint8Array;
                    toProtoMsg(message: _166.MsgConnectionOpenTryResponse): _166.MsgConnectionOpenTryResponseProtoMsg;
                };
                MsgConnectionOpenAck: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _166.MsgConnectionOpenAck;
                    isSDK(o: any): o is _166.MsgConnectionOpenAckSDKType;
                    isAmino(o: any): o is _166.MsgConnectionOpenAckAmino;
                    encode(message: _166.MsgConnectionOpenAck, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _166.MsgConnectionOpenAck;
                    fromJSON(object: any): _166.MsgConnectionOpenAck;
                    toJSON(message: _166.MsgConnectionOpenAck): unknown;
                    fromPartial(object: Partial<_166.MsgConnectionOpenAck>): _166.MsgConnectionOpenAck;
                    fromAmino(object: _166.MsgConnectionOpenAckAmino): _166.MsgConnectionOpenAck;
                    toAmino(message: _166.MsgConnectionOpenAck): _166.MsgConnectionOpenAckAmino;
                    fromAminoMsg(object: _166.MsgConnectionOpenAckAminoMsg): _166.MsgConnectionOpenAck;
                    toAminoMsg(message: _166.MsgConnectionOpenAck): _166.MsgConnectionOpenAckAminoMsg;
                    fromProtoMsg(message: _166.MsgConnectionOpenAckProtoMsg): _166.MsgConnectionOpenAck;
                    toProto(message: _166.MsgConnectionOpenAck): Uint8Array;
                    toProtoMsg(message: _166.MsgConnectionOpenAck): _166.MsgConnectionOpenAckProtoMsg;
                };
                MsgConnectionOpenAckResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _166.MsgConnectionOpenAckResponse;
                    isSDK(o: any): o is _166.MsgConnectionOpenAckResponseSDKType;
                    isAmino(o: any): o is _166.MsgConnectionOpenAckResponseAmino;
                    encode(_: _166.MsgConnectionOpenAckResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _166.MsgConnectionOpenAckResponse;
                    fromJSON(_: any): _166.MsgConnectionOpenAckResponse;
                    toJSON(_: _166.MsgConnectionOpenAckResponse): unknown;
                    fromPartial(_: Partial<_166.MsgConnectionOpenAckResponse>): _166.MsgConnectionOpenAckResponse;
                    fromAmino(_: _166.MsgConnectionOpenAckResponseAmino): _166.MsgConnectionOpenAckResponse;
                    toAmino(_: _166.MsgConnectionOpenAckResponse): _166.MsgConnectionOpenAckResponseAmino;
                    fromAminoMsg(object: _166.MsgConnectionOpenAckResponseAminoMsg): _166.MsgConnectionOpenAckResponse;
                    toAminoMsg(message: _166.MsgConnectionOpenAckResponse): _166.MsgConnectionOpenAckResponseAminoMsg;
                    fromProtoMsg(message: _166.MsgConnectionOpenAckResponseProtoMsg): _166.MsgConnectionOpenAckResponse;
                    toProto(message: _166.MsgConnectionOpenAckResponse): Uint8Array;
                    toProtoMsg(message: _166.MsgConnectionOpenAckResponse): _166.MsgConnectionOpenAckResponseProtoMsg;
                };
                MsgConnectionOpenConfirm: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _166.MsgConnectionOpenConfirm;
                    isSDK(o: any): o is _166.MsgConnectionOpenConfirmSDKType;
                    isAmino(o: any): o is _166.MsgConnectionOpenConfirmAmino;
                    encode(message: _166.MsgConnectionOpenConfirm, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _166.MsgConnectionOpenConfirm;
                    fromJSON(object: any): _166.MsgConnectionOpenConfirm;
                    toJSON(message: _166.MsgConnectionOpenConfirm): unknown;
                    fromPartial(object: Partial<_166.MsgConnectionOpenConfirm>): _166.MsgConnectionOpenConfirm;
                    fromAmino(object: _166.MsgConnectionOpenConfirmAmino): _166.MsgConnectionOpenConfirm;
                    toAmino(message: _166.MsgConnectionOpenConfirm): _166.MsgConnectionOpenConfirmAmino;
                    fromAminoMsg(object: _166.MsgConnectionOpenConfirmAminoMsg): _166.MsgConnectionOpenConfirm;
                    toAminoMsg(message: _166.MsgConnectionOpenConfirm): _166.MsgConnectionOpenConfirmAminoMsg;
                    fromProtoMsg(message: _166.MsgConnectionOpenConfirmProtoMsg): _166.MsgConnectionOpenConfirm;
                    toProto(message: _166.MsgConnectionOpenConfirm): Uint8Array;
                    toProtoMsg(message: _166.MsgConnectionOpenConfirm): _166.MsgConnectionOpenConfirmProtoMsg;
                };
                MsgConnectionOpenConfirmResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _166.MsgConnectionOpenConfirmResponse;
                    isSDK(o: any): o is _166.MsgConnectionOpenConfirmResponseSDKType;
                    isAmino(o: any): o is _166.MsgConnectionOpenConfirmResponseAmino;
                    encode(_: _166.MsgConnectionOpenConfirmResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _166.MsgConnectionOpenConfirmResponse;
                    fromJSON(_: any): _166.MsgConnectionOpenConfirmResponse;
                    toJSON(_: _166.MsgConnectionOpenConfirmResponse): unknown;
                    fromPartial(_: Partial<_166.MsgConnectionOpenConfirmResponse>): _166.MsgConnectionOpenConfirmResponse;
                    fromAmino(_: _166.MsgConnectionOpenConfirmResponseAmino): _166.MsgConnectionOpenConfirmResponse;
                    toAmino(_: _166.MsgConnectionOpenConfirmResponse): _166.MsgConnectionOpenConfirmResponseAmino;
                    fromAminoMsg(object: _166.MsgConnectionOpenConfirmResponseAminoMsg): _166.MsgConnectionOpenConfirmResponse;
                    toAminoMsg(message: _166.MsgConnectionOpenConfirmResponse): _166.MsgConnectionOpenConfirmResponseAminoMsg;
                    fromProtoMsg(message: _166.MsgConnectionOpenConfirmResponseProtoMsg): _166.MsgConnectionOpenConfirmResponse;
                    toProto(message: _166.MsgConnectionOpenConfirmResponse): Uint8Array;
                    toProtoMsg(message: _166.MsgConnectionOpenConfirmResponse): _166.MsgConnectionOpenConfirmResponseProtoMsg;
                };
                MsgUpdateParams: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _166.MsgUpdateParams;
                    isSDK(o: any): o is _166.MsgUpdateParamsSDKType;
                    isAmino(o: any): o is _166.MsgUpdateParamsAmino;
                    encode(message: _166.MsgUpdateParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _166.MsgUpdateParams;
                    fromJSON(object: any): _166.MsgUpdateParams;
                    toJSON(message: _166.MsgUpdateParams): unknown;
                    fromPartial(object: Partial<_166.MsgUpdateParams>): _166.MsgUpdateParams;
                    fromAmino(object: _166.MsgUpdateParamsAmino): _166.MsgUpdateParams;
                    toAmino(message: _166.MsgUpdateParams): _166.MsgUpdateParamsAmino;
                    fromAminoMsg(object: _166.MsgUpdateParamsAminoMsg): _166.MsgUpdateParams;
                    toAminoMsg(message: _166.MsgUpdateParams): _166.MsgUpdateParamsAminoMsg;
                    fromProtoMsg(message: _166.MsgUpdateParamsProtoMsg): _166.MsgUpdateParams;
                    toProto(message: _166.MsgUpdateParams): Uint8Array;
                    toProtoMsg(message: _166.MsgUpdateParams): _166.MsgUpdateParamsProtoMsg;
                };
                MsgUpdateParamsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _166.MsgUpdateParamsResponse;
                    isSDK(o: any): o is _166.MsgUpdateParamsResponseSDKType;
                    isAmino(o: any): o is _166.MsgUpdateParamsResponseAmino;
                    encode(_: _166.MsgUpdateParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _166.MsgUpdateParamsResponse;
                    fromJSON(_: any): _166.MsgUpdateParamsResponse;
                    toJSON(_: _166.MsgUpdateParamsResponse): unknown;
                    fromPartial(_: Partial<_166.MsgUpdateParamsResponse>): _166.MsgUpdateParamsResponse;
                    fromAmino(_: _166.MsgUpdateParamsResponseAmino): _166.MsgUpdateParamsResponse;
                    toAmino(_: _166.MsgUpdateParamsResponse): _166.MsgUpdateParamsResponseAmino;
                    fromAminoMsg(object: _166.MsgUpdateParamsResponseAminoMsg): _166.MsgUpdateParamsResponse;
                    toAminoMsg(message: _166.MsgUpdateParamsResponse): _166.MsgUpdateParamsResponseAminoMsg;
                    fromProtoMsg(message: _166.MsgUpdateParamsResponseProtoMsg): _166.MsgUpdateParamsResponse;
                    toProto(message: _166.MsgUpdateParamsResponse): Uint8Array;
                    toProtoMsg(message: _166.MsgUpdateParamsResponse): _166.MsgUpdateParamsResponseProtoMsg;
                };
                QueryConnectionRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _165.QueryConnectionRequest;
                    isSDK(o: any): o is _165.QueryConnectionRequestSDKType;
                    isAmino(o: any): o is _165.QueryConnectionRequestAmino;
                    encode(message: _165.QueryConnectionRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _165.QueryConnectionRequest;
                    fromJSON(object: any): _165.QueryConnectionRequest;
                    toJSON(message: _165.QueryConnectionRequest): unknown;
                    fromPartial(object: Partial<_165.QueryConnectionRequest>): _165.QueryConnectionRequest;
                    fromAmino(object: _165.QueryConnectionRequestAmino): _165.QueryConnectionRequest;
                    toAmino(message: _165.QueryConnectionRequest): _165.QueryConnectionRequestAmino;
                    fromAminoMsg(object: _165.QueryConnectionRequestAminoMsg): _165.QueryConnectionRequest;
                    toAminoMsg(message: _165.QueryConnectionRequest): _165.QueryConnectionRequestAminoMsg;
                    fromProtoMsg(message: _165.QueryConnectionRequestProtoMsg): _165.QueryConnectionRequest;
                    toProto(message: _165.QueryConnectionRequest): Uint8Array;
                    toProtoMsg(message: _165.QueryConnectionRequest): _165.QueryConnectionRequestProtoMsg;
                };
                QueryConnectionResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _165.QueryConnectionResponse;
                    isSDK(o: any): o is _165.QueryConnectionResponseSDKType;
                    isAmino(o: any): o is _165.QueryConnectionResponseAmino;
                    encode(message: _165.QueryConnectionResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _165.QueryConnectionResponse;
                    fromJSON(object: any): _165.QueryConnectionResponse;
                    toJSON(message: _165.QueryConnectionResponse): unknown;
                    fromPartial(object: Partial<_165.QueryConnectionResponse>): _165.QueryConnectionResponse;
                    fromAmino(object: _165.QueryConnectionResponseAmino): _165.QueryConnectionResponse;
                    toAmino(message: _165.QueryConnectionResponse): _165.QueryConnectionResponseAmino;
                    fromAminoMsg(object: _165.QueryConnectionResponseAminoMsg): _165.QueryConnectionResponse;
                    toAminoMsg(message: _165.QueryConnectionResponse): _165.QueryConnectionResponseAminoMsg;
                    fromProtoMsg(message: _165.QueryConnectionResponseProtoMsg): _165.QueryConnectionResponse;
                    toProto(message: _165.QueryConnectionResponse): Uint8Array;
                    toProtoMsg(message: _165.QueryConnectionResponse): _165.QueryConnectionResponseProtoMsg;
                };
                QueryConnectionsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _165.QueryConnectionsRequest;
                    isSDK(o: any): o is _165.QueryConnectionsRequestSDKType;
                    isAmino(o: any): o is _165.QueryConnectionsRequestAmino;
                    encode(message: _165.QueryConnectionsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _165.QueryConnectionsRequest;
                    fromJSON(object: any): _165.QueryConnectionsRequest;
                    toJSON(message: _165.QueryConnectionsRequest): unknown;
                    fromPartial(object: Partial<_165.QueryConnectionsRequest>): _165.QueryConnectionsRequest;
                    fromAmino(object: _165.QueryConnectionsRequestAmino): _165.QueryConnectionsRequest;
                    toAmino(message: _165.QueryConnectionsRequest): _165.QueryConnectionsRequestAmino;
                    fromAminoMsg(object: _165.QueryConnectionsRequestAminoMsg): _165.QueryConnectionsRequest;
                    toAminoMsg(message: _165.QueryConnectionsRequest): _165.QueryConnectionsRequestAminoMsg;
                    fromProtoMsg(message: _165.QueryConnectionsRequestProtoMsg): _165.QueryConnectionsRequest;
                    toProto(message: _165.QueryConnectionsRequest): Uint8Array;
                    toProtoMsg(message: _165.QueryConnectionsRequest): _165.QueryConnectionsRequestProtoMsg;
                };
                QueryConnectionsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _165.QueryConnectionsResponse;
                    isSDK(o: any): o is _165.QueryConnectionsResponseSDKType;
                    isAmino(o: any): o is _165.QueryConnectionsResponseAmino;
                    encode(message: _165.QueryConnectionsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _165.QueryConnectionsResponse;
                    fromJSON(object: any): _165.QueryConnectionsResponse;
                    toJSON(message: _165.QueryConnectionsResponse): unknown;
                    fromPartial(object: Partial<_165.QueryConnectionsResponse>): _165.QueryConnectionsResponse;
                    fromAmino(object: _165.QueryConnectionsResponseAmino): _165.QueryConnectionsResponse;
                    toAmino(message: _165.QueryConnectionsResponse): _165.QueryConnectionsResponseAmino;
                    fromAminoMsg(object: _165.QueryConnectionsResponseAminoMsg): _165.QueryConnectionsResponse;
                    toAminoMsg(message: _165.QueryConnectionsResponse): _165.QueryConnectionsResponseAminoMsg;
                    fromProtoMsg(message: _165.QueryConnectionsResponseProtoMsg): _165.QueryConnectionsResponse;
                    toProto(message: _165.QueryConnectionsResponse): Uint8Array;
                    toProtoMsg(message: _165.QueryConnectionsResponse): _165.QueryConnectionsResponseProtoMsg;
                };
                QueryClientConnectionsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _165.QueryClientConnectionsRequest;
                    isSDK(o: any): o is _165.QueryClientConnectionsRequestSDKType;
                    isAmino(o: any): o is _165.QueryClientConnectionsRequestAmino;
                    encode(message: _165.QueryClientConnectionsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _165.QueryClientConnectionsRequest;
                    fromJSON(object: any): _165.QueryClientConnectionsRequest;
                    toJSON(message: _165.QueryClientConnectionsRequest): unknown;
                    fromPartial(object: Partial<_165.QueryClientConnectionsRequest>): _165.QueryClientConnectionsRequest;
                    fromAmino(object: _165.QueryClientConnectionsRequestAmino): _165.QueryClientConnectionsRequest;
                    toAmino(message: _165.QueryClientConnectionsRequest): _165.QueryClientConnectionsRequestAmino;
                    fromAminoMsg(object: _165.QueryClientConnectionsRequestAminoMsg): _165.QueryClientConnectionsRequest;
                    toAminoMsg(message: _165.QueryClientConnectionsRequest): _165.QueryClientConnectionsRequestAminoMsg;
                    fromProtoMsg(message: _165.QueryClientConnectionsRequestProtoMsg): _165.QueryClientConnectionsRequest;
                    toProto(message: _165.QueryClientConnectionsRequest): Uint8Array;
                    toProtoMsg(message: _165.QueryClientConnectionsRequest): _165.QueryClientConnectionsRequestProtoMsg;
                };
                QueryClientConnectionsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _165.QueryClientConnectionsResponse;
                    isSDK(o: any): o is _165.QueryClientConnectionsResponseSDKType;
                    isAmino(o: any): o is _165.QueryClientConnectionsResponseAmino;
                    encode(message: _165.QueryClientConnectionsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _165.QueryClientConnectionsResponse;
                    fromJSON(object: any): _165.QueryClientConnectionsResponse;
                    toJSON(message: _165.QueryClientConnectionsResponse): unknown;
                    fromPartial(object: Partial<_165.QueryClientConnectionsResponse>): _165.QueryClientConnectionsResponse;
                    fromAmino(object: _165.QueryClientConnectionsResponseAmino): _165.QueryClientConnectionsResponse;
                    toAmino(message: _165.QueryClientConnectionsResponse): _165.QueryClientConnectionsResponseAmino;
                    fromAminoMsg(object: _165.QueryClientConnectionsResponseAminoMsg): _165.QueryClientConnectionsResponse;
                    toAminoMsg(message: _165.QueryClientConnectionsResponse): _165.QueryClientConnectionsResponseAminoMsg;
                    fromProtoMsg(message: _165.QueryClientConnectionsResponseProtoMsg): _165.QueryClientConnectionsResponse;
                    toProto(message: _165.QueryClientConnectionsResponse): Uint8Array;
                    toProtoMsg(message: _165.QueryClientConnectionsResponse): _165.QueryClientConnectionsResponseProtoMsg;
                };
                QueryConnectionClientStateRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _165.QueryConnectionClientStateRequest;
                    isSDK(o: any): o is _165.QueryConnectionClientStateRequestSDKType;
                    isAmino(o: any): o is _165.QueryConnectionClientStateRequestAmino;
                    encode(message: _165.QueryConnectionClientStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _165.QueryConnectionClientStateRequest;
                    fromJSON(object: any): _165.QueryConnectionClientStateRequest;
                    toJSON(message: _165.QueryConnectionClientStateRequest): unknown;
                    fromPartial(object: Partial<_165.QueryConnectionClientStateRequest>): _165.QueryConnectionClientStateRequest;
                    fromAmino(object: _165.QueryConnectionClientStateRequestAmino): _165.QueryConnectionClientStateRequest;
                    toAmino(message: _165.QueryConnectionClientStateRequest): _165.QueryConnectionClientStateRequestAmino;
                    fromAminoMsg(object: _165.QueryConnectionClientStateRequestAminoMsg): _165.QueryConnectionClientStateRequest;
                    toAminoMsg(message: _165.QueryConnectionClientStateRequest): _165.QueryConnectionClientStateRequestAminoMsg;
                    fromProtoMsg(message: _165.QueryConnectionClientStateRequestProtoMsg): _165.QueryConnectionClientStateRequest;
                    toProto(message: _165.QueryConnectionClientStateRequest): Uint8Array;
                    toProtoMsg(message: _165.QueryConnectionClientStateRequest): _165.QueryConnectionClientStateRequestProtoMsg;
                };
                QueryConnectionClientStateResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _165.QueryConnectionClientStateResponse;
                    isSDK(o: any): o is _165.QueryConnectionClientStateResponseSDKType;
                    isAmino(o: any): o is _165.QueryConnectionClientStateResponseAmino;
                    encode(message: _165.QueryConnectionClientStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _165.QueryConnectionClientStateResponse;
                    fromJSON(object: any): _165.QueryConnectionClientStateResponse;
                    toJSON(message: _165.QueryConnectionClientStateResponse): unknown;
                    fromPartial(object: Partial<_165.QueryConnectionClientStateResponse>): _165.QueryConnectionClientStateResponse;
                    fromAmino(object: _165.QueryConnectionClientStateResponseAmino): _165.QueryConnectionClientStateResponse;
                    toAmino(message: _165.QueryConnectionClientStateResponse): _165.QueryConnectionClientStateResponseAmino;
                    fromAminoMsg(object: _165.QueryConnectionClientStateResponseAminoMsg): _165.QueryConnectionClientStateResponse;
                    toAminoMsg(message: _165.QueryConnectionClientStateResponse): _165.QueryConnectionClientStateResponseAminoMsg;
                    fromProtoMsg(message: _165.QueryConnectionClientStateResponseProtoMsg): _165.QueryConnectionClientStateResponse;
                    toProto(message: _165.QueryConnectionClientStateResponse): Uint8Array;
                    toProtoMsg(message: _165.QueryConnectionClientStateResponse): _165.QueryConnectionClientStateResponseProtoMsg;
                };
                QueryConnectionConsensusStateRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _165.QueryConnectionConsensusStateRequest;
                    isSDK(o: any): o is _165.QueryConnectionConsensusStateRequestSDKType;
                    isAmino(o: any): o is _165.QueryConnectionConsensusStateRequestAmino;
                    encode(message: _165.QueryConnectionConsensusStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _165.QueryConnectionConsensusStateRequest;
                    fromJSON(object: any): _165.QueryConnectionConsensusStateRequest;
                    toJSON(message: _165.QueryConnectionConsensusStateRequest): unknown;
                    fromPartial(object: Partial<_165.QueryConnectionConsensusStateRequest>): _165.QueryConnectionConsensusStateRequest;
                    fromAmino(object: _165.QueryConnectionConsensusStateRequestAmino): _165.QueryConnectionConsensusStateRequest;
                    toAmino(message: _165.QueryConnectionConsensusStateRequest): _165.QueryConnectionConsensusStateRequestAmino;
                    fromAminoMsg(object: _165.QueryConnectionConsensusStateRequestAminoMsg): _165.QueryConnectionConsensusStateRequest;
                    toAminoMsg(message: _165.QueryConnectionConsensusStateRequest): _165.QueryConnectionConsensusStateRequestAminoMsg;
                    fromProtoMsg(message: _165.QueryConnectionConsensusStateRequestProtoMsg): _165.QueryConnectionConsensusStateRequest;
                    toProto(message: _165.QueryConnectionConsensusStateRequest): Uint8Array;
                    toProtoMsg(message: _165.QueryConnectionConsensusStateRequest): _165.QueryConnectionConsensusStateRequestProtoMsg;
                };
                QueryConnectionConsensusStateResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _165.QueryConnectionConsensusStateResponse;
                    isSDK(o: any): o is _165.QueryConnectionConsensusStateResponseSDKType;
                    isAmino(o: any): o is _165.QueryConnectionConsensusStateResponseAmino;
                    encode(message: _165.QueryConnectionConsensusStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _165.QueryConnectionConsensusStateResponse;
                    fromJSON(object: any): _165.QueryConnectionConsensusStateResponse;
                    toJSON(message: _165.QueryConnectionConsensusStateResponse): unknown;
                    fromPartial(object: Partial<_165.QueryConnectionConsensusStateResponse>): _165.QueryConnectionConsensusStateResponse;
                    fromAmino(object: _165.QueryConnectionConsensusStateResponseAmino): _165.QueryConnectionConsensusStateResponse;
                    toAmino(message: _165.QueryConnectionConsensusStateResponse): _165.QueryConnectionConsensusStateResponseAmino;
                    fromAminoMsg(object: _165.QueryConnectionConsensusStateResponseAminoMsg): _165.QueryConnectionConsensusStateResponse;
                    toAminoMsg(message: _165.QueryConnectionConsensusStateResponse): _165.QueryConnectionConsensusStateResponseAminoMsg;
                    fromProtoMsg(message: _165.QueryConnectionConsensusStateResponseProtoMsg): _165.QueryConnectionConsensusStateResponse;
                    toProto(message: _165.QueryConnectionConsensusStateResponse): Uint8Array;
                    toProtoMsg(message: _165.QueryConnectionConsensusStateResponse): _165.QueryConnectionConsensusStateResponseProtoMsg;
                };
                QueryConnectionParamsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _165.QueryConnectionParamsRequest;
                    isSDK(o: any): o is _165.QueryConnectionParamsRequestSDKType;
                    isAmino(o: any): o is _165.QueryConnectionParamsRequestAmino;
                    encode(_: _165.QueryConnectionParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _165.QueryConnectionParamsRequest;
                    fromJSON(_: any): _165.QueryConnectionParamsRequest;
                    toJSON(_: _165.QueryConnectionParamsRequest): unknown;
                    fromPartial(_: Partial<_165.QueryConnectionParamsRequest>): _165.QueryConnectionParamsRequest;
                    fromAmino(_: _165.QueryConnectionParamsRequestAmino): _165.QueryConnectionParamsRequest;
                    toAmino(_: _165.QueryConnectionParamsRequest): _165.QueryConnectionParamsRequestAmino;
                    fromAminoMsg(object: _165.QueryConnectionParamsRequestAminoMsg): _165.QueryConnectionParamsRequest;
                    toAminoMsg(message: _165.QueryConnectionParamsRequest): _165.QueryConnectionParamsRequestAminoMsg;
                    fromProtoMsg(message: _165.QueryConnectionParamsRequestProtoMsg): _165.QueryConnectionParamsRequest;
                    toProto(message: _165.QueryConnectionParamsRequest): Uint8Array;
                    toProtoMsg(message: _165.QueryConnectionParamsRequest): _165.QueryConnectionParamsRequestProtoMsg;
                };
                QueryConnectionParamsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _165.QueryConnectionParamsResponse;
                    isSDK(o: any): o is _165.QueryConnectionParamsResponseSDKType;
                    isAmino(o: any): o is _165.QueryConnectionParamsResponseAmino;
                    encode(message: _165.QueryConnectionParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _165.QueryConnectionParamsResponse;
                    fromJSON(object: any): _165.QueryConnectionParamsResponse;
                    toJSON(message: _165.QueryConnectionParamsResponse): unknown;
                    fromPartial(object: Partial<_165.QueryConnectionParamsResponse>): _165.QueryConnectionParamsResponse;
                    fromAmino(object: _165.QueryConnectionParamsResponseAmino): _165.QueryConnectionParamsResponse;
                    toAmino(message: _165.QueryConnectionParamsResponse): _165.QueryConnectionParamsResponseAmino;
                    fromAminoMsg(object: _165.QueryConnectionParamsResponseAminoMsg): _165.QueryConnectionParamsResponse;
                    toAminoMsg(message: _165.QueryConnectionParamsResponse): _165.QueryConnectionParamsResponseAminoMsg;
                    fromProtoMsg(message: _165.QueryConnectionParamsResponseProtoMsg): _165.QueryConnectionParamsResponse;
                    toProto(message: _165.QueryConnectionParamsResponse): Uint8Array;
                    toProtoMsg(message: _165.QueryConnectionParamsResponse): _165.QueryConnectionParamsResponseProtoMsg;
                };
                GenesisState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _164.GenesisState;
                    isSDK(o: any): o is _164.GenesisStateSDKType;
                    isAmino(o: any): o is _164.GenesisStateAmino;
                    encode(message: _164.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _164.GenesisState;
                    fromJSON(object: any): _164.GenesisState;
                    toJSON(message: _164.GenesisState): unknown;
                    fromPartial(object: Partial<_164.GenesisState>): _164.GenesisState;
                    fromAmino(object: _164.GenesisStateAmino): _164.GenesisState;
                    toAmino(message: _164.GenesisState): _164.GenesisStateAmino;
                    fromAminoMsg(object: _164.GenesisStateAminoMsg): _164.GenesisState;
                    toAminoMsg(message: _164.GenesisState): _164.GenesisStateAminoMsg;
                    fromProtoMsg(message: _164.GenesisStateProtoMsg): _164.GenesisState;
                    toProto(message: _164.GenesisState): Uint8Array;
                    toProtoMsg(message: _164.GenesisState): _164.GenesisStateProtoMsg;
                };
                stateFromJSON(object: any): _163.State;
                stateToJSON(object: _163.State): string;
                State: typeof _163.State;
                StateSDKType: typeof _163.State;
                StateAmino: typeof _163.State;
                ConnectionEnd: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _163.ConnectionEnd;
                    isSDK(o: any): o is _163.ConnectionEndSDKType;
                    isAmino(o: any): o is _163.ConnectionEndAmino;
                    encode(message: _163.ConnectionEnd, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _163.ConnectionEnd;
                    fromJSON(object: any): _163.ConnectionEnd;
                    toJSON(message: _163.ConnectionEnd): unknown;
                    fromPartial(object: Partial<_163.ConnectionEnd>): _163.ConnectionEnd;
                    fromAmino(object: _163.ConnectionEndAmino): _163.ConnectionEnd;
                    toAmino(message: _163.ConnectionEnd): _163.ConnectionEndAmino;
                    fromAminoMsg(object: _163.ConnectionEndAminoMsg): _163.ConnectionEnd;
                    toAminoMsg(message: _163.ConnectionEnd): _163.ConnectionEndAminoMsg;
                    fromProtoMsg(message: _163.ConnectionEndProtoMsg): _163.ConnectionEnd;
                    toProto(message: _163.ConnectionEnd): Uint8Array;
                    toProtoMsg(message: _163.ConnectionEnd): _163.ConnectionEndProtoMsg;
                };
                IdentifiedConnection: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _163.IdentifiedConnection;
                    isSDK(o: any): o is _163.IdentifiedConnectionSDKType;
                    isAmino(o: any): o is _163.IdentifiedConnectionAmino;
                    encode(message: _163.IdentifiedConnection, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _163.IdentifiedConnection;
                    fromJSON(object: any): _163.IdentifiedConnection;
                    toJSON(message: _163.IdentifiedConnection): unknown;
                    fromPartial(object: Partial<_163.IdentifiedConnection>): _163.IdentifiedConnection;
                    fromAmino(object: _163.IdentifiedConnectionAmino): _163.IdentifiedConnection;
                    toAmino(message: _163.IdentifiedConnection): _163.IdentifiedConnectionAmino;
                    fromAminoMsg(object: _163.IdentifiedConnectionAminoMsg): _163.IdentifiedConnection;
                    toAminoMsg(message: _163.IdentifiedConnection): _163.IdentifiedConnectionAminoMsg;
                    fromProtoMsg(message: _163.IdentifiedConnectionProtoMsg): _163.IdentifiedConnection;
                    toProto(message: _163.IdentifiedConnection): Uint8Array;
                    toProtoMsg(message: _163.IdentifiedConnection): _163.IdentifiedConnectionProtoMsg;
                };
                Counterparty: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _163.Counterparty;
                    isSDK(o: any): o is _163.CounterpartySDKType;
                    isAmino(o: any): o is _163.CounterpartyAmino;
                    encode(message: _163.Counterparty, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _163.Counterparty;
                    fromJSON(object: any): _163.Counterparty;
                    toJSON(message: _163.Counterparty): unknown;
                    fromPartial(object: Partial<_163.Counterparty>): _163.Counterparty;
                    fromAmino(object: _163.CounterpartyAmino): _163.Counterparty;
                    toAmino(message: _163.Counterparty): _163.CounterpartyAmino;
                    fromAminoMsg(object: _163.CounterpartyAminoMsg): _163.Counterparty;
                    toAminoMsg(message: _163.Counterparty): _163.CounterpartyAminoMsg;
                    fromProtoMsg(message: _163.CounterpartyProtoMsg): _163.Counterparty;
                    toProto(message: _163.Counterparty): Uint8Array;
                    toProtoMsg(message: _163.Counterparty): _163.CounterpartyProtoMsg;
                };
                ClientPaths: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _163.ClientPaths;
                    isSDK(o: any): o is _163.ClientPathsSDKType;
                    isAmino(o: any): o is _163.ClientPathsAmino;
                    encode(message: _163.ClientPaths, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _163.ClientPaths;
                    fromJSON(object: any): _163.ClientPaths;
                    toJSON(message: _163.ClientPaths): unknown;
                    fromPartial(object: Partial<_163.ClientPaths>): _163.ClientPaths;
                    fromAmino(object: _163.ClientPathsAmino): _163.ClientPaths;
                    toAmino(message: _163.ClientPaths): _163.ClientPathsAmino;
                    fromAminoMsg(object: _163.ClientPathsAminoMsg): _163.ClientPaths;
                    toAminoMsg(message: _163.ClientPaths): _163.ClientPathsAminoMsg;
                    fromProtoMsg(message: _163.ClientPathsProtoMsg): _163.ClientPaths;
                    toProto(message: _163.ClientPaths): Uint8Array;
                    toProtoMsg(message: _163.ClientPaths): _163.ClientPathsProtoMsg;
                };
                ConnectionPaths: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _163.ConnectionPaths;
                    isSDK(o: any): o is _163.ConnectionPathsSDKType;
                    isAmino(o: any): o is _163.ConnectionPathsAmino;
                    encode(message: _163.ConnectionPaths, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _163.ConnectionPaths;
                    fromJSON(object: any): _163.ConnectionPaths;
                    toJSON(message: _163.ConnectionPaths): unknown;
                    fromPartial(object: Partial<_163.ConnectionPaths>): _163.ConnectionPaths;
                    fromAmino(object: _163.ConnectionPathsAmino): _163.ConnectionPaths;
                    toAmino(message: _163.ConnectionPaths): _163.ConnectionPathsAmino;
                    fromAminoMsg(object: _163.ConnectionPathsAminoMsg): _163.ConnectionPaths;
                    toAminoMsg(message: _163.ConnectionPaths): _163.ConnectionPathsAminoMsg;
                    fromProtoMsg(message: _163.ConnectionPathsProtoMsg): _163.ConnectionPaths;
                    toProto(message: _163.ConnectionPaths): Uint8Array;
                    toProtoMsg(message: _163.ConnectionPaths): _163.ConnectionPathsProtoMsg;
                };
                Version: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _163.Version;
                    isSDK(o: any): o is _163.VersionSDKType;
                    isAmino(o: any): o is _163.VersionAmino;
                    encode(message: _163.Version, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _163.Version;
                    fromJSON(object: any): _163.Version;
                    toJSON(message: _163.Version): unknown;
                    fromPartial(object: Partial<_163.Version>): _163.Version;
                    fromAmino(object: _163.VersionAmino): _163.Version;
                    toAmino(message: _163.Version): _163.VersionAmino;
                    fromAminoMsg(object: _163.VersionAminoMsg): _163.Version;
                    toAminoMsg(message: _163.Version): _163.VersionAminoMsg;
                    fromProtoMsg(message: _163.VersionProtoMsg): _163.Version;
                    toProto(message: _163.Version): Uint8Array;
                    toProtoMsg(message: _163.Version): _163.VersionProtoMsg;
                };
                Params: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _163.Params;
                    isSDK(o: any): o is _163.ParamsSDKType;
                    isAmino(o: any): o is _163.ParamsAmino;
                    encode(message: _163.Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _163.Params;
                    fromJSON(object: any): _163.Params;
                    toJSON(message: _163.Params): unknown;
                    fromPartial(object: Partial<_163.Params>): _163.Params;
                    fromAmino(object: _163.ParamsAmino): _163.Params;
                    toAmino(message: _163.Params): _163.ParamsAmino;
                    fromAminoMsg(object: _163.ParamsAminoMsg): _163.Params;
                    toAminoMsg(message: _163.Params): _163.ParamsAminoMsg;
                    fromProtoMsg(message: _163.ParamsProtoMsg): _163.Params;
                    toProto(message: _163.Params): Uint8Array;
                    toProtoMsg(message: _163.Params): _163.ParamsProtoMsg;
                };
            };
        }
    }
    namespace lightclients {
        namespace localhost {
            const v2: {
                protobufPackage: "ibc.lightclients.localhost.v2";
                ClientState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _167.ClientState;
                    isSDK(o: any): o is _167.ClientStateSDKType;
                    isAmino(o: any): o is _167.ClientStateAmino;
                    encode(message: _167.ClientState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _167.ClientState;
                    fromJSON(object: any): _167.ClientState;
                    toJSON(message: _167.ClientState): unknown;
                    fromPartial(object: Partial<_167.ClientState>): _167.ClientState;
                    fromAmino(object: _167.ClientStateAmino): _167.ClientState;
                    toAmino(message: _167.ClientState): _167.ClientStateAmino;
                    fromAminoMsg(object: _167.ClientStateAminoMsg): _167.ClientState;
                    toAminoMsg(message: _167.ClientState): _167.ClientStateAminoMsg;
                    fromProtoMsg(message: _167.ClientStateProtoMsg): _167.ClientState;
                    toProto(message: _167.ClientState): Uint8Array;
                    toProtoMsg(message: _167.ClientState): _167.ClientStateProtoMsg;
                };
            };
        }
        namespace solomachine {
            const v2: {
                dataTypeFromJSON(object: any): _168.DataType;
                dataTypeToJSON(object: _168.DataType): string;
                protobufPackage: "ibc.lightclients.solomachine.v2";
                DataType: typeof _168.DataType;
                DataTypeSDKType: typeof _168.DataType;
                DataTypeAmino: typeof _168.DataType;
                ClientState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _168.ClientState;
                    isSDK(o: any): o is _168.ClientStateSDKType;
                    isAmino(o: any): o is _168.ClientStateAmino;
                    encode(message: _168.ClientState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.ClientState;
                    fromJSON(object: any): _168.ClientState;
                    toJSON(message: _168.ClientState): unknown;
                    fromPartial(object: Partial<_168.ClientState>): _168.ClientState;
                    fromAmino(object: _168.ClientStateAmino): _168.ClientState;
                    toAmino(message: _168.ClientState): _168.ClientStateAmino;
                    fromAminoMsg(object: _168.ClientStateAminoMsg): _168.ClientState;
                    toAminoMsg(message: _168.ClientState): _168.ClientStateAminoMsg;
                    fromProtoMsg(message: _168.ClientStateProtoMsg): _168.ClientState;
                    toProto(message: _168.ClientState): Uint8Array;
                    toProtoMsg(message: _168.ClientState): _168.ClientStateProtoMsg;
                };
                ConsensusState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _168.ConsensusState;
                    isSDK(o: any): o is _168.ConsensusStateSDKType;
                    isAmino(o: any): o is _168.ConsensusStateAmino;
                    encode(message: _168.ConsensusState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.ConsensusState;
                    fromJSON(object: any): _168.ConsensusState;
                    toJSON(message: _168.ConsensusState): unknown;
                    fromPartial(object: Partial<_168.ConsensusState>): _168.ConsensusState;
                    fromAmino(object: _168.ConsensusStateAmino): _168.ConsensusState;
                    toAmino(message: _168.ConsensusState): _168.ConsensusStateAmino;
                    fromAminoMsg(object: _168.ConsensusStateAminoMsg): _168.ConsensusState;
                    toAminoMsg(message: _168.ConsensusState): _168.ConsensusStateAminoMsg;
                    fromProtoMsg(message: _168.ConsensusStateProtoMsg): _168.ConsensusState;
                    toProto(message: _168.ConsensusState): Uint8Array;
                    toProtoMsg(message: _168.ConsensusState): _168.ConsensusStateProtoMsg;
                };
                Header: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _168.Header;
                    isSDK(o: any): o is _168.HeaderSDKType;
                    isAmino(o: any): o is _168.HeaderAmino;
                    encode(message: _168.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.Header;
                    fromJSON(object: any): _168.Header;
                    toJSON(message: _168.Header): unknown;
                    fromPartial(object: Partial<_168.Header>): _168.Header;
                    fromAmino(object: _168.HeaderAmino): _168.Header;
                    toAmino(message: _168.Header): _168.HeaderAmino;
                    fromAminoMsg(object: _168.HeaderAminoMsg): _168.Header;
                    toAminoMsg(message: _168.Header): _168.HeaderAminoMsg;
                    fromProtoMsg(message: _168.HeaderProtoMsg): _168.Header;
                    toProto(message: _168.Header): Uint8Array;
                    toProtoMsg(message: _168.Header): _168.HeaderProtoMsg;
                };
                Misbehaviour: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _168.Misbehaviour;
                    isSDK(o: any): o is _168.MisbehaviourSDKType;
                    isAmino(o: any): o is _168.MisbehaviourAmino;
                    encode(message: _168.Misbehaviour, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.Misbehaviour;
                    fromJSON(object: any): _168.Misbehaviour;
                    toJSON(message: _168.Misbehaviour): unknown;
                    fromPartial(object: Partial<_168.Misbehaviour>): _168.Misbehaviour;
                    fromAmino(object: _168.MisbehaviourAmino): _168.Misbehaviour;
                    toAmino(message: _168.Misbehaviour): _168.MisbehaviourAmino;
                    fromAminoMsg(object: _168.MisbehaviourAminoMsg): _168.Misbehaviour;
                    toAminoMsg(message: _168.Misbehaviour): _168.MisbehaviourAminoMsg;
                    fromProtoMsg(message: _168.MisbehaviourProtoMsg): _168.Misbehaviour;
                    toProto(message: _168.Misbehaviour): Uint8Array;
                    toProtoMsg(message: _168.Misbehaviour): _168.MisbehaviourProtoMsg;
                };
                SignatureAndData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _168.SignatureAndData;
                    isSDK(o: any): o is _168.SignatureAndDataSDKType;
                    isAmino(o: any): o is _168.SignatureAndDataAmino;
                    encode(message: _168.SignatureAndData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.SignatureAndData;
                    fromJSON(object: any): _168.SignatureAndData;
                    toJSON(message: _168.SignatureAndData): unknown;
                    fromPartial(object: Partial<_168.SignatureAndData>): _168.SignatureAndData;
                    fromAmino(object: _168.SignatureAndDataAmino): _168.SignatureAndData;
                    toAmino(message: _168.SignatureAndData): _168.SignatureAndDataAmino;
                    fromAminoMsg(object: _168.SignatureAndDataAminoMsg): _168.SignatureAndData;
                    toAminoMsg(message: _168.SignatureAndData): _168.SignatureAndDataAminoMsg;
                    fromProtoMsg(message: _168.SignatureAndDataProtoMsg): _168.SignatureAndData;
                    toProto(message: _168.SignatureAndData): Uint8Array;
                    toProtoMsg(message: _168.SignatureAndData): _168.SignatureAndDataProtoMsg;
                };
                TimestampedSignatureData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _168.TimestampedSignatureData;
                    isSDK(o: any): o is _168.TimestampedSignatureDataSDKType;
                    isAmino(o: any): o is _168.TimestampedSignatureDataAmino;
                    encode(message: _168.TimestampedSignatureData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.TimestampedSignatureData;
                    fromJSON(object: any): _168.TimestampedSignatureData;
                    toJSON(message: _168.TimestampedSignatureData): unknown;
                    fromPartial(object: Partial<_168.TimestampedSignatureData>): _168.TimestampedSignatureData;
                    fromAmino(object: _168.TimestampedSignatureDataAmino): _168.TimestampedSignatureData;
                    toAmino(message: _168.TimestampedSignatureData): _168.TimestampedSignatureDataAmino;
                    fromAminoMsg(object: _168.TimestampedSignatureDataAminoMsg): _168.TimestampedSignatureData;
                    toAminoMsg(message: _168.TimestampedSignatureData): _168.TimestampedSignatureDataAminoMsg;
                    fromProtoMsg(message: _168.TimestampedSignatureDataProtoMsg): _168.TimestampedSignatureData;
                    toProto(message: _168.TimestampedSignatureData): Uint8Array;
                    toProtoMsg(message: _168.TimestampedSignatureData): _168.TimestampedSignatureDataProtoMsg;
                };
                SignBytes: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _168.SignBytes;
                    isSDK(o: any): o is _168.SignBytesSDKType;
                    isAmino(o: any): o is _168.SignBytesAmino;
                    encode(message: _168.SignBytes, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.SignBytes;
                    fromJSON(object: any): _168.SignBytes;
                    toJSON(message: _168.SignBytes): unknown;
                    fromPartial(object: Partial<_168.SignBytes>): _168.SignBytes;
                    fromAmino(object: _168.SignBytesAmino): _168.SignBytes;
                    toAmino(message: _168.SignBytes): _168.SignBytesAmino;
                    fromAminoMsg(object: _168.SignBytesAminoMsg): _168.SignBytes;
                    toAminoMsg(message: _168.SignBytes): _168.SignBytesAminoMsg;
                    fromProtoMsg(message: _168.SignBytesProtoMsg): _168.SignBytes;
                    toProto(message: _168.SignBytes): Uint8Array;
                    toProtoMsg(message: _168.SignBytes): _168.SignBytesProtoMsg;
                };
                HeaderData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _168.HeaderData;
                    isSDK(o: any): o is _168.HeaderDataSDKType;
                    isAmino(o: any): o is _168.HeaderDataAmino;
                    encode(message: _168.HeaderData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.HeaderData;
                    fromJSON(object: any): _168.HeaderData;
                    toJSON(message: _168.HeaderData): unknown;
                    fromPartial(object: Partial<_168.HeaderData>): _168.HeaderData;
                    fromAmino(object: _168.HeaderDataAmino): _168.HeaderData;
                    toAmino(message: _168.HeaderData): _168.HeaderDataAmino;
                    fromAminoMsg(object: _168.HeaderDataAminoMsg): _168.HeaderData;
                    toAminoMsg(message: _168.HeaderData): _168.HeaderDataAminoMsg;
                    fromProtoMsg(message: _168.HeaderDataProtoMsg): _168.HeaderData;
                    toProto(message: _168.HeaderData): Uint8Array;
                    toProtoMsg(message: _168.HeaderData): _168.HeaderDataProtoMsg;
                };
                ClientStateData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _168.ClientStateData;
                    isSDK(o: any): o is _168.ClientStateDataSDKType;
                    isAmino(o: any): o is _168.ClientStateDataAmino;
                    encode(message: _168.ClientStateData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.ClientStateData;
                    fromJSON(object: any): _168.ClientStateData;
                    toJSON(message: _168.ClientStateData): unknown;
                    fromPartial(object: Partial<_168.ClientStateData>): _168.ClientStateData;
                    fromAmino(object: _168.ClientStateDataAmino): _168.ClientStateData;
                    toAmino(message: _168.ClientStateData): _168.ClientStateDataAmino;
                    fromAminoMsg(object: _168.ClientStateDataAminoMsg): _168.ClientStateData;
                    toAminoMsg(message: _168.ClientStateData): _168.ClientStateDataAminoMsg;
                    fromProtoMsg(message: _168.ClientStateDataProtoMsg): _168.ClientStateData;
                    toProto(message: _168.ClientStateData): Uint8Array;
                    toProtoMsg(message: _168.ClientStateData): _168.ClientStateDataProtoMsg;
                };
                ConsensusStateData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _168.ConsensusStateData;
                    isSDK(o: any): o is _168.ConsensusStateDataSDKType;
                    isAmino(o: any): o is _168.ConsensusStateDataAmino;
                    encode(message: _168.ConsensusStateData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.ConsensusStateData;
                    fromJSON(object: any): _168.ConsensusStateData;
                    toJSON(message: _168.ConsensusStateData): unknown;
                    fromPartial(object: Partial<_168.ConsensusStateData>): _168.ConsensusStateData;
                    fromAmino(object: _168.ConsensusStateDataAmino): _168.ConsensusStateData;
                    toAmino(message: _168.ConsensusStateData): _168.ConsensusStateDataAmino;
                    fromAminoMsg(object: _168.ConsensusStateDataAminoMsg): _168.ConsensusStateData;
                    toAminoMsg(message: _168.ConsensusStateData): _168.ConsensusStateDataAminoMsg;
                    fromProtoMsg(message: _168.ConsensusStateDataProtoMsg): _168.ConsensusStateData;
                    toProto(message: _168.ConsensusStateData): Uint8Array;
                    toProtoMsg(message: _168.ConsensusStateData): _168.ConsensusStateDataProtoMsg;
                };
                ConnectionStateData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _168.ConnectionStateData;
                    isSDK(o: any): o is _168.ConnectionStateDataSDKType;
                    isAmino(o: any): o is _168.ConnectionStateDataAmino;
                    encode(message: _168.ConnectionStateData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.ConnectionStateData;
                    fromJSON(object: any): _168.ConnectionStateData;
                    toJSON(message: _168.ConnectionStateData): unknown;
                    fromPartial(object: Partial<_168.ConnectionStateData>): _168.ConnectionStateData;
                    fromAmino(object: _168.ConnectionStateDataAmino): _168.ConnectionStateData;
                    toAmino(message: _168.ConnectionStateData): _168.ConnectionStateDataAmino;
                    fromAminoMsg(object: _168.ConnectionStateDataAminoMsg): _168.ConnectionStateData;
                    toAminoMsg(message: _168.ConnectionStateData): _168.ConnectionStateDataAminoMsg;
                    fromProtoMsg(message: _168.ConnectionStateDataProtoMsg): _168.ConnectionStateData;
                    toProto(message: _168.ConnectionStateData): Uint8Array;
                    toProtoMsg(message: _168.ConnectionStateData): _168.ConnectionStateDataProtoMsg;
                };
                ChannelStateData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _168.ChannelStateData;
                    isSDK(o: any): o is _168.ChannelStateDataSDKType;
                    isAmino(o: any): o is _168.ChannelStateDataAmino;
                    encode(message: _168.ChannelStateData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.ChannelStateData;
                    fromJSON(object: any): _168.ChannelStateData;
                    toJSON(message: _168.ChannelStateData): unknown;
                    fromPartial(object: Partial<_168.ChannelStateData>): _168.ChannelStateData;
                    fromAmino(object: _168.ChannelStateDataAmino): _168.ChannelStateData;
                    toAmino(message: _168.ChannelStateData): _168.ChannelStateDataAmino;
                    fromAminoMsg(object: _168.ChannelStateDataAminoMsg): _168.ChannelStateData;
                    toAminoMsg(message: _168.ChannelStateData): _168.ChannelStateDataAminoMsg;
                    fromProtoMsg(message: _168.ChannelStateDataProtoMsg): _168.ChannelStateData;
                    toProto(message: _168.ChannelStateData): Uint8Array;
                    toProtoMsg(message: _168.ChannelStateData): _168.ChannelStateDataProtoMsg;
                };
                PacketCommitmentData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _168.PacketCommitmentData;
                    isSDK(o: any): o is _168.PacketCommitmentDataSDKType;
                    isAmino(o: any): o is _168.PacketCommitmentDataAmino;
                    encode(message: _168.PacketCommitmentData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.PacketCommitmentData;
                    fromJSON(object: any): _168.PacketCommitmentData;
                    toJSON(message: _168.PacketCommitmentData): unknown;
                    fromPartial(object: Partial<_168.PacketCommitmentData>): _168.PacketCommitmentData;
                    fromAmino(object: _168.PacketCommitmentDataAmino): _168.PacketCommitmentData;
                    toAmino(message: _168.PacketCommitmentData): _168.PacketCommitmentDataAmino;
                    fromAminoMsg(object: _168.PacketCommitmentDataAminoMsg): _168.PacketCommitmentData;
                    toAminoMsg(message: _168.PacketCommitmentData): _168.PacketCommitmentDataAminoMsg;
                    fromProtoMsg(message: _168.PacketCommitmentDataProtoMsg): _168.PacketCommitmentData;
                    toProto(message: _168.PacketCommitmentData): Uint8Array;
                    toProtoMsg(message: _168.PacketCommitmentData): _168.PacketCommitmentDataProtoMsg;
                };
                PacketAcknowledgementData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _168.PacketAcknowledgementData;
                    isSDK(o: any): o is _168.PacketAcknowledgementDataSDKType;
                    isAmino(o: any): o is _168.PacketAcknowledgementDataAmino;
                    encode(message: _168.PacketAcknowledgementData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.PacketAcknowledgementData;
                    fromJSON(object: any): _168.PacketAcknowledgementData;
                    toJSON(message: _168.PacketAcknowledgementData): unknown;
                    fromPartial(object: Partial<_168.PacketAcknowledgementData>): _168.PacketAcknowledgementData;
                    fromAmino(object: _168.PacketAcknowledgementDataAmino): _168.PacketAcknowledgementData;
                    toAmino(message: _168.PacketAcknowledgementData): _168.PacketAcknowledgementDataAmino;
                    fromAminoMsg(object: _168.PacketAcknowledgementDataAminoMsg): _168.PacketAcknowledgementData;
                    toAminoMsg(message: _168.PacketAcknowledgementData): _168.PacketAcknowledgementDataAminoMsg;
                    fromProtoMsg(message: _168.PacketAcknowledgementDataProtoMsg): _168.PacketAcknowledgementData;
                    toProto(message: _168.PacketAcknowledgementData): Uint8Array;
                    toProtoMsg(message: _168.PacketAcknowledgementData): _168.PacketAcknowledgementDataProtoMsg;
                };
                PacketReceiptAbsenceData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _168.PacketReceiptAbsenceData;
                    isSDK(o: any): o is _168.PacketReceiptAbsenceDataSDKType;
                    isAmino(o: any): o is _168.PacketReceiptAbsenceDataAmino;
                    encode(message: _168.PacketReceiptAbsenceData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.PacketReceiptAbsenceData;
                    fromJSON(object: any): _168.PacketReceiptAbsenceData;
                    toJSON(message: _168.PacketReceiptAbsenceData): unknown;
                    fromPartial(object: Partial<_168.PacketReceiptAbsenceData>): _168.PacketReceiptAbsenceData;
                    fromAmino(object: _168.PacketReceiptAbsenceDataAmino): _168.PacketReceiptAbsenceData;
                    toAmino(message: _168.PacketReceiptAbsenceData): _168.PacketReceiptAbsenceDataAmino;
                    fromAminoMsg(object: _168.PacketReceiptAbsenceDataAminoMsg): _168.PacketReceiptAbsenceData;
                    toAminoMsg(message: _168.PacketReceiptAbsenceData): _168.PacketReceiptAbsenceDataAminoMsg;
                    fromProtoMsg(message: _168.PacketReceiptAbsenceDataProtoMsg): _168.PacketReceiptAbsenceData;
                    toProto(message: _168.PacketReceiptAbsenceData): Uint8Array;
                    toProtoMsg(message: _168.PacketReceiptAbsenceData): _168.PacketReceiptAbsenceDataProtoMsg;
                };
                NextSequenceRecvData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _168.NextSequenceRecvData;
                    isSDK(o: any): o is _168.NextSequenceRecvDataSDKType;
                    isAmino(o: any): o is _168.NextSequenceRecvDataAmino;
                    encode(message: _168.NextSequenceRecvData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _168.NextSequenceRecvData;
                    fromJSON(object: any): _168.NextSequenceRecvData;
                    toJSON(message: _168.NextSequenceRecvData): unknown;
                    fromPartial(object: Partial<_168.NextSequenceRecvData>): _168.NextSequenceRecvData;
                    fromAmino(object: _168.NextSequenceRecvDataAmino): _168.NextSequenceRecvData;
                    toAmino(message: _168.NextSequenceRecvData): _168.NextSequenceRecvDataAmino;
                    fromAminoMsg(object: _168.NextSequenceRecvDataAminoMsg): _168.NextSequenceRecvData;
                    toAminoMsg(message: _168.NextSequenceRecvData): _168.NextSequenceRecvDataAminoMsg;
                    fromProtoMsg(message: _168.NextSequenceRecvDataProtoMsg): _168.NextSequenceRecvData;
                    toProto(message: _168.NextSequenceRecvData): Uint8Array;
                    toProtoMsg(message: _168.NextSequenceRecvData): _168.NextSequenceRecvDataProtoMsg;
                };
            };
            const v3: {
                protobufPackage: "ibc.lightclients.solomachine.v3";
                ClientState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _169.ClientState;
                    isSDK(o: any): o is _169.ClientStateSDKType;
                    isAmino(o: any): o is _169.ClientStateAmino;
                    encode(message: _169.ClientState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.ClientState;
                    fromJSON(object: any): _169.ClientState;
                    toJSON(message: _169.ClientState): unknown;
                    fromPartial(object: Partial<_169.ClientState>): _169.ClientState;
                    fromAmino(object: _169.ClientStateAmino): _169.ClientState;
                    toAmino(message: _169.ClientState): _169.ClientStateAmino;
                    fromAminoMsg(object: _169.ClientStateAminoMsg): _169.ClientState;
                    toAminoMsg(message: _169.ClientState): _169.ClientStateAminoMsg;
                    fromProtoMsg(message: _169.ClientStateProtoMsg): _169.ClientState;
                    toProto(message: _169.ClientState): Uint8Array;
                    toProtoMsg(message: _169.ClientState): _169.ClientStateProtoMsg;
                };
                ConsensusState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _169.ConsensusState;
                    isSDK(o: any): o is _169.ConsensusStateSDKType;
                    isAmino(o: any): o is _169.ConsensusStateAmino;
                    encode(message: _169.ConsensusState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.ConsensusState;
                    fromJSON(object: any): _169.ConsensusState;
                    toJSON(message: _169.ConsensusState): unknown;
                    fromPartial(object: Partial<_169.ConsensusState>): _169.ConsensusState;
                    fromAmino(object: _169.ConsensusStateAmino): _169.ConsensusState;
                    toAmino(message: _169.ConsensusState): _169.ConsensusStateAmino;
                    fromAminoMsg(object: _169.ConsensusStateAminoMsg): _169.ConsensusState;
                    toAminoMsg(message: _169.ConsensusState): _169.ConsensusStateAminoMsg;
                    fromProtoMsg(message: _169.ConsensusStateProtoMsg): _169.ConsensusState;
                    toProto(message: _169.ConsensusState): Uint8Array;
                    toProtoMsg(message: _169.ConsensusState): _169.ConsensusStateProtoMsg;
                };
                Header: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _169.Header;
                    isSDK(o: any): o is _169.HeaderSDKType;
                    isAmino(o: any): o is _169.HeaderAmino;
                    encode(message: _169.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.Header;
                    fromJSON(object: any): _169.Header;
                    toJSON(message: _169.Header): unknown;
                    fromPartial(object: Partial<_169.Header>): _169.Header;
                    fromAmino(object: _169.HeaderAmino): _169.Header;
                    toAmino(message: _169.Header): _169.HeaderAmino;
                    fromAminoMsg(object: _169.HeaderAminoMsg): _169.Header;
                    toAminoMsg(message: _169.Header): _169.HeaderAminoMsg;
                    fromProtoMsg(message: _169.HeaderProtoMsg): _169.Header;
                    toProto(message: _169.Header): Uint8Array;
                    toProtoMsg(message: _169.Header): _169.HeaderProtoMsg;
                };
                Misbehaviour: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _169.Misbehaviour;
                    isSDK(o: any): o is _169.MisbehaviourSDKType;
                    isAmino(o: any): o is _169.MisbehaviourAmino;
                    encode(message: _169.Misbehaviour, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.Misbehaviour;
                    fromJSON(object: any): _169.Misbehaviour;
                    toJSON(message: _169.Misbehaviour): unknown;
                    fromPartial(object: Partial<_169.Misbehaviour>): _169.Misbehaviour;
                    fromAmino(object: _169.MisbehaviourAmino): _169.Misbehaviour;
                    toAmino(message: _169.Misbehaviour): _169.MisbehaviourAmino;
                    fromAminoMsg(object: _169.MisbehaviourAminoMsg): _169.Misbehaviour;
                    toAminoMsg(message: _169.Misbehaviour): _169.MisbehaviourAminoMsg;
                    fromProtoMsg(message: _169.MisbehaviourProtoMsg): _169.Misbehaviour;
                    toProto(message: _169.Misbehaviour): Uint8Array;
                    toProtoMsg(message: _169.Misbehaviour): _169.MisbehaviourProtoMsg;
                };
                SignatureAndData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _169.SignatureAndData;
                    isSDK(o: any): o is _169.SignatureAndDataSDKType;
                    isAmino(o: any): o is _169.SignatureAndDataAmino;
                    encode(message: _169.SignatureAndData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.SignatureAndData;
                    fromJSON(object: any): _169.SignatureAndData;
                    toJSON(message: _169.SignatureAndData): unknown;
                    fromPartial(object: Partial<_169.SignatureAndData>): _169.SignatureAndData;
                    fromAmino(object: _169.SignatureAndDataAmino): _169.SignatureAndData;
                    toAmino(message: _169.SignatureAndData): _169.SignatureAndDataAmino;
                    fromAminoMsg(object: _169.SignatureAndDataAminoMsg): _169.SignatureAndData;
                    toAminoMsg(message: _169.SignatureAndData): _169.SignatureAndDataAminoMsg;
                    fromProtoMsg(message: _169.SignatureAndDataProtoMsg): _169.SignatureAndData;
                    toProto(message: _169.SignatureAndData): Uint8Array;
                    toProtoMsg(message: _169.SignatureAndData): _169.SignatureAndDataProtoMsg;
                };
                TimestampedSignatureData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _169.TimestampedSignatureData;
                    isSDK(o: any): o is _169.TimestampedSignatureDataSDKType;
                    isAmino(o: any): o is _169.TimestampedSignatureDataAmino;
                    encode(message: _169.TimestampedSignatureData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.TimestampedSignatureData;
                    fromJSON(object: any): _169.TimestampedSignatureData;
                    toJSON(message: _169.TimestampedSignatureData): unknown;
                    fromPartial(object: Partial<_169.TimestampedSignatureData>): _169.TimestampedSignatureData;
                    fromAmino(object: _169.TimestampedSignatureDataAmino): _169.TimestampedSignatureData;
                    toAmino(message: _169.TimestampedSignatureData): _169.TimestampedSignatureDataAmino;
                    fromAminoMsg(object: _169.TimestampedSignatureDataAminoMsg): _169.TimestampedSignatureData;
                    toAminoMsg(message: _169.TimestampedSignatureData): _169.TimestampedSignatureDataAminoMsg;
                    fromProtoMsg(message: _169.TimestampedSignatureDataProtoMsg): _169.TimestampedSignatureData;
                    toProto(message: _169.TimestampedSignatureData): Uint8Array;
                    toProtoMsg(message: _169.TimestampedSignatureData): _169.TimestampedSignatureDataProtoMsg;
                };
                SignBytes: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _169.SignBytes;
                    isSDK(o: any): o is _169.SignBytesSDKType;
                    isAmino(o: any): o is _169.SignBytesAmino;
                    encode(message: _169.SignBytes, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.SignBytes;
                    fromJSON(object: any): _169.SignBytes;
                    toJSON(message: _169.SignBytes): unknown;
                    fromPartial(object: Partial<_169.SignBytes>): _169.SignBytes;
                    fromAmino(object: _169.SignBytesAmino): _169.SignBytes;
                    toAmino(message: _169.SignBytes): _169.SignBytesAmino;
                    fromAminoMsg(object: _169.SignBytesAminoMsg): _169.SignBytes;
                    toAminoMsg(message: _169.SignBytes): _169.SignBytesAminoMsg;
                    fromProtoMsg(message: _169.SignBytesProtoMsg): _169.SignBytes;
                    toProto(message: _169.SignBytes): Uint8Array;
                    toProtoMsg(message: _169.SignBytes): _169.SignBytesProtoMsg;
                };
                HeaderData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _169.HeaderData;
                    isSDK(o: any): o is _169.HeaderDataSDKType;
                    isAmino(o: any): o is _169.HeaderDataAmino;
                    encode(message: _169.HeaderData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _169.HeaderData;
                    fromJSON(object: any): _169.HeaderData;
                    toJSON(message: _169.HeaderData): unknown;
                    fromPartial(object: Partial<_169.HeaderData>): _169.HeaderData;
                    fromAmino(object: _169.HeaderDataAmino): _169.HeaderData;
                    toAmino(message: _169.HeaderData): _169.HeaderDataAmino;
                    fromAminoMsg(object: _169.HeaderDataAminoMsg): _169.HeaderData;
                    toAminoMsg(message: _169.HeaderData): _169.HeaderDataAminoMsg;
                    fromProtoMsg(message: _169.HeaderDataProtoMsg): _169.HeaderData;
                    toProto(message: _169.HeaderData): Uint8Array;
                    toProtoMsg(message: _169.HeaderData): _169.HeaderDataProtoMsg;
                };
            };
        }
        namespace tendermint {
            const v1: {
                protobufPackage: "ibc.lightclients.tendermint.v1";
                ClientState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _170.ClientState;
                    isSDK(o: any): o is _170.ClientStateSDKType;
                    isAmino(o: any): o is _170.ClientStateAmino;
                    encode(message: _170.ClientState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _170.ClientState;
                    fromJSON(object: any): _170.ClientState;
                    toJSON(message: _170.ClientState): unknown;
                    fromPartial(object: Partial<_170.ClientState>): _170.ClientState;
                    fromAmino(object: _170.ClientStateAmino): _170.ClientState;
                    toAmino(message: _170.ClientState): _170.ClientStateAmino;
                    fromAminoMsg(object: _170.ClientStateAminoMsg): _170.ClientState;
                    toAminoMsg(message: _170.ClientState): _170.ClientStateAminoMsg;
                    fromProtoMsg(message: _170.ClientStateProtoMsg): _170.ClientState;
                    toProto(message: _170.ClientState): Uint8Array;
                    toProtoMsg(message: _170.ClientState): _170.ClientStateProtoMsg;
                };
                ConsensusState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _170.ConsensusState;
                    isSDK(o: any): o is _170.ConsensusStateSDKType;
                    isAmino(o: any): o is _170.ConsensusStateAmino;
                    encode(message: _170.ConsensusState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _170.ConsensusState;
                    fromJSON(object: any): _170.ConsensusState;
                    toJSON(message: _170.ConsensusState): unknown;
                    fromPartial(object: Partial<_170.ConsensusState>): _170.ConsensusState;
                    fromAmino(object: _170.ConsensusStateAmino): _170.ConsensusState;
                    toAmino(message: _170.ConsensusState): _170.ConsensusStateAmino;
                    fromAminoMsg(object: _170.ConsensusStateAminoMsg): _170.ConsensusState;
                    toAminoMsg(message: _170.ConsensusState): _170.ConsensusStateAminoMsg;
                    fromProtoMsg(message: _170.ConsensusStateProtoMsg): _170.ConsensusState;
                    toProto(message: _170.ConsensusState): Uint8Array;
                    toProtoMsg(message: _170.ConsensusState): _170.ConsensusStateProtoMsg;
                };
                Misbehaviour: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _170.Misbehaviour;
                    isSDK(o: any): o is _170.MisbehaviourSDKType;
                    isAmino(o: any): o is _170.MisbehaviourAmino;
                    encode(message: _170.Misbehaviour, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _170.Misbehaviour;
                    fromJSON(object: any): _170.Misbehaviour;
                    toJSON(message: _170.Misbehaviour): unknown;
                    fromPartial(object: Partial<_170.Misbehaviour>): _170.Misbehaviour;
                    fromAmino(object: _170.MisbehaviourAmino): _170.Misbehaviour;
                    toAmino(message: _170.Misbehaviour): _170.MisbehaviourAmino;
                    fromAminoMsg(object: _170.MisbehaviourAminoMsg): _170.Misbehaviour;
                    toAminoMsg(message: _170.Misbehaviour): _170.MisbehaviourAminoMsg;
                    fromProtoMsg(message: _170.MisbehaviourProtoMsg): _170.Misbehaviour;
                    toProto(message: _170.Misbehaviour): Uint8Array;
                    toProtoMsg(message: _170.Misbehaviour): _170.MisbehaviourProtoMsg;
                };
                Header: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _170.Header;
                    isSDK(o: any): o is _170.HeaderSDKType;
                    isAmino(o: any): o is _170.HeaderAmino;
                    encode(message: _170.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _170.Header;
                    fromJSON(object: any): _170.Header;
                    toJSON(message: _170.Header): unknown;
                    fromPartial(object: Partial<_170.Header>): _170.Header;
                    fromAmino(object: _170.HeaderAmino): _170.Header;
                    toAmino(message: _170.Header): _170.HeaderAmino;
                    fromAminoMsg(object: _170.HeaderAminoMsg): _170.Header;
                    toAminoMsg(message: _170.Header): _170.HeaderAminoMsg;
                    fromProtoMsg(message: _170.HeaderProtoMsg): _170.Header;
                    toProto(message: _170.Header): Uint8Array;
                    toProtoMsg(message: _170.Header): _170.HeaderProtoMsg;
                };
                Fraction: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _170.Fraction;
                    isSDK(o: any): o is _170.FractionSDKType;
                    isAmino(o: any): o is _170.FractionAmino;
                    encode(message: _170.Fraction, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: import("..").BinaryReader | Uint8Array, length?: number): _170.Fraction;
                    fromJSON(object: any): _170.Fraction;
                    toJSON(message: _170.Fraction): unknown;
                    fromPartial(object: Partial<_170.Fraction>): _170.Fraction;
                    fromAmino(object: _170.FractionAmino): _170.Fraction;
                    toAmino(message: _170.Fraction): _170.FractionAmino;
                    fromAminoMsg(object: _170.FractionAminoMsg): _170.Fraction;
                    toAminoMsg(message: _170.Fraction): _170.FractionAminoMsg;
                    fromProtoMsg(message: _170.FractionProtoMsg): _170.Fraction;
                    toProto(message: _170.Fraction): Uint8Array;
                    toProtoMsg(message: _170.Fraction): _170.FractionProtoMsg;
                };
            };
        }
    }
    const ClientFactory: {
        createLCDClient: ({ restEndpoint }: {
            restEndpoint: string;
        }) => Promise<{
            cosmos: {
                auth: {
                    v1beta1: import("../cosmos/auth/v1beta1/query.lcd").LCDQueryClient;
                };
                authz: {
                    v1beta1: import("../cosmos/authz/v1beta1/query.lcd").LCDQueryClient;
                };
                bank: {
                    v1beta1: import("../cosmos/bank/v1beta1/query.lcd").LCDQueryClient;
                };
                base: {
                    node: {
                        v1beta1: import("../cosmos/base/node/v1beta1/query.lcd").LCDQueryClient;
                    };
                    tendermint: {
                        v1beta1: import("../cosmos/base/tendermint/v1beta1/query.lcd").LCDQueryClient;
                    };
                };
                circuit: {
                    v1: import("../cosmos/circuit/v1/query.lcd").LCDQueryClient;
                };
                consensus: {
                    v1: import("../cosmos/consensus/v1/query.lcd").LCDQueryClient;
                };
                distribution: {
                    v1beta1: import("../cosmos/distribution/v1beta1/query.lcd").LCDQueryClient;
                };
                feegrant: {
                    v1beta1: import("../cosmos/feegrant/v1beta1/query.lcd").LCDQueryClient;
                };
                gov: {
                    v1: import("../cosmos/gov/v1/query.lcd").LCDQueryClient;
                    v1beta1: import("../cosmos/gov/v1beta1/query.lcd").LCDQueryClient;
                };
                group: {
                    v1: import("../cosmos/group/v1/query.lcd").LCDQueryClient;
                };
                mint: {
                    v1beta1: import("../cosmos/mint/v1beta1/query.lcd").LCDQueryClient;
                };
                nft: {
                    v1beta1: import("../cosmos/nft/v1beta1/query.lcd").LCDQueryClient;
                };
                params: {
                    v1beta1: import("../cosmos/params/v1beta1/query.lcd").LCDQueryClient;
                };
                staking: {
                    v1beta1: import("../cosmos/staking/v1beta1/query.lcd").LCDQueryClient;
                };
                tx: {
                    v1beta1: import("../cosmos/tx/v1beta1/service.lcd").LCDQueryClient;
                };
                upgrade: {
                    v1beta1: import("../cosmos/upgrade/v1beta1/query.lcd").LCDQueryClient;
                };
            };
            ibc: {
                applications: {
                    interchain_accounts: {
                        controller: {
                            v1: _252.LCDQueryClient;
                        };
                        host: {
                            v1: _253.LCDQueryClient;
                        };
                    };
                    transfer: {
                        v1: _254.LCDQueryClient;
                    };
                };
                core: {
                    channel: {
                        v1: _255.LCDQueryClient;
                    };
                    client: {
                        v1: _256.LCDQueryClient;
                    };
                    connection: {
                        v1: _257.LCDQueryClient;
                    };
                };
            };
        }>;
    };
}
